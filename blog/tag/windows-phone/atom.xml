<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: windows phone | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/tag/windows-phone/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2017-04-29T00:02:01+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thanks to Everyone Who Attended Our Talk at Microsoft India, Hyderabad]]></title>
    <link href="http://rahulpnath.com/blog/thanks-to-everyone-who-attended-our-talk-at-microsoft-india-hyderabad/"/>
    <updated>2014-06-18T00:22:37+00:00</updated>
    <id>http://rahulpnath.com/blog/thanks-to-everyone-who-attended-our-talk-at-microsoft-india-hyderabad</id>
    <content type="html"><![CDATA[<p>Thanks to everyone who attended our(<a href="https://twitter.com/techgd">Gautam</a> and mine) talk on Getting Started with Windows Phone and Store application on June 18, Tuesday as part of the Readiness training at Microsoft. Special thanks to <a href="https://twitter.com/vamsitp">Vamsi</a> for assisting us throughout. I hope you all enjoyed the session as much as we did. Here are some follow up information that might help you on the way forward. Since the intended audience are from testing and UX the follow up material is more aligned towards that.</p>

<ul>
<li><p>In case you would like to have a deeper understanding on the MVVM pattern, and how it helps us, the below links should be useful</p>

<ul>
<li><p><a href="http://msdn.microsoft.com/en-us/magazine/dn463790.aspx">Writing a Testable Presentation Layer with MVVM</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/TechDays/Techdays-2014-the-Netherlands/Using-MVVM-So-You-Can-Write-Better-Code-and-Less-Code">Using MVVM So You Can Write Better Code and Less Code</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/MIX/MIX11/OPN03">Deep Dive MVVM</a></p></li>
</ul>
</li>
<li><p>MVVM is also helpful in Unit Testing improving the overall maintainability of the code too.</p>

<ul>
<li><a href="http://channel9.msdn.com/Events/Build/2012/3-017">Unit Testing Windows Store Apps</a></li>
</ul>
</li>
<li><p>Check out how you can create automated tests and also on the Coded UI support</p>

<ul>
<li><p><a href="http://channel9.msdn.com/events/TechEd/NorthAmerica/2014/DEV-B347#fbid=">Automated Testing of XAML-Based Windows Phone Applications</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/Build/2013/3-323">Automated Testing of XAML-Based Windows Store Apps</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/visualstudioalm/archive/2014/04/05/using-coded-ui-to-test-xaml-based-windows-phone-apps.aspx">Using Coded UI to test XAML-based Windows Phone apps</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/cdndevs/archive/2014/05/05/save-time-money-and-your-sanity-coded-ui-testing-for-the-windows-phone-part-1.aspx">Save Time, Money, and Your Sanity: Coded UI Testing for the Windows Phone</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/using-coded-ui-to-test-xaml-based-windows-store-apps.aspx">Using Coded UI to test XAML-based Windows Store apps</a></p></li>
</ul>
</li>
<li><p>Look into the tools and ways to analyze and improve performance</p>

<ul>
<li><p><a href="http://channel9.msdn.com/Events/MIX/MIX11/DVC01">Analyzing and Improving Windows Phone Application Performance</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/3-578">Diagnosing Issues in Windows Phone XAML Apps Using Visual Studio</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/4-557">How to Analyze Performance Issues in Your Windows and Windows Phone Apps</a></p></li>
</ul>
</li>
<li><p>See how app crashes information can be tracked from a deployed app and how it can used and inferred upon to fix  issues. This is very important so that you can improve on the app reliability and performance for further updates.</p>

<ul>
<li><a href="http://channel9.msdn.com/Events/Build/2014/3-657">Avoiding Windows Store App Failures</a></li>
</ul>
</li>
<li><p>Learn about the security features and how it is important</p>

<ul>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/2-531">New Security Features for Windows Phone</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/WIN-B357#fbid=">Windows Phone 8.1 Security and Management: The Right Choice for the Enterprise!</a></p></li>
</ul>
</li>
</ul>


<p>Stay in touch. You can find the presentation slides <a href="https://github.com/rahulpnath/Speaking/tree/master/Windows%20Phone%20And%20Store%20Apps">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started with PhoneGap: Developing for Windows Phone and Android]]></title>
    <link href="http://rahulpnath.com/blog/getting-started-with-phonegap-developing-for-windows-phone-and-android/"/>
    <updated>2014-03-04T16:06:40+00:00</updated>
    <id>http://rahulpnath.com/blog/getting-started-with-phonegap-developing-for-windows-phone-and-android</id>
    <content type="html"><![CDATA[<p>With lots of devices and operating systems out there, developing a native application for each of these platforms might not always be an option for many businesses, because of the time, effort and money that would be required to be on all platforms. <a href="http://phonegap.com/">PhoneGap</a> is one option that could be explored in this case, which helps to develop hybrid applications that can exists on a <a href="http://phonegap.com/about/feature/">variety of platforms</a> integrating with platform specific features. <a href="http://cordova.apache.org/">Apache Cordova</a> is what powers PhoneGap and is free and open source under the <a href="http://phonegap.com/about/license/">Apache License, Version 2.0</a>.</p>

<p>Setting up PhoneGap is pretty easy and direct with its integration with <a href="http://nodejs.org/">node.js</a>. Lets take a look on how to setup our project from scratch.</p>

<ol>
<li><p>Install <a href="http://nodejs.org/">node.js</a></p></li>
<li><p>Install PhoneGap using node.js</p>

<p> <strong><em>npm install –g phonegap</em></strong></p>

<p> npm is the official node package manager</p>

<p> -g installs the package in global scope.If you face any error while installing the package(since I happened to, I guess because I closed the console while it was installing the first time) you can try following the below steps, which helped me solve it.</p>

<p> <strong>            npm list –g</strong></p>

<p> If the above step shows that there is a <em>unmet dependency phonegap</em>, then you could follow the below steps</p>

<p> <strong>            npm rm phonegap</strong></p>

<p> <strong>            npm cache clear</strong></p>

<p> Try installing PhoneGap again using <em>npm install –g phonegap</em></p></li>
<li><p>Install Cordova
<strong>npm install –g cordova</strong></p></li>
<li><p>Now we have everything setup for PhoneGap project. Lets create the project. Navigate to your project root folder and create a project.</p>

<p> <strong>phonegap create <appname></strong></p>

<p> This will create the basic folder structure for your PhoneGap project which looks like below.</p>

<p> <img class="left" src="/images/cordova_folder_structure.png" alt="cordova_folder_structure" /></p>

<p> <strong>.cordova: </strong>This directory contains files related to cordova.</p>

<p> <strong>merges: </strong>This directory contains platform specific assets. A sub-directory for each platform is created inside here, whenever  a new platform is created. This sub-directory mirrors the structure of the <em>www </em>directory, which allows to add platform specific files to appropriate folders.</p>

<p> <strong>platforms: </strong>This directory contains native code for each of the <a href="http://docs.phonegap.com/en/edge/guide_platforms_index.md.html">supported platforms</a>. By default this is empty and we need to add the required platforms, which we will see later.</p>

<p> <strong>plugins: </strong>This directory contains the <a href="https://build.phonegap.com/plugins">plugins</a> that provide extra support to interface with each of the native platforms.</p>

<p> <strong>www: </strong>This directory contains the primary files that is required for your project/application. This gets copied into each of the platform specific projects in <em>platforms </em>folder whenever a build is performed. So this is where your core development would happen and all your cross-platform code would live in.</p></li>
<li><p>Lets now create a native project, for windows phone.</p>

<p> <strong>cordova platform add wp8</strong></p>

<p> This will add a wp8 folder inside <em>platforms </em>and also <em>merges. </em>The one in platforms will have the native project setup with all the files in <em>www</em> folder copied into it. You can open up the sln file in Visual Studio and build and run. We have the application up and running on our first platform!
 Lets add in some code so that it makes sense as an application. We will stick on with our usual 500px api and show off some beautiful pictures. I have added jquery from nuget in Visual studio and also updated the files to show pictures from 500px, which I would not be explaining here as it is just some html/js/css..(Updated files in www folder can later be copied into the root <em>www </em>folder later. Need to figure out the correct way on how to go about this. In case you know how, please do leave a comment. Would be more than happy to learn.)</p></li>
<li><p>Once we copy out the updated files in platform specific <em>www </em>folder into root www folder we can go ahead and add android platform.</p>

<p> <strong>cordova platform add android</strong></p>

<p> This creates an android folder inside <em>platforms</em> and <em>merges</em> folder. You can open up the project in your IDE(<a href="https://www.eclipse.org/downloads/">Eclipse</a>, <a href="http://www.jetbrains.com/idea/">IntelliJ</a> or <a href="http://developer.android.com/sdk/installing/studio.html">Android Studio</a> etc) for android, build and run. We have the application up and running also on the second platform!
 For android you would need to make sure the config files are updated with the required permissions for accessing internet and also to enable <a href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing">CORS</a>. By default internet permissions are enabled, you would only have to update the config for cors(<em>origin header</em>) as it defaults to ‘<em>127.0.0.1*</em>’. I have updated this to just ‘*’, inside <strong><em>res/xml/config.xml </em></strong>(since there is one config.xml inside assets/www folder too).If you are new to android platform, which I was then you can check out here on <a href="http://rahulpnath.com/blog/setting-up-the-development-environment-for-phonegap-on-android/">Setting up the development environment for phonegap on android</a>.
 At times I did have the Android emulator not moving past the &lsquo;<em>Connecting to Device</em>&rsquo; screen while running the application. I just killed all the emulators and started a fresh one from AVD (Android Virtual Device) Manager, unchecking &lsquo;launch from snapshot&rsquo; and &lsquo;save to snapshot&rsquo; options.</p></li>
</ol>


<p>With PhoneGap/Cordova, you can see how easy it is to have an app in various platforms of your choice. We have not seen on how to utilize any of the platform specific features of devices using PhoneGap, but I am sure that you should be able to figure out from here, now that you have all that you need up and running.</p>

<p><img src="/Cordova_WP.jpg" alt="Cordova_WP" />
<img src="/Cordova_Android.jpg" alt="Cordova_Android" /></p>

<p>The source code for the sample is available <a href="https://github.com/rahulpnath/Blog/tree/master/GettingStartedOnPhoneGap">here</a>. Don’t forget to update the <a href="http://developers.500px.com/">api key for 500px</a> before you run the application.
<a href="http://www.codeproject.com" style="display:none" rel="tag">CodeProject</a></p>
]]></content>
  </entry>
  
</feed>
