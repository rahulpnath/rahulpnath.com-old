<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: productivity | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/category/productivity/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2016-10-13T03:50:50+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Staying Productive Offline]]></title>
    <link href="http://rahulpnath.com/blog/staying-productive-offline/"/>
    <updated>2016-10-10T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/staying-productive-offline</id>
    <content type="html"><![CDATA[<p>Last month I was in Trivandrum (Kerala, India) for a month&rsquo;s vacation. This was also my first trip back to India after <a href="http://www.rahulpnath.com/blog/finding-a-job-abroad/">moving to Sydney</a>. While in India I chose not to have a mobile connection and be offline on the go (at home I had a broadband connection). So while traveling places or moving around I had <a href="http://www.rahulpnath.com/blog/review-two-months-and-counting-android-and-nexus-5/">my mobile</a> in <a href="https://en.wikipedia.org/wiki/Airplane_mode">airplane mode</a>. But even then there was time that I resorted to my mobile to spend time. When traveling by bus/train, afternoons in hotels (when everyone rests) etc, I had a lot of &lsquo;me time&rsquo;.</p>

<p><img  alt="Living an offline Life" src="/images/offlinelife.png"/></p>

<p>Below are some of the things that I have my phone geared up for offline mode.</p>

<h4><strong>Blogging</strong></h4>

<p>Blogging is one of the things that I enjoy doing most these days. To keep up with <a href="http://www.rahulpnath.com/blog/morning_routine/">my routine</a>, I try to blog every day to keep up with <a href="/blog/blogging-schedule/">my schedule</a>. I have modified <a href="/blog/optimizing-octopress-workflow-for-new-posts/">my blogging workflow</a> to give the flexibility to blog from any of my devices. Currently, I am writing this blog while on a train and &lsquo;<a href="https://en.wikipedia.org/wiki/Online_and_offline">disconnected</a>&rsquo;. When back home and connected, all the offline content synchronizes through Dropbox. The content written while offline is now available for <a href="/blog/continuos-delivery-of-octopress-blog-using-travisci-and-docker/">publishing from my laptop</a>. Making writing accessible from everywhere helps me to stick with my <a href="http://www.rahulpnath.com/blog/morning_routine/">mini habits</a>.</p>

<h4><strong>Reading</strong></h4>

<p>I always have books, articles downloaded and available for offline reading. For books, I use the Kindle application. Most of the time I have my Kindle for reading, if not I use the mobile application. For blog posts and articles I use Pocket. Whenever I am connected and find interesting posts to read later, I <a href="https://getpocket.com/add/?ep=1">Add to Pocket</a>. Pocket&rsquo;s mobile application <a href="https://help.getpocket.com/article/960-using-pocket-offline-on-android">downloads articles</a> and makes them available for offline reading.</p>

<p><img alt="Amazon Kindle and Pocket for offline reading" src="/images/offlinelife_reading.png"/></p>

<h4><strong>Game</strong></h4>

<p>I usually do not have many games on my mobile. But in case I feel bored I play the <a href="http://mashable.com/2014/09/25/chrome-t-rex-game/">game available on Chrome browser</a> (only in offline mode). When offline a T. Rex dinosaur comes up in the browser with the message &lsquo;Unable to connect to the Internet&rsquo;. Tapping on the dinosaur starts the game.</p>

<p><img  alt="Google Chrome offline T Rex game" src="/images/offlinelife_chrome_game.gif"/></p>

<h4><strong>To-Do List</strong></h4>

<p>Offline time is good to manage your To-Do lists and <a href="http://www.rahulpnath.com/blog/morning_routine/">do a brain dump</a>. I use Todoist to manage my tasks and activities. The <a href="https://support.todoist.com/hc/en-us/articles/205383721-Apps">Todoist mobile application</a> stores all tasks offline. It allows adding tasks when disconnected and synchronizes it to the server when connected. I also use OneNote for capturing notes which also has an offline mode.</p>

<h4><strong>Trip Planner</strong></h4>

<p>For short local trips, the recently launched <a href="https://get.google.com/trips/">Google Trips</a> is useful. Google Now already shows trip summaries and alerts on the home page. Google Trips takes this to the next level and allows to manage all trip data at one place. It helps collate all the travel booking in one place and makes it available in offline mode.</p>

<p><img  alt="Google Trips for managing trip data offline" src="/images/offlinelife_trips.png"/></p>

<p>These are the common things that I have my mobile setup for offline mode. I have had this setup while I was in Sydney, as I try to stay disconnected when commuting to work. Staying off the internet helps me get more things done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automatic Deployment of Future Posts With Octopress]]></title>
    <link href="http://rahulpnath.com/blog/automatic_deployment_of_future_posts_with_octopress/"/>
    <updated>2016-09-12T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/automatic_deployment_of_future_posts_with_octopress</id>
    <content type="html"><![CDATA[<p>Since the start of this year, I have been trying to blog to a schedule and publish posts more often. The goal that I have set myself with is to post four posts a month, preferably one each week. I have been sticking to it till now, and I hope it continues. Initially, I did not have this upper limit on the number of posts in a month. In the month of March 2016, I went a bit aggressive and published nine articles. It made me think more about setting an upper limit on the number of posts so that I don&rsquo;t end up having higher expectations out of myself.</p>

<h3>Staying Ahead</h3>

<p>Having published nine posts, also made me realize that I could write faster if required and have posts ready for future. It will help me to stay ahead of the posting schedule and give me some off-time when I need it. But this also presented me with a new problem on how to manage and schedule posts for the future.</p>

<blockquote><p><em>The more I automate the mundane tasks of blogging, the more I can concentrate on the writing part</em></p></blockquote>

<h3>Jekyll Future flag</h3>

<p><a href="http://octopress.org/docs/">Octopress</a> is over <a href="https://jekyllrb.com/">Jekyll</a> and it provides all the capabilities that Jekyll provides. The <a href="https://jekyllrb.com/docs/configuration/"><em>future</em> flag</a> in Jekyll indicates <strong><em>whether or not to publish posts or collection documents with a future date.</em></strong> With the flag set to false, Jekyll will not generate posts that have a date in the future. It works perfectly for me as all I need to do is to publish posts into the <em>_posts</em> directory once it&rsquo;s ready, with a date in the future. I have a <a href="http://www.rahulpnath.com/blog/optimizing-octopress-workflow-for-new-posts/">draft workflow</a>, which puts posts into a <em>_drafts</em> folder and move them into the <em>_posts</em> folder once ready. I updated the rake script that publishes drafts as posts, to take in a publish date and use that to update the post date.</p>

<pre><code class="Ruby">task :publish_draft do
...
puts "Publish Date?"
publishDateString = STDIN.gets.chomp
publishDate = DateTime.parse(publishDateString)
...
dest = "#{source_dir}/#{posts_dir}/#{publishDate.strftime('%Y-%m-%d')}-#{filename}"
puts "Publishing post to: #{dest}"
File.open(source) { |source_file|
contents = source_file.read
contents.gsub!(/^thisIsStillADraft:$/, "date: #{publishDate.strftime('%Y-%m-%d')}\ncompletedDate: #{DateTime.now.strftime('%Y-%m-%d %H:%M:%S %z')}")
...      
</code></pre>

<p>The rake script appends the publish date to the post file name and also the yaml date information and moves it from the <em>_drafts</em> to <em>_posts</em> folder. It also adds a completedDate set to the current time with the timezone information, just for reference.</p>

<h3>Integrating with Travis CI</h3>

<p>I have the <a href="/blog/continuos_delivery_of_octopress_blog_using_travisci_and_docker">deployment of my blog automated via Travis CI</a>, which builds and deploys the site when committing to the <a href="https://github.com/rahulpnath/rahulpnath.com">GitHub repository</a>. For future posts since there might not be a commit on the publish date, I need to trigger the build on those days, to publish the posts scheduled. The <a href="https://azure.microsoft.com/en-us/services/scheduler/">Azure Scheduler</a> enables scheduling requests and also provides out of the box support to invoke web service endpoints over HTTP/HTTPS. <a href="https://docs.travis-ci.com/api">Travis CI exposes an API</a> to interact with the build system and is the same API that the official Web interface uses. The API supports <a href="https://docs.travis-ci.com/user/triggering-builds">triggering builds</a> by making a POST request with an API token and the build details. The API has <a href="https://github.com/travis-ci/travis-ci/issues/5101">an existing bug</a> that requires the slash separating username and repository name in the trigger URL be encoded(%2F). Azure, however, does not like this and treats it as an invalid URL with the bellow error.</p>

<p><img class="center" alt="Azure Scheduler Encoded URL error" src="/images/blogtrigger_scheduler_url_error.png" /></p>

<p>The only way now is to have to custom write this code and have it scheduled. I chose the one with the least work involved - Azure Automation. <a href="https://azure.microsoft.com/en-us/services/automation/">Azure Automation</a> allows to create Run books and automatically trigger it on a schedule. The Azure Automation has a <a href="https://azure.microsoft.com/en-us/pricing/details/automation/">pricing plan with 500 minutes free</a> Job run time in a month, which meets my requirements. I created a <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-runbook-types/#powershell-runbooks">PowerShell script</a> and added in the token (<em>TravisToken</em>) and the build URL (<em>TravisBuildUrl</em>) as <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-runbook-input-parameters/">parameters to the script</a>.</p>

<pre><code class="powershell">$travisBlogTriggerApiUrl = Get-AutomationVariable -Name 'TravisBuildUrl'
$token = Get-AutomationVariable -Name 'TravisToken'

$body = "{""request"": {""message"":""Scheduled Automated build"",""branch"":""master""}}"
$headers = @{
    'Content-Type' = 'application/json'
    'Accept' = 'application/json'
    'Travis-API-Version' = '3'
    'Authorization' = 'token ' + $token
}

Invoke-WebRequest -Method Post $travisBlogTriggerApiUrl -Body $body -Headers $headers -UseBasicParsing
</code></pre>

<p>The script runs on a schedule every day and triggers the Travis CI build. It deploys the latest generated site to Azure WebApp that hosts the site. Any posts scheduled for the current date gets picked up by Jekyll and included in the site generation.</p>

<p><figure>
    <img alt="Automatic Deployment of Future Posts With Octopress" src="/images/blog_scheduled.png" />
    <figcaption><em>Scheduler triggers TravisCI build. For details on how TravisCI is set up check <a href="http://rahulpnath.com/blog/continuos-delivery-of-octopress-blog-using-travisci-and-docker/">Continuos Delivery of Octopress Blog Using TravisCI and Docker</a></em></figcaption>
</figure></p>

<h3>Post to Social Media</h3>

<p>With the posts getting deployed automatically, I want to update all my social networks. I already use <a href="https://buffer.com/">Buffer</a> to post updates to all social networks. Buffer is like &lsquo;<strong><em>Write Once, Post Everywhere</em></strong>&rsquo; kind of service. It clubs all your social media profiles into one place and allows you to post to all of them by just writing it once.</p>

<p><a href="https://ifttt.com/recipes">IFTTT</a>(&lsquo;<em>If This Then That</em>&rsquo;) is a service that helps connect different apps and devices together based on a trigger. As the name says, you can trigger an action based on a trigger. IFTTT has many <a href="https://ifttt.com/channels">Channels</a> that can act as a source of the trigger. In my case, the trigger is a post getting published and I can hook into that event using the <a href="https://ifttt.com/feed">Feed Channel</a>. The feed channel has an option to trigger when a <a href="https://ifttt.com/channels/feed/triggers/5-new-feed-item">new item is available</a> on the feed. I use this to trigger an update to Buffer. <a href="https://ifttt.com/buffer">Buffer</a> is available as a channel on IFTTT but allows only update to one of the connected accounts in Buffer, which requires me to setup a recipe per social media account. I chose to use <a href="https://buffer.com/guides/email">update via email feature</a> in Buffer. It allows me to have just one recipe in IFTTT to update to all of my connected profiles in Buffer.</p>

<p><img class="center" alt="Trigger Buffer Email When New Post is Published" src="/images/blog_ifttt.png" /></p>

<p>With the Automated publishing of posts and ability to schedule them, I can concentrate more on just the writing part. I no longer have to push out posts manually. I had never thought that I would be scheduling posts in the future. But now that it is happening it&rsquo;s a great feeling when there are posts for a few weeks ahead all ready to go.</p>

<p><em><a href="http://www.rahulpnath.com/blog/morning_routine/">My Morning Routine</a> was the first posts to be deployed using the schedule.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Continuos Delivery of Octopress Blog Using TravisCI and Docker]]></title>
    <link href="http://rahulpnath.com/blog/continuos-delivery-of-octopress-blog-using-travisci-and-docker/"/>
    <updated>2016-09-01T04:11:12+00:00</updated>
    <id>http://rahulpnath.com/blog/continuos-delivery-of-octopress-blog-using-travisci-and-docker</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a while since I have wanted to deploy my blog automatically whenever there is a new commit pushed into the associated <a href="https://github.com/rahulpnath/rahulpnath.com">git repository</a>. I use Octopress as my blog engine and have been <a href="http://www.rahulpnath.com/blog/optimizing-octopress-workflow-for-new-posts/">tweaking it to my blogging workflow</a>. Octopress is a static blog generator built over Jekyll. So anytime I make any updates to the blog, I need to build the blog with the accompanying rake tasks and push the generated output (HTML, JavaScript, and CSS) to an Azure Web App that hosts my blog. For this I use the <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-deploy/#continuousdeployment">git deployment feature</a> of web apps, so just pushing the built output to a git repo (branch) deploys it to my website. As you see every time, I make a change I have to build the site and push it to the git repository and this can be automated. Since Octopress is in Ruby, I decided to use <a href="https://travis-ci.org/">Travis CI</a> for the build and deploy.</p>

<h3>Local Build Environment with Docker</h3>

<p>I am on an older repository fork of Octopress and have not updated to latest version. So it has hard dependencies with specific versions of gem packages that it needs and also on the Ruby and Jekyll version. So every time I change laptop it&rsquo;s difficult to set up the blog environment. In the past, I manually installed the dependencies whenever I got a new laptop. As changing laptop does not happen frequently, I had been delaying creating any script for this. But now since I had to setup the Travis build environment, I thought of also having a local build environment to test before pushing it up to Travis. Travis provides a Docker image that matches exactly their build environment.</p>

<p>Setting up Docker is just a few steps:</p>

<ol>
<li><a href="https://docs.docker.com/docker-for-windows/">Install</a> the Docker components</li>
<li>Load the <a href="https://quay.io/organization/travisci">Docker image</a></li>
</ol>


<pre><code class="text">docker run -it -p 4000:4000 quay.io/travisci/travis-ruby /bin/bash
</code></pre>

<p>Once in the container, you can run the same build scripts that you manually run yo deploy and check. I had a few issues with the gem packages and <a href="https://github.com/rahulpnath/rahulpnath.com/commit/abefbf58e3696384c7931d5a4918239a41700106#diff-8b7db4d5cc4b8f6dc8feb7030baa2478">fixed it by specifying hard package dependency</a>. To launch the site hosted in Docker from host system <a href="https://github.com/wsargent/docker-cheat-sheet#exposing-ports">I expose incoming ports through the host container</a>. Once I have the local server running in the docker container (in port 4000) I can access it via <em>localhost:4000</em> from my host computer.</p>

<h3>Post Dates and TimeZones</h3>

<p>When building from the container, I noticed that the dates of posts were off by 1. For posts that were on month start (like Aug 1), it started coming up in July, on the archive page. After a bit of investigation, I realized that Jekyll parses the date time from the post and converts them into local system time. The container was running in UTC and when generating the site it converted post DateTime to UTC. All the posts that I had written after coming to Sydney had an offset of +1000 (or +1100) and most were published early in the morning. So it converted those posts to the previous date.
Since I am not that worried about the time zone of the post, I decided to remove it. I removed timezone information getting set for new posts in my Rake scripts. For the existing posts, <a href="https://github.com/rahulpnath/rahulpnath.com/commit/1d8902fa69a1aad9ad6615ee3c47e3474b6cd263">I removed all the timezone information from the <em>datetime</em> YAML header in the posts</a>. I set the config.yml to built in UTC irrespective of the system timezone that it is getting build.</p>

<h3>Setting up TravisCI</h3>

<p>Setting up automated build on Travis CI is smooth and easy process TDK. I just added a travis.yml with the &lsquo;<em>rake generate</em>. TDK The post build script does the following</p>

<ul>
<li>Clones the current statically generated code from my <em>blog</em> branch.</li>
<li>Perform a rake deploy that updates the cloned code above with the latest site.I updated the existing rake deploy to use GitHub token in push URL. As I did not want the token to be logged on to the Travis console I redirect the output using <em><a href="http://askubuntu.com/questions/12098/what-does-outputting-to-dev-null-accomplish-in-bash-scripts">&amp;> /dev/null</a></em>.</li>
</ul>


<pre><code class="yml">language: ruby
rvm:
  - 1.9.3
branches:
  only:
  - master
script: 
  bundle exec rake generate;
after_success: |
  if [ -n "$GITHUB_PUSH_URL" ]; then
    cd "$TRAVIS_BUILD_DIR"
    git clone -b blog --single-branch https://github.com/rahulpnath/rahulpnath.com.git _azure &amp;&gt; /dev/null
    bundle exec rake gitdeploy["$GITHUB_PUSH_URL"] &amp;&gt; /dev/null
    echo "Deployed!"
  fi
</code></pre>

<p>Every time I make a commit to the GitHub master branch, the automated build triggers and deploys the latest generated site.</p>

<h3>Current Blogging Workflow <a href="https://travis-ci.org/rahulpnath/rahulpnath.com"><img src="https://travis-ci.org/rahulpnath/rahulpnath.com.svg?branch=master" alt="Build Status" /></a></h3>

<p><img class="center" alt="Continuos Delivery of Octopress Blog" src="/images/blog_ci.PNG" /></p>

<ul>
<li>Write posts on my phone or laptop. (<a href="http://www.rahulpnath.com/blog/optimizing-octopress-workflow-for-new-posts/">Using Dropbox to sync posts across devices</a>)</li>
<li>Publish and Push to Github from laptop</li>
<li>Travis builds triggered by Github webhook</li>
<li>Travis pushes back generated site into Github (<em><a href="https://github.com/rahulpnath/rahulpnath.com/tree/blog">blog branch</a></em>).</li>
<li>Azure Web App triggers automated deployment from Github.</li>
</ul>


<p>With the automated deployment, I have one less thing to take care of when writing posts. The whole process might feel a bit complicated, but it is not. It is just that I have been tweaking few things to ease blogging. And since I am a programmer, I like hacking things. If you are new to blogging you do not need them and don&rsquo;t get overwhelmed (if at all you are). All you need to make sure is to <a href="http://www.rahulpnath.com/blog/get-started-with-your-blog/">have a blog</a> and you <a href="http://www.rahulpnath.com/blog/own-your-urls/">own the URL</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Morning Routine]]></title>
    <link href="http://rahulpnath.com/blog/morning_routine/"/>
    <updated>2016-08-16T05:00:35+00:00</updated>
    <id>http://rahulpnath.com/blog/morning_routine</id>
    <content type="html"><![CDATA[<p>Humans are <a href="https://www.youtube.com/watch?v=zdGbHY9VKVM">creatures of habit</a> and things work well if made as a routine. It&rsquo;s what you build as your daily plan that defines what you end up achieving in the day and in turn with life.</p>

<blockquote><p><em>If you are a late night person, you can read &lsquo;morning&rsquo; as &lsquo;late night&rsquo; - the focus here is routine!</em></p></blockquote>

<p><a href="https://www.pexels.com/photo/coffee-cup-notebook-pen-64775/">
<img  alt="Win your day, create a morning routine" src="/images/morning_routine.jpg"/>
</a></p>

<p>A morning routine is nothing but a sequence of actions regularly followed. I have tried switching my routine too, to late in the night a few times but found that mornings work better for me. But this could be different for you, so stick to the time of day that works for you. Before going to how my morning routine looks like (which I just started a week back), I will explain how I made the plan for the routine.</p>

<h3>Brain Dump</h3>

<p>At any point in time, there are a lot of things in my mind and things that I kept committing to myself and others. It is not possible to keep up with everything that I wish to do. So the very first thing to do is to dump everything out onto to paper and then decide what needs attention. The <a href="http://gettingthingsdone.com/wp-content/uploads/2014/10/Mind_Sweep_Trigger_List.pdf">Incompletion Trigger List</a> assists to get everything out of your mind onto paper. It&rsquo;s a good idea to block some time of yours to perform this exercise and give it all the attention it needs. At times it helps to <strong><em>Slow Down to Go Fast</em></strong>.</p>

<p><img  alt="Slow down, to go faster" src="/images/morningroutine_slow_down.jpg"/></p>

<h3>Most Important Task (MIT)</h3>

<p>If you are following along, hope the brain dump helped to flush out all that was there in your mind. This exercise needs to be occasionally done (maybe every 2-3 months) to stay clear and stay on top of things. I was sure that I could not do everything on that list after the brain dump. Now comes the hard part of choosing what matters to you and choosing those that aligns well with your goals. For the morning routine, I stuck to items from the brain dump that fall under &lsquo;Personal Projects&rsquo; category (as highlighted in the below image).</p>

<p><img  alt="Choosing tasks for morning routine" src="/images/morning_routine_MIT.png"/></p>

<p>These are the items that matter to me and aligns to the short-long term goals that I have. Below is a part of my list.</p>

<pre><code class="text">Start Youtube channel
Become Pluralsight Author
Blogging
Learn Functional Programming
Learn Ruby
Open Source Contribution
Improving Writing Skills and Language
</code></pre>

<blockquote><p><em>The key is not to prioritize what’s on your schedule, but to schedule your priorities.</em></p>

<p><em>– <strong>Stephen Covey</strong></em></p></blockquote>

<p>Progressing towards all of these items on the list at the same time is not possible, as time available each day for achieving them is limited. I usually get around 2-3 hours a day of &lsquo;me time&rsquo;, provided I wake up at 4 in the morning (more on this shortly). The number of hours you have might differ, and you could choose those many items as you think you can fit in. But 3 is a good number to choose, as that helps to mix in a few different goals and gives the flexibility to shuffle around with them on a day. For me, it also means I roughly get around 40-60 minutes daily, for each item.</p>

<p>Currently, the ones that I have in my morning routine are:</p>

<ul>
<li>Blogging</li>
<li>Learn Functional Programming</li>
<li>Open Source Contribution</li>
</ul>


<h3>MITs to Mini Habits</h3>

<p>Having high-level short-long term goals is good, but does not provide anything actionable on a daily basis. It feels overwhelming to approach them because it does not give any sense of direction. So it&rsquo;s important that I have small actionable items that I can work on and progress towards achieving the goal.</p>

<blockquote><p><em>Break your goal into the smallest possible task that you can think of so that you don&rsquo;t feel to skip it</em></p></blockquote>

<p>For me, the mini habits look like this</p>

<ul>
<li>Write at least one sentence for the blog</li>
<li>Read at least one line about Functional Programming</li>
<li>Read at least one line of code of an Open Source Project</li>
</ul>


<p>The idea behind keeping it so small is just to start. It&rsquo;s very rare that I have stopped writing after writing a sentence or stopped reading after a line. The trouble is only with getting started - once done you can easily carry on for at least 20-30 minutes. Even if I make 2 out of the 3 of the above tasks, I take it as a success, which gives me some flexibility each day.</p>

<h3>Waking up Tricks</h3>

<p>There are days when <a href="https://en.wikipedia.org/wiki/Resistance_(creativity)">Resistance</a> beats me to it, and I don&rsquo;t get up to the routine. But I feel low on those days for not able to progress on my goals. So I try hard to have less of such days.</p>

<ul>
<li><p><strong>Alarm Phone Inside Pillow:</strong> I use <a href="http://www.bitspin.ch/">Timely</a> on a spare phone to set alarms.  Till a while back I used to keep the phone at the bedside while sleeping. But I noticed that I often ended up snoozing the alarm, at times even without full consciousness. So to make I <a href="http://www.rahulpnath.com/blog/waking-up-early-is-all-about-waking-up-to-an-alarm/">wake up to the alarm</a>, I now keep the phone buried inside my pillow with just the vibration. The vibration forces me to wake up and also removes the need for any alarm sound - my kid and wife does not get disturbed.</p></li>
<li><p><strong>Wear a Sweater:</strong> During winter, at times the cold beat me to it. It&rsquo;s hard to leave all the blankets and wake up to the cold. I started sleeping with the sweater, and I don&rsquo;t feel that cold when I wake up.</p></li>
<li><p><strong>Rationalize Against Resistance:</strong> However hard I try not to rationalize on getting up when the alarm sounds off, looking at the snooze button I end up rationalizing. Often I have found that when I try to use the tasks that I can achieve if I wake up, to motivate myself, I end up justifying that it can wait for tomorrow. Because there is no hard deadlines or accountability to anyone - it&rsquo;s just me!. Now I try just the opposite - Think about the resistance that is trying to force me to the bed and reassure myself that I should not fall to it. The &lsquo;me&rsquo; waking up after sleeping in is not going to like it then. So wake up!</p></li>
</ul>


<h3>My Routine</h3>

<ol>
<li><em>Wake at 4 am</em></li>
<li><em>Brush</em></li>
<li><em>Drink Water</em></li>
<li><em>Stretching</em></li>
<li><em>Review the tasks for the day (<a href="https://en.todoist.com/">Todoist</a>)</em></li>
<li><em>Mini Habits (2 or 3)</em></li>
<li><em>Wake up wife at 5:45 am</em></li>
<li><em>Continue Mini Habits (2 or 3)</em></li>
<li><em>Tea</em></li>
<li><em>Wake up Gautham at 7 am</em></li>
</ol>


<p>Having a morning routine has helped me focus more on things that matter and not wander from one task to another. It has also helped set a sense of direction to what I do every day and spent less time in thinking what to do. I find my days starting in gradually and not rushing into it, setting up the pace for the day. Hope this helps you too!</p>

<h4><strong>References</strong></h4>

<div>
      <div class="row">
        <div class="col-sm-6 col-md-3">
          <div class="thumbnail">
            <a href="http://amzn.to/2a3wpUc">
            <img src="http://rahulpnath.com/images/books_powerofhabit.jpg" data-holder-rendered="true" style="display: block;" >
             </a>
          </div>
        </div>
       <div class="col-sm-6 col-md-3">
          <div class="thumbnail">
          <a href="http://amzn.to/2ahrOcr" >
            <img src="http://rahulpnath.com/images/books_gtd.jpg" data-holder-rendered="true" style="display: block;">
            </a>
          </div>
        </div>
        <div class="col-sm-6 col-md-3">
          <div class="thumbnail">
           <a href="http://amzn.to/2aek2R5" >
            <img src="http://rahulpnath.com/images/books_warofart.jpg" data-holder-rendered="true" style="display: block;">
            </a>
          </div>
        </div>
     <div class="col-sm-6 col-md-3">
          <div class="thumbnail">
           <a href="http://zenhabits.net/" >
            <img src="http://rahulpnath.com/images/books_zenhabits.jpg" data-holder-rendered="true" style="display: block;">
           </a>
          </div>
        </div>
       </div>
       </div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git checkout TFS]]></title>
    <link href="http://rahulpnath.com/blog/git-checkout-tfs/"/>
    <updated>2016-04-15T05:23:08+00:00</updated>
    <id>http://rahulpnath.com/blog/git-checkout-tfs</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a year since using <a href="https://git-scm.com/">Git</a> as my mainstream version control system and I am loving it! Before Git, I had used Team Foundation Version Control (TFVC) for a very long time and was so used to it that I found Git a bit complex and overwhelming in the beginning. Team Foundation Server (TFS) is the whole product suite from Microsoft that provides source code management. Until TFS 2013, it supported only TFVC which is when it introduced <a href="https://blogs.msdn.microsoft.com/mvpawardprogram/2013/11/13/git-for-tfs-2013/">Git in TFS</a>. Even today people use TFS and TFVC synonymously (like in the title of this post) though they are not the same.</p>

<h3>Fundamental shift in thinking</h3>

<p>By design, Git is a Distributed VCS, whereas TFS is centralized one. It takes quite a while to get your head around this and what it actually means. By definition</p>

<blockquote><p><em><strong>TFVC</strong>: Uses a single, centralized server repository to track and version files. Local changes are always checked in to the central server where other developers can get the latest changes.</em></p>

<p><em><strong>Git</strong>: Git is a distributed version control system. Each developer has a copy of the source repository on their dev machine. Developers can commit each set of changes on their dev machine and perform version control operations such as history and compare without a network connection.</em></p></blockquote>

<p>You. may not see the real Distributed benefits if you are working off a central repository (hosted on a server like GitHub or Bitbucket) and using <a href="https://www.atlassian.com/git/tutorials/comparing-workflows/centralized-workflow">TFS way of development</a> :</p>

<p><em>Get latest code => Make your changes => Merge latest +> Check in (</em>Commit and push<em>)</em></p>

<p>The real power of Git is better understood when you start working disconnected, use branches to keep unrelated development activities separate and merge those into the main trunk (<em>master</em>) once comfortable. You get a local copy of the project and lets you make changes independent of all the other changes in the project.</p>

<blockquote><p><em>Git feels so lightweight and never gets in the way of doing things.</em></p></blockquote>

<h3>Make command line your friend</h3>

<p>If you are a UI savvy person then Git might a good starting point to start using the command line. At first, it definitely feels hard especially if you were TFS/Visual Studio users and might be tempted to use the GUI tools available (<a href="https://desktop.github.com/">GitHub Desktop</a> or <a href="https://www.sourcetreeapp.com/">SourceTree</a>)</p>

<blockquote><p><em>Repetitive tasks become more evident when you use a command line and easily automatable.</em></p></blockquote>

<p>I use Cmder (<a href="http://www.rahulpnath.com/blog/tools-that-I-use/">one of my favourite tools</a>) with Git and have <a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/">set up SSH</a> to Bitbucket and Github (expected soon on TFS), secured by a paraphrase, so that I do not have to key in the credentials every time I interact with the repositories. I <a href="https://github.com/cmderdev/cmder/issues/193#issuecomment-63040989">start the ssh-agent the very first time I open Cmder</a>, which prompts for my paraphrase and continues to run in the background. Alternatively, you can also use <a href="https://github.com/Microsoft/Git-Credential-Manager-for-Windows">Credential Manager</a> to store credentials, when working with HTTP enabled Git repository. For the common commands, I have set up aliases like below, to save a bit on the keystrokes.</p>

<pre><code class="text">gl=git log --oneline --all --graph --decorate  $*
gs=git status
ga=git add -A 
gp=git pull
gpp=git push 
gc=git commit -m "$*"  
gcc=git commit
</code></pre>

<h3>Different workflows</h3>

<p>Git can be used in many ways and which makes it hard to get started. There are a few popular <a href="https://www.atlassian.com/git/tutorials/comparing-workflows/">workflows</a> that one can use. Currently, I am using -  <a href="https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow">Feature Branch workflow</a> -
which means that all work happen on independent feature branches and once completed gets merged into the main trunk (master branch). Code Reviews happens on the way it gets pulled into the main branch, which ensures code quality and familiarity.</p>

<p><a href="https://www.atlassian.com/git/images/tutorials/collaborating/comparing-workflows/feature-branch-workflow/01.svg"><img class="center" alt="Git Feature Branch Workflow" src="/images/git_featurebranch_workflow.png" /></a></p>

<h3>Not Just for Code</h3>

<p>Git is a version control system and does not limit itself to storing code. You can use it for <a href="http://readwrite.com/2013/11/08/seven-ways-to-use-github-that-arent-coding/">version controlling any of your work</a>. For example, this blog is <a href="https://github.com/rahulpnath/rahulpnath.com">hosted on Github</a> and all the <a href="https://github.com/rahulpnath/rahulpnath.com/commits/master">changes are version controlled</a>, which gives me the flexibility to work and commit locally. Since the blog is <a href="http://www.rahulpnath.com/blog/static-generator-is-all-a-blog-needs-moving-to-octopress/">static generated</a> I can also preview all the changes locally. I use git whenever I work on any documents or <a href="https://github.com/rahulpnath/Speaking">presentations</a> so that I can avoid manual copy of files and renaming with suffixes like &lsquo;<em>Draft</em>, &rsquo;<em>Draft1</em>,<em>Final</em>,&ldquo;<em>FinalRevision</em>&lsquo; etc. (if that sounds any similar)</p>

<h3>Managing Commits</h3>

<p>When coming to commits, which are nothing but checkpoints of meaningful work done, people might have a different  definition for &lsquo;<em>meaningful</em>&rsquo; - for some it might be really granular, for others a bit coarse and for yet another it means all the work is done. I tend to commit quite often - even a rename of a variable leads to a commit so that I do not have to backtrack if at all something goes wrong immediately after that.</p>

<p>if you really like the idea of committing often (locally), but want the pushes to remotes more coarse, you can &lsquo;<strong><a href="http://stackoverflow.com/questions/5189560/squash-my-last-x-commits-together-using-git">squash your commits</a></strong>&rsquo;, before pushing it to remote branch. This allows you to commit often locally and still push  meaningful commit in the main source history. Make sure that the <a href="http://chris.beams.io/posts/git-commit/">commit messages and clear and communicates the intent</a> and helps <a href="http://megakemp.com/2014/08/14/the-importance-of-a-good-looking-history/">keep a good looking history</a>.</p>

<p>Git is one of the best things that happened to developers and hopes it stays long!</p>

<p><strong>References</strong></p>

<ul>
<li><a href="http://gitref.org/index.html">Git Reference</a></li>
<li><a href="https://git-scm.com/book/en/v2">Pro Git</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
