<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tipow | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/category/tipow/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2017-12-15T00:02:12+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Postman - Chaining Requests to Speed Up Manual API Tests]]></title>
    <link href="http://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests/"/>
    <updated>2017-12-11T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests</id>
    <content type="html"><![CDATA[<p>I was recently playing around with <a href="https://www.messagemedia.com.au/">MessageMedia API</a> trying to <a href="https://developers.messagemedia.com/code/messages-api-documentation/">send SMS and get the status of the SMS sent</a>. Sending the SMS and getting the status of the last sent SMS always happened in succession when testing it manually. Once I send the message, I waited for the API response, grabbed the message id from the response and used that to form the get status request.</p>

<p><a href="https://www.getpostman.com/">Postman</a> is a useful tool if you are building or testing APIs. It allows to create, send and manage API requests.</p>

<p><img src="/images/postman_chaining_requests.png" alt="Postman Chaining Requests" /></p>

<p>I added two requests and saved it to a collection in Postman - one to Send Message and other to Get Message status. I have created an environment variable for holding the message id. For the request that sends a message, the below Test snippet is added. It parses the response body of the request and extracts the message id of the last send message. This is then saved to the environment variable. The <a href="https://www.getpostman.com/docs/postman/scripts/test_scripts">Test</a> snippet is always run after performing the request.</p>

<pre><code class="javascript">var jsonData = JSON.parse(responseBody);
postman.setEnvironmentVariable("messageId", jsonData.messages[0].message_id);
tests["Success"]= true;
</code></pre>

<p>The Get message request uses the messageId from the environment variables to construct its URL. The URL looks like below.</p>

<p>
<code>text
https://api.messagemedia.com/v1/messages/{{messageId}}
</code>
</p>

<p>When executing this request, it fetches the messageId from the environment variable, which is set by the previous request. You no longer have to copy message id manually and use it in the URL. This is how we chain the data from one request to another request. Chaining requests is also useful in automated testing using Postman. Hope this helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Text Editing - Extract Data]]></title>
    <link href="http://rahulpnath.com/blog/text-editing-extract-data/"/>
    <updated>2017-10-19T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/text-editing-extract-data</id>
    <content type="html"><![CDATA[<p>At times you might need to extract data from a large text. Let&rsquo;s say you have a JSON response, and you want to extract all the <em>id</em> fields in the response and <a href="http://www.rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines/">combine them as comma separated</a>. Here&rsquo;s how you can easily extract data from large text using Sublime (or any other text editor that supports simultaneous editing).</p>

<pre><code class="json https://jsonplaceholder.typicode.com/posts">[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  ...
]
</code></pre>

<p>Again the key here is to select the recurring pattern first. In this case, it is <em>&ldquo;id&rdquo;:</em> and then selecting all occurrences of that. Once all occurrences are selected, we can select the whole line and extract that out. Repeat the same to remove the <em>id</em> text. Then follow the same steps we used to <a href="http://www.rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines/">combine text</a>.</p>

<div style="text-align: center;">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/ouKm7Wkldp0" frameborder="0" allowfullscreen></iframe>
</div>


<p>Hope this helps you to extract data from large text files.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Text Editing - Split or Combine Multiple Lines]]></title>
    <link href="http://rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines/"/>
    <updated>2017-10-13T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines</id>
    <content type="html"><![CDATA[<p>As a developer, I often end up needing to manipulate text. Sometimes this text can get quite large, and it might take a while to do it manually. If you have a text editor under your <a href="http://www.rahulpnath.com/blog/tools-that-I-use/">tool belt</a>, it often helps in situations like that. Let&rsquo;s looks at one of the common scenarios that I come across and how we can solve that using a text editor. I use <a href="https://www.sublimetext.com/">Sublime Text</a> as my go-to editor for such text editing hacks, but you can do this in any text editor that supports <a href="https://en.wikipedia.org/wiki/Simultaneous_editing">simultaneous editing</a>.</p>

<p>Let&rsquo;s say I just get a list of comma separated values and need to insert double (or single) quotes around each value to use in a SQL query. To demonstrate this, I ended up going to <a href="https://www.random.org/integers/">random.org</a> to generate a list of random values and had to use the same technique that I was to demonstrate as in the SQL query case. I generated 12 random numbers, and the site gave a tab separated list of values, as shown below.</p>

<pre><code class="text">91    66    31    11    90
80    1    24    48    61
61    66
</code></pre>

<p>I now need to convert this into a comma-separated list. Let&rsquo;s see how we can go about doing this.</p>

<ol>
<li>Select the recurring character pattern. In this case, it is the tab space.</li>
<li>Select all occurrences of the pattern. (Alt + F3 - Find All in Sublime)</li>
<li>Act on all the occurrences. In this case, I want to remove them, so I use <em>Del</em></li>
<li>Since I want to introduce a comma between each of the numbers, I first split them into multiple lines using <em>Enter</em>. Now I have all the numbers on a separate line.</li>
<li>Select all the numbers and insert a cursor at the end of each. ( Ctrl + Shift + L)</li>
<li>Insert comma. We still have the cursor at the end of all lines, so just pressing <em>Delete</em> again combines all the lines into one. Remove the trailing comma.</li>
</ol>


<div style="text-align: center;">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/nDDWviJ5xHM" frameborder="0" allowfullscreen></iframe>
</div>


<p>Though this is a specific example, I hope you get the general idea on how to go about manipulating text, to split and combine as required. I hope you will be able to insert double (or single) quotes around each value in the comma separated values that we have now, to use in a SQL query!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Electronically Sign PDF - No More Printing and Scanning]]></title>
    <link href="http://rahulpnath.com/blog/electronically-sign-pdf-no-more-printing-and-scanning/"/>
    <updated>2017-09-09T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/electronically-sign-pdf-no-more-printing-and-scanning</id>
    <content type="html"><![CDATA[<p>Very often I need to sign forms, receipts, invoices in PDF format and send them across to someone else. Printing the PDF, signing them physically and scanning them back (of course using <a href="http://www.rahulpnath.com/blog/office-lens-scan-documents-with-your-phone/">Office Lens</a>) is how I used to do this until a while back. Since I don&rsquo;t have a printer at home, I always had to wait till I reach office. Also, I did not like wasting paper and ink just to put a signature.</p>

<p>Adobe PDF reader allows us to &lsquo;Fill and Sign&rsquo; documents. Using this option we can add signatures without needing to print them. Follow the below steps to set up your Adobe Reader to sign any document.</p>

<p><strong>1.</strong> Sign on a white paper and take a picture. Upload the picture onto your computer and crop the image using your favorite <a href="http://www.rahulpnath.com/blog/paint-dot-net/">image editor</a>. You should have something similar as shown below.</p>

<p><img src="/images/pdf_signature.png" alt="Your Signature" class="center" /></p>

<p><strong>2.</strong> Open the PDF file that you need to sign with <a href="https://get.adobe.com/reader/">Adobe Reader</a>.</p>

<p><strong>3.</strong> Open &lsquo;Fill and Sign&rsquo; option. You can do this either from the &lsquo;Tools Pane&rsquo; (Shift + F4 on windows) or the menu &lsquo;View -> Tools -> Fill and Sign.&rsquo;</p>

<p><strong>4.</strong> Under the Sign option, you can choose a signature image. Choose the image you created before and save.</p>

<p><img src="/images/adobe_add_sign.png" alt="Add your Signature" class="center" /></p>

<p>You are all set to sign documents now. Anytime you want to sign a document, choose &lsquo;Fill and Sign&rsquo; and you will see your signature under the Sign button. Click the signature and place it anywhere on the document that you want to sign. No more printing and scanning them back again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Office Lens - Scan Documents With Your Phone]]></title>
    <link href="http://rahulpnath.com/blog/office-lens-scan-documents-with-your-phone/"/>
    <updated>2017-09-02T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/office-lens-scan-documents-with-your-phone</id>
    <content type="html"><![CDATA[<p>Scanning physical documents can be cumbersome using a scanner, especially if you do not have easy access to one. Taking pictures with the default camera application on the phone might not give the best of results that you are expecting. Also, you will mostly end up needing to trim such photos of unwanted elements.</p>

<p>Microsoft Office Lens is the perfect application for scanning documents and whiteboards. Office Lens focuses documents in the camera frame and allows you to capture just what is required. It enhances the selected document sections. Below is an example of the highlight and the captured document.</p>

<p><img src="/images/office_lens.png" alt="Office Lens Capture" class="center" ></p>

<h4><strong>Features</strong></h4>

<ul>
<li>Capture and crop a picture of a whiteboard or blackboard, and share your meeting notes with colleagues.</li>
<li>Make digital copies of your printed documents, business cards or posters, and trim them precisely.</li>
<li>Printed text will be automatically recognized (using OCR) by converting Word and PDF, so you can search for words in images and copy and edit them.</li>
</ul>


<p>Office Lens is available on all platforms. Download the <a href="https://play.google.com/store/apps/details?id=com.microsoft.office.officelens&amp;hl=en">Android</a>, <a href="https://itunes.apple.com/au/app/office-lens/id975925059?mt=8">iOS</a> or the <a href="https://www.microsoft.com/en-au/store/p/office-lens/9wzdncrfj3t8">Windows</a> version from the stores. Next time you want to scan something just Office Lens it!</p>
]]></content>
  </entry>
  
</feed>
