<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tipow | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/category/tipow/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2018-01-31T00:01:32+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Four Finger Swipe Gesture to Switch Between Virtual Machines]]></title>
    <link href="http://rahulpnath.com/blog/four-finger-swipe-gesture-to-switch-between-virtual-machines/"/>
    <updated>2018-01-31T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/four-finger-swipe-gesture-to-switch-between-virtual-machines</id>
    <content type="html"><![CDATA[<p>Of late I have been working for multiple clients at the same time. Different clients have different development environments, which has forced me into using Virual Machines (VM&rsquo;s) for my day to day work. I will cover my actual setup and new way of working using VM&rsquo;s in a different post.</p>

<p>When working on VM&rsquo;s I often have to switch to the host machine for email, chat and a few other programs that I have just on my host machine. Minimizing the VM host is time consuming and context breaking if you are working off a single screen. On a multi monitor setup you can always have VM on one screen and host on the other. This can still get tricky if you have more than one VM&rsquo;s connected.</p>

<div style="text-align: center;">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/fcbqOe8LnhM" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
</div>


<p>The <a href="https://blogs.windows.com/windowsexperience/2015/04/16/virtual-desktops-in-windows-10-the-power-of-windowsmultiplied/">Virtual Desktops</a> feature in Windows 10 is of great help in this scenario. We can move between desktops using keyboard shortcuts (Ctrl + Win + Right/Left Arrow). But with the VM running on separate Virtual Desktop any key presses gets picked up by the VM operating system and not by the host. This means that you cannot use the keyboard shortcuts to switch host desktops from inside a VM. However you can move between desktops using the Four Finger swipe gesture on your touchpad (if that is supported). These swipe gestures are picked up only by the host machine OS, unlike the keyboard shortcuts. So even when you are inside a VM, doing the four finger swipe gesture tells the host OS to switch desktops. This allows you to easily navigate between VM&rsquo;s running on different Virtual Desktops.</p>

<p>Hope this helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Text Editing - Convert Text Casing]]></title>
    <link href="http://rahulpnath.com/blog/text-editing-convert-text-casing/"/>
    <updated>2018-01-02T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/text-editing-convert-text-casing</id>
    <content type="html"><![CDATA[<p>Often when working with SQL queries, I come across the need to capitalize SQL keywords across in a large query. For, e.g., to capitalize SELECT, WHERE, FROM clauses in an SQL query. When it is a large query/stored procedure, it is faster done using some text editor. Sublime Text is my preferred editor for such kind of text manipulations.</p>

<p>Sublime Text Editor comes with a few built-in text casing converters that we can use, to convert text from one case to another. Using the <a href="https://en.wikipedia.org/wiki/Simultaneous_editing">simultaneous editing</a> feature, we can combine it with case conversion and manipulate large documents easily.</p>

<p><img src="/images/textediting_convert_case.png" alt="Convert case options in sublime text" ></p>

<p>For example, let&rsquo;s say I have this below SQL query. As you can notice the SELECT and FROM keywords are cased differently across the query.</p>

<pre><code class="sql">select * From Table1
select * From Table2
select * From Table3
SELECT * FROM Table4
Select * From Table5
</code></pre>

<p>To standardize this (preferably capitalize all), highlight one of the &lsquo;select&rsquo; keywords and highlight all occurrences of the keyword (ALT + F3). Once all occurrences of &lsquo;select&rsquo; is highlighted, bring up the <a href="http://docs.sublimetext.info/en/latest/extensibility/command_palette.html">command pallete</a> (CTRL + SHIFT + P on windows) and search for &lsquo;Convert Case&rsquo;. From the options listed choose the case that you want to convert. All selected occurrences of the keyword will now be in the selected case.</p>

<p>Hope this helps you when you have a lot of text case manipulations to be done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Laps in Training Mode - Garmin Watches]]></title>
    <link href="http://rahulpnath.com/blog/laps-in-training-mode-garmin-watches/"/>
    <updated>2017-12-28T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/laps-in-training-mode-garmin-watches</id>
    <content type="html"><![CDATA[<p>I recently upgraded to a Garmin Fenix 3 HR from my <a href="http://www.rahulpnath.com/blog/three_months_to_a_half_marathon/">Forerunner 630</a>. After a few runs with the Fenix 3, I realized that in <a href="https://twitter.com/rahulpnath/status/928145529606873088">Training Mode it does not do auto lap</a>. I have a custom training workout for a 10k with no repeat modes in it. This workout was what I used on my FR630, and it used to auto lap at 1km. That no longer happens in the Fenix 3 HR.</p>

<blockquote><p><strong>Software Details</strong></p>

<p><em>Fenix 3 HR</em>: 4.70</p>

<p><em>Forerunner 630</em>: 7.50(bdd586f)</p></blockquote>

<p><img src="/images/garmin_auto_lap_training.png" alt="Garming Auto Lap Not working in Training Mode, Fenix 3 HR" /></p>

<p>After googling around, I understood the auto lap under training mode is a feature only available to specific models/software versions. One of the reasoning behind it is auto lap might create issues if people are training in intervals larger than 1km. Breaking into laps at every 1km will make it harder/nearly impossible to compare their intervals. For workouts that you want auto lap at 1km (or at any custom distances), you can use Repeat feature as shown below. Setting up the workout as 10 x 1km helps to analyze the run at 1km intervals.</p>

<p><img src="/images/garmin_auto_lap_training_repeat.png" alt="Garming Auto Lap Using Repeat, Fenix 3 HR" /></p>

<p>Depending on the model/software version of your Garmin watch you might have to tweak your workout plans. Hope this helps</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Postman - Chaining Requests to Speed Up Manual API Tests]]></title>
    <link href="http://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests/"/>
    <updated>2017-12-11T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests</id>
    <content type="html"><![CDATA[<p>I was recently playing around with <a href="https://www.messagemedia.com.au/">MessageMedia API</a> trying to <a href="https://developers.messagemedia.com/code/messages-api-documentation/">send SMS and get the status of the SMS sent</a>. Sending the SMS and getting the status of the last sent SMS always happened in succession when testing it manually. Once I send the message, I waited for the API response, grabbed the message id from the response and used that to form the get status request.</p>

<p><a href="https://www.getpostman.com/">Postman</a> is a useful tool if you are building or testing APIs. It allows to create, send and manage API requests.</p>

<p><img src="/images/postman_chaining_requests.png" alt="Postman Chaining Requests" /></p>

<p>I added two requests and saved it to a collection in Postman - one to Send Message and other to Get Message status. I have created an environment variable for holding the message id. For the request that sends a message, the below Test snippet is added. It parses the response body of the request and extracts the message id of the last send message. This is then saved to the environment variable. The <a href="https://www.getpostman.com/docs/postman/scripts/test_scripts">Test</a> snippet is always run after performing the request.</p>

<pre><code class="javascript">var jsonData = JSON.parse(responseBody);
postman.setEnvironmentVariable("messageId", jsonData.messages[0].message_id);
tests["Success"]= true;
</code></pre>

<p>The Get message request uses the messageId from the environment variables to construct its URL. The URL looks like below.</p>

<p>
<code>text
https://api.messagemedia.com/v1/messages/{{messageId}}
</code>
</p>

<p>When executing this request, it fetches the messageId from the environment variable, which is set by the previous request. You no longer have to copy message id manually and use it in the URL. This is how we chain the data from one request to another request. Chaining requests is also useful in automated testing using Postman. Hope this helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Text Editing - Extract Data]]></title>
    <link href="http://rahulpnath.com/blog/text-editing-extract-data/"/>
    <updated>2017-10-19T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/text-editing-extract-data</id>
    <content type="html"><![CDATA[<p>At times you might need to extract data from a large text. Let&rsquo;s say you have a JSON response, and you want to extract all the <em>id</em> fields in the response and <a href="http://www.rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines/">combine them as comma separated</a>. Here&rsquo;s how you can easily extract data from large text using Sublime (or any other text editor that supports simultaneous editing).</p>

<pre><code class="json https://jsonplaceholder.typicode.com/posts">[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  ...
]
</code></pre>

<p>Again the key here is to select the recurring pattern first. In this case, it is <em>&ldquo;id&rdquo;:</em> and then selecting all occurrences of that. Once all occurrences are selected, we can select the whole line and extract that out. Repeat the same to remove the <em>id</em> text. Then follow the same steps we used to <a href="http://www.rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines/">combine text</a>.</p>

<div style="text-align: center;">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/ouKm7Wkldp0" frameborder="0" allowfullscreen></iframe>
</div>


<p>Hope this helps you to extract data from large text files.</p>
]]></content>
  </entry>
  
</feed>
