<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tipow | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/category/tipow/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2017-03-14T00:01:16+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Track Current File in Visual Studio Solution Explorer]]></title>
    <link href="http://rahulpnath.com/blog/track-current-file-in-visual-studio-solution-explorer/"/>
    <updated>2017-03-08T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/track-current-file-in-visual-studio-solution-explorer</id>
    <content type="html"><![CDATA[<p>While working on large codebases, I want my Solution Explorer to be synchronized with the current working file. With the solution explorer in sync, it makes navigating to other related files, adding new classes in the same location, renaming files, etc. faster.</p>

<p><img alt="Track Active Item in Solution Explorer, Visual Studio" src="/images/visualstudio_trackActiveItem.png" /></p>

<p>The setting to keep the items in sync is configurable in Visual Studio and is turned off by default. You can enable this by checking the &lsquo;<strong><em>Track Active Item in Solution Explorer</em></strong>&rsquo; under <em>Options -> Projects and Solutions -> General</em>. You can navigate there quickly using <a href="http://www.rahulpnath.com/blog/quick-launch-in-visual-studio/">Visual Studio Quick Launch (Ctrl + Q)</a>. Just type &lsquo;<em>Track active</em>&rsquo; and you will get the quick link to the setting. Keep it checked, and off you go, the solution explorer and the current file will be in sync.</p>

<p>PS: Visual Studio 2017 is now available.<a href="https://www.visualstudio.com/downloads/">Get it</a> if you have not already!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Switching Subscriptions Under Same Azure Account to Access Key Vaults]]></title>
    <link href="http://rahulpnath.com/blog/switching-between-subscriptions-under-same-azure-account-to-access-key-vault/"/>
    <updated>2017-03-02T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/switching-between-subscriptions-under-same-azure-account-to-access-key-vault</id>
    <content type="html"><![CDATA[<p><img class="center" alt="Azure Powershell Get-AzureRmContext" src="/images/powershell_azurermcontext.png" /></p>

<p>When accessing Key Vault using Powershell it can be a bit tricky when you have multiple subscriptions under the same account. The Key Vault cmdlets being under the <a href="http://www.rahulpnath.com/blog/how-the-deprecation-of-switch-azuremode-affects-azure-key-vault/">Resource Manager (RM) mode</a> depends on the current RM Subscription. The Key Vault cmdlets enable you to manage only the key vaults under the selected subscription. To access the key vaults in other subscriptions, you need to switch the selected RM subscription.</p>

<blockquote><p><em>Use <strong>Select-AzureRmSubscription</strong> to switch the selected RM subscription</em></p></blockquote>

<p> The <a href="https://docs.microsoft.com/en-us/powershell/resourcemanager/azurerm.profile/v2.2.0/get-azurermcontext">Get-AzureRmContext</a> returns the metadata used for RM requests. The SubscriptionId/SubscriptionName property indicates the selected subscription. Any Key Vault cmdlets (or RM cmdlets) will work based off that selected subscription. To change the selected Azure RM subscription use the Select-AzureRmSubscription cmdlet. Pass in the SubscriptionId or the Subscription Name that you wish to switch to and the RM Subscription will be set to that. To get the SubscriptionId/SubscriptionName of the subscriptions under your account use <a href="https://msdn.microsoft.com/en-us/library/dn495302.aspx">Get-AzureSubscription</a> cmdlet.</p>

<pre><code class="` powershell"> Get-AzureRmContext
 Get-AzureRmSubscription
 Select-AzureRmSubscription -SubscriptionName  "Your Subscription Name"
 Select-AzureRmSubscription -SubscriptionId  a5287dad-d5a2-4060-81bc-4a06c7087e72
</code></pre>

<p> I struggled with this for some time, so hope it helps you!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Todoist: Manage your To-Do List]]></title>
    <link href="http://rahulpnath.com/blog/todoist-manage-your-todo-list/"/>
    <updated>2017-02-23T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/todoist-manage-your-todo-list</id>
    <content type="html"><![CDATA[<p>If you are the kind of person who wants to manage a list of tasks and like checking it off and moving towards a goal then this post is for you. I am a fan of the <a href="http://amzn.to/2gsJaed">Getting Things Done</a> methodology by David Allen and found the book and <a href="https://www.youtube.com/results?search_query=david+allen">videos</a> mind blowing. Ever since reading the book for the first time I had been searching for a tool that helps to follow the GTD process. Though the GTD process in itself is not tied to a particular tool and works well with pen and paper, I am more towards a digital medium, as that&rsquo;s where I spent most of my time. I have tried a lot of different tools, almost everything that came up when searching for to do lists.</p>

<p>Some of the key features that I was looking out of a to-do list application are</p>

<ul>
<li>Quickly Capture tasks from anywhere</li>
<li>Availability on multiple devices</li>
<li>Able to group and categorize tasks</li>
<li>Search</li>
<li>Assign date time and set reminders</li>
<li>Simplistic and easy user interface</li>
</ul>


<p><img alt="Todoist" src="/images/todoist.png" /></p>

<p><a href="https://todoist.com/">Todoist</a> is one platform that I found the best matching with my needs and have been with it for over two years. It started with a <a href="http://www.rahulpnath.com/blog/staying-organized-finding-a-system-to-manage-it-all/#comment-1528539219">comment by my friend on one of my posts</a>. Since then I am using Todoist. After trying for a couple of weeks, I quickly moved on to their <a href="https://todoist.com/premium">premium version</a> for the various features that it provides. Todoist has a clean and minimalistic interface and never stays in the way of getting things done. Be it the mobile app, the desktop app or the Chrome plugin; it enables easy task management. Any new task added by default goes into the Inbox which can be categorized and processed later. This processing flow fits with the process outlined in GTD. Tasks can be assigned labels and categories, set priorities, set for action on a specific date. Tasks added to one app is synced across all the apps seamlessly., enabling a smooth and consistent experience across.</p>

<blockquote><p><em>Getting Things Done is tool agnostic. Tools do not matter; it is about the process. Choose any tool that works for you, for me it&rsquo;s Todoist</em></p></blockquote>

<p>Todoist had all the features that I was looking out for in a task management application. Give Todoist a try if you are looking out for a task management application. Irrespective of the tools that you use it is your ability to stick to a plan and focus on tasks that will help you reach your goal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Screenshots with Snagit]]></title>
    <link href="http://rahulpnath.com/blog/screenshots-with-snagit/"/>
    <updated>2017-02-16T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/screenshots-with-snagit</id>
    <content type="html"><![CDATA[<p>I have been using <a href="https://www.techsmith.com/screen-capture.html">Snagit</a> for over one and half years and been loving it. Snagit gives you a way to create and edit screenshots or record videos to show a process, provide detailed feedback, or share information with the people who need it most. It tucks away neatly to the side of your screen and is there up and ready when you want to grab a screen capture or record a quick video. The screen capture is easily triggered using keyboard shortcuts (Ctrl + Alt + S by default). Once captured, it takes you to the Snagit editor where you can add a lot more details to the captured image.</p>

<p><img alt="Snagit" class="center" src="/images/snagit.gif" /></p>

<p>Some of the  features that I often use are:</p>

<ul>
<li><strong>Blur (or Redact)</strong>: Use to hide or disguise sensitive information. Often my screenshots contain sensitive content which I want to blur.</li>
<li><strong>Step</strong>: Add a series of numbers or letters to label steps or items in a capture. This feature helps in guiding a step by step process in a screenshot.</li>
<li><strong>Crop</strong>: Common feature in all image editors.</li>
<li><strong>Spotlight &amp; Magnify</strong>: Magnify, blur or dim a selected area of the picture. This feature is useful to highlight specific parts of the image.</li>
<li><strong>Callouts, Text, and Arrows</strong>: Again pretty much standard with most image editors.</li>
</ul>


<p>Snagit has been a great fit for blogging and makes creating screenshots easy. Communicating with images is much faster with these great features. If you take a lot of screenshots give <a href="https://www.techsmith.com/download/snagit/">Snagit a try</a>, you will love it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Moving Selected Lines in Visual Studio]]></title>
    <link href="http://rahulpnath.com/blog/moving-selected-lines-in-visual-studio/"/>
    <updated>2017-02-09T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/moving-selected-lines-in-visual-studio</id>
    <content type="html"><![CDATA[<p>Often when coding, I need to move pieces of code up or down. It could be a group of lines of code or an entire function that I need to shift up or down. In earlier versions of Visual Studio, I had to select the lines of code, cut them from current place, move the cursor to the desired position and paste it. That&rsquo;s a lot of keystrokes for getting a simple thing done. In the latest versions of Visual Studio (I am currently on VS2015) we can use  <strong>Alt + Up/Down</strong> to move the selection up or down. This also works for the current line without selecting it.</p>

<p><img alt="Defensive Coding" src="/images/visualstudio_moveselectedlines.gif" /></p>

<p>Hope this helps to move code around faster!</p>
]]></content>
  </entry>
  
</feed>
