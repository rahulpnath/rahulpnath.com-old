<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tipow | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/category/tipow/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2017-02-21T00:02:07+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Screenshots with Snagit]]></title>
    <link href="http://rahulpnath.com/blog/screenshots-with-snagit/"/>
    <updated>2017-02-16T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/screenshots-with-snagit</id>
    <content type="html"><![CDATA[<p>I have been using <a href="https://www.techsmith.com/screen-capture.html">Snagit</a> for over one and half years and been loving it. Snagit gives you a way to create and edit screenshots or record videos to show a process, provide detailed feedback, or share information with the people who need it most. It tucks away neatly to the side of your screen and is there up and ready when you want to grab a screen capture or record a quick video. The screen capture is easily triggered using keyboard shortcuts (Ctrl + Alt + S by default). Once captured, it takes you to the Snagit editor where you can add a lot more details to the captured image.</p>

<p><img alt="Snagit" class="center" src="/images/snagit.gif" /></p>

<p>Some of the  features that I often use are:</p>

<ul>
<li><strong>Blur (or Redact)</strong>: Use to hide or disguise sensitive information. Often my screenshots contain sensitive content which I want to blur.</li>
<li><strong>Step</strong>: Add a series of numbers or letters to label steps or items in a capture. This feature helps in guiding a step by step process in a screenshot.</li>
<li><strong>Crop</strong>: Common feature in all image editors.</li>
<li><strong>Spotlight &amp; Magnify</strong>: Magnify, blur or dim a selected area of the picture. This feature is useful to highlight specific parts of the image.</li>
<li><strong>Callouts, Text, and Arrows</strong>: Again pretty much standard with most image editors.</li>
</ul>


<p>Snagit has been a great fit for blogging and makes creating screenshots easy. Communicating with images is much faster with these great features. If you take a lot of screenshots give <a href="https://www.techsmith.com/download/snagit/">Snagit a try</a>, you will love it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Moving Selected Lines in Visual Studio]]></title>
    <link href="http://rahulpnath.com/blog/moving-selected-lines-in-visual-studio/"/>
    <updated>2017-02-09T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/moving-selected-lines-in-visual-studio</id>
    <content type="html"><![CDATA[<p>Often when coding, I need to move pieces of code up or down. It could be a group of lines of code or an entire function that I need to shift up or down. In earlier versions of Visual Studio, I had to select the lines of code, cut them from current place, move the cursor to the desired position and paste it. That&rsquo;s a lot of keystrokes for getting a simple thing done. In the latest versions of Visual Studio (I am currently on VS2015) we can use  <strong>Alt + Up/Down</strong> to move the selection up or down. This also works for the current line without selecting it.</p>

<p><img alt="Defensive Coding" src="/images/visualstudio_moveselectedlines.gif" /></p>

<p>Hope this helps to move code around faster!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Quick Launch in Visual Studio]]></title>
    <link href="http://rahulpnath.com/blog/quick-launch-in-visual-studio/"/>
    <updated>2017-02-02T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/quick-launch-in-visual-studio</id>
    <content type="html"><![CDATA[<p><img alt="Visual Studio Quick Launch" src="/images/visualstudio_quicklaunch.png" /></p>

<p>As a .NET developer, I spent the majority of my time in Visual Studio. Knowing to navigate fast within the IDE or quickly find what I want is important. Many times finding specific settings or navigating to individual windows can take a while, especially if you are not familiar with it and don&rsquo;t know exactly where to look. Visual Studio has a quick launch toolbar that is designed exactly for this. Be it opening the Package Manager Console or changing the font style you can use the quick launch to search and navigate to it.</p>

<blockquote><p><em>You can use <a href="https://msdn.microsoft.com/en-us/library/hh417697.aspx">Quick Launch</a> to quickly search and execute actions for IDE assets such as options, templates, menus. You can&rsquo;t use Quick Launch to search for code and symbols. The Quick Launch search box is located at the top-right corner of the menu bar and is accessible by choosing the <strong>Ctrl+Q</strong> keys.</em></p></blockquote>

<p>The added advantage is that you can use the quick launch bar to <strong><em>learn new keyboard shortcuts</em></strong>. Searching for an item also shows the keyboard shortcut for it next to it. Over time you can remember the direct keyboard shortcut and avoid quick launch as well.</p>

<p><img alt="Visual Studio Quick Launch learn keyboard shortcuts" src="/images/visualstudio_quicklaunch_keyboardShortcuts.png" /></p>

<p>Knowing the tools that you use is an important part of development. Able to navigate fast within the IDE enables to remove any time wasted poking around the IDE. Use that time to read and write code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Cmder - Portable Console Emulator for Windows]]></title>
    <link href="http://rahulpnath.com/blog/cmder-portable-console-emulator-for-windows/"/>
    <updated>2017-01-25T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/cmder-portable-console-emulator-for-windows</id>
    <content type="html"><![CDATA[<div style="text-align: center;">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/fpxx8hlNTzc" frameborder="0" allowfullscreen></iframe>
</div>


<p>I have been using Cmder as my command line for around two years and been loving it. I am not a super user of the command line, but try to use it more and more.</p>

<blockquote><p><em>Cmder is a software package created out of pure frustration over the absence of good console emulator on Windows. It is based on ConEmu with major config overhaul, comes with a Monokai color scheme, and a custom prompt layout.</em></p></blockquote>

<p>This is not right with Windows 10, as there is a new command prompt which has a lot more features. I have not yet thought of moving to that as Cmder has been working well for me.</p>

<h4><strong>Installation and setting up</strong></h4>

<p>Cmder is open source and free to download from <a href="http://cmder.net/">Cmder.net</a>. One of the advantages of Cmder is its portability. You can carry it with you on a USB stick or in the Cloud, so all your settings can go anywhere you go. Installation is simple, all you need to do is download the latest release, extract the archive and run Cmder executable. Check out the documentation if you face any difficulties.</p>

<h4><strong>Features I Like</strong></h4>

<p>Able to <strong><em>paste into the console using the Windows shortcut Ctrl + V</em></strong> is one of the key things that got me started with this command line tool. It also supports most of the other text traversal keyboard shortcuts of Windows.</p>

<p>Cmder supports <strong><em>multiple console tabs within a window</em></strong>. Tabs makes having multiple consoles open and managing them easy. All tab manipulation has associated keyboard shortcuts making it even faster. When creating a new tab, using Ctrl + T, you can choose to run different predefined tasks on command line startup. You can also set the user and user rights to run them as. Setting up the predefined tasks is under Settings -> Startup->Tasks.  I have added <strong><em>custom tasks</em></strong> for PowerShell, and Visual Studio developer command prompt as that is what I use mostly.</p>

<div id="customtasks" ></div>


<pre><code class="text Powershell Administrator Task">*PowerShell -ExecutionPolicy Bypass -NoLogo -NoProfile -NoExit -Command 
"Invoke-Expression '. ''%ConEmuDir%\..\profile.ps1'''" -new_console:d:"%USERPROFILE%"
</code></pre>

<pre><code class="text Visual Studio Developer Prompt Task">cmd /k ""%ConEmuDir%\..\init.bat" &amp; 
"C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat"" 
-new_console:d:%USERPROFILE%
</code></pre>

<p><strong><em>Alias</em></strong> is one of the key features that keeps me to Cmder. You can create short commands to map to longer commands. Aliases avoid typing long commands every time you want to perform that action. You can see all existing aliases by running alias command. I use this feature a lot. Most of the git commands are aliases, so I do not have to type them every time. For e.g., when on a git repository I can type <em>gs</em> to run git status. You can also pass arguments to alias. To do a git commit with a message I run <em>gc The commit message</em>. Aliases support optional parameters through the $1-9 or the $*.</p>

<p>To define a alias <em>alias gs=git status</em>. Below are some of the alias examples.</p>

<pre><code class="text Alias Examples">gl=git log --oneline --all --graph --decorate  $*
gs=git status
ga=git add -A
gc=git commit -m "$*"
gcb=git checkout -b $*
gpsu=git push --set-upstream origin $*
</code></pre>

<p>Check out the <a href="https://www.youtube.com/watch?v=fpxx8hlNTzc">video</a> for a walk-through of the setup and its usage. Cmder allows to get things done fast and looks great. Try it out to see if it works for you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Finding Keyboard Shortcuts on Websites]]></title>
    <link href="http://rahulpnath.com/blog/finding-keyboard-shortcuts-on-websites/"/>
    <updated>2017-01-16T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/finding-keyboard-shortcuts-on-websites</id>
    <content type="html"><![CDATA[<p><img alt="Keyboard Shortcuts" src="/images/keyboard_shortcuts.jpg" /></p>

<p>I prefer to use the keyboard to navigate within sites I use frequently. Keyboard enables to navigate faster within site and perform tasks quicker. The <a href="http://www.rahulpnath.com/blog/review-six-months-and-counting-logitech-mx-master/">Logitech MX Master</a> mouse provides a lot of capabilities to navigate. But I find the keyboard faster to perform repetitive actions - like posting a new status update on social media sites, managing tasks in Jira, TFS online, GitHub, responding to emails, Todoist, etc. Finding keyboard shortcuts on these various sites can itself be a daunting task. One might need to google to get the shortcuts or find the relevant documentation on the site. Luckily most of the popular sites today display a pop-up modal with all the keyboard shortcuts for the site when pressing <strong>Shift + ?</strong>. Note that this might not work on all the sites out there. But for most of the common ones that I use l, I find it working.</p>

<p>So the next time you spend a lot of time on a website try hitting <strong>Shift + ?</strong> to look for supported keyboard shortcuts.</p>
]]></content>
  </entry>
  
</feed>
