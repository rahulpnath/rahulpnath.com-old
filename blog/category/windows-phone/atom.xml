<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: windows phone | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/category/windows-phone/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2018-07-28T00:01:56+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thanks to Everyone Who Attended Our Talk at Microsoft India, Hyderabad]]></title>
    <link href="http://rahulpnath.com/blog/thanks-to-everyone-who-attended-our-talk-at-microsoft-india-hyderabad/"/>
    <updated>2014-06-18T00:22:37+00:00</updated>
    <id>http://rahulpnath.com/blog/thanks-to-everyone-who-attended-our-talk-at-microsoft-india-hyderabad</id>
    <content type="html"><![CDATA[<p>Thanks to everyone who attended our(<a href="https://twitter.com/techgd">Gautam</a> and mine) talk on Getting Started with Windows Phone and Store application on June 18, Tuesday as part of the Readiness training at Microsoft. Special thanks to <a href="https://twitter.com/vamsitp">Vamsi</a> for assisting us throughout. I hope you all enjoyed the session as much as we did. Here are some follow up information that might help you on the way forward. Since the intended audience are from testing and UX the follow up material is more aligned towards that.</p>

<ul>
<li><p>In case you would like to have a deeper understanding on the MVVM pattern, and how it helps us, the below links should be useful</p>

<ul>
<li><p><a href="http://msdn.microsoft.com/en-us/magazine/dn463790.aspx">Writing a Testable Presentation Layer with MVVM</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/TechDays/Techdays-2014-the-Netherlands/Using-MVVM-So-You-Can-Write-Better-Code-and-Less-Code">Using MVVM So You Can Write Better Code and Less Code</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/MIX/MIX11/OPN03">Deep Dive MVVM</a></p></li>
</ul>
</li>
<li><p>MVVM is also helpful in Unit Testing improving the overall maintainability of the code too.</p>

<ul>
<li><a href="http://channel9.msdn.com/Events/Build/2012/3-017">Unit Testing Windows Store Apps</a></li>
</ul>
</li>
<li><p>Check out how you can create automated tests and also on the Coded UI support</p>

<ul>
<li><p><a href="http://channel9.msdn.com/events/TechEd/NorthAmerica/2014/DEV-B347#fbid=">Automated Testing of XAML-Based Windows Phone Applications</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/Build/2013/3-323">Automated Testing of XAML-Based Windows Store Apps</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/visualstudioalm/archive/2014/04/05/using-coded-ui-to-test-xaml-based-windows-phone-apps.aspx">Using Coded UI to test XAML-based Windows Phone apps</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/cdndevs/archive/2014/05/05/save-time-money-and-your-sanity-coded-ui-testing-for-the-windows-phone-part-1.aspx">Save Time, Money, and Your Sanity: Coded UI Testing for the Windows Phone</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/using-coded-ui-to-test-xaml-based-windows-store-apps.aspx">Using Coded UI to test XAML-based Windows Store apps</a></p></li>
</ul>
</li>
<li><p>Look into the tools and ways to analyze and improve performance</p>

<ul>
<li><p><a href="http://channel9.msdn.com/Events/MIX/MIX11/DVC01">Analyzing and Improving Windows Phone Application Performance</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/3-578">Diagnosing Issues in Windows Phone XAML Apps Using Visual Studio</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/4-557">How to Analyze Performance Issues in Your Windows and Windows Phone Apps</a></p></li>
</ul>
</li>
<li><p>See how app crashes information can be tracked from a deployed app and how it can used and inferred upon to fix  issues. This is very important so that you can improve on the app reliability and performance for further updates.</p>

<ul>
<li><a href="http://channel9.msdn.com/Events/Build/2014/3-657">Avoiding Windows Store App Failures</a></li>
</ul>
</li>
<li><p>Learn about the security features and how it is important</p>

<ul>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/2-531">New Security Features for Windows Phone</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/WIN-B357#fbid=">Windows Phone 8.1 Security and Management: The Right Choice for the Enterprise!</a></p></li>
</ul>
</li>
</ul>


<p>Stay in touch. You can find the presentation slides <a href="https://github.com/rahulpnath/Speaking/tree/master/Windows%20Phone%20And%20Store%20Apps">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone Series: Image Caching Library - JetImageLoader]]></title>
    <link href="http://rahulpnath.com/blog/windows-phone-series-image-caching-library-jetimageloader/"/>
    <updated>2014-04-17T23:56:17+00:00</updated>
    <id>http://rahulpnath.com/blog/windows-phone-series-image-caching-library-jetimageloader</id>
    <content type="html"><![CDATA[<p>Recently on a client project, I had a requirement to cache images locally on the phone and then load it from there from subsequent requests. Initially I had plans for custom implementing this using sqlite and custom code. While googling for this, I came across an awesome custom library that solved my problem with just a few lines of code – <a href="https://github.com/artem-zinnatullin/jet-image-loader">JetImageLoader</a> by <a href="https://github.com/artem-zinnatullin">Artem</a>. This is available via nuget, making it easy to install</p>

<p><a href="http://www.nuget.org/packages/WP-JetImagLoader/0.8.5"><img src="/WP-JetImagLoader.png" alt="WP-JetImagLoader" /></a></p>

<p>Integrating this library into any existing project is even easier and is just about using a converter on your Image datatemplate as shown below.</p>

<pre><code class="xml">&lt;Image Source="{Binding UserAvatarUrl, Converter={StaticResource JetImageLoaderConverter}}"/&gt;
</code></pre>

<p>You would need to add a custom converter and add this as part of the resource. There is a sample for this on Github where the <a href="https://github.com/artem-zinnatullin/jet-image-loader">project source</a> also lives.</p>

<pre><code class="csharp">public class JetImageLoaderImplementation
{
    public static readonly BaseMemoryCache&lt;string,stream&gt; MemoryCacheImpl = new WeakMemoryCache&lt;string,stream&gt;();
    public static readonly BaseStorageCache StorageCacheImpl = new LimitedStorageCache(IsolatedStorageFile.GetUserStoreForApplication(), "\\image_cache", new SHA1CacheFileNameGenerator(), 1024 * 1024 * 10);&lt;/p&gt;
    public static JetImageLoaderConfig GetJetImageLoaderConfig()
    {
        return new JetImageLoaderConfig.Builder
        {
            IsLogEnabled = true,
            CacheMode = CacheMode.MemoryAndStorageCache,
            DownloaderImpl = new HttpWebRequestDownloader(),
            MemoryCacheImpl = MemoryCacheImpl,
            StorageCacheImpl = StorageCacheImpl
        }.Build();
    }
}
</code></pre>

<pre><code class="csharp">public class JetImageLoaderConverter : BaseJetImageLoaderConverter
{
    protected override JetImageLoaderConfig GetJetImageLoaderConfig()
    {
        return JetImageLoaderImplementation.GetJetImageLoaderConfig();
    }

    public override object Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture)
    {
        return base.Convert(value, targetType, parameter, culture);
    }
}
</code></pre>

<p>This is all you need to do to have all the images that are bound with the converter to be cached locally on to the Memory and storage. You could also choose to cache it to only memory or storage. Do check this out in case you want to have images cached locally.</p>

<p>The nuget is for Windows 8 library, but there is also a version for <a href="https://github.com/artem-zinnatullin/jet-image-loader/tree/master/JetImageLoader.Wp7">WP7.1 avaialble on Github</a> (which apparently is a pull request from me, indeed my very first on Github that got merged)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone Series: Bing Maps and Turn-by-Turn Navigation]]></title>
    <link href="http://rahulpnath.com/blog/windows-phone-series-bing-maps-and-turn-by-turn-navigation/"/>
    <updated>2014-03-07T23:40:39+00:00</updated>
    <id>http://rahulpnath.com/blog/windows-phone-series-bing-maps-and-turn-by-turn-navigation</id>
    <content type="html"><![CDATA[<p>Many applications today provide features that integrate with users location and provide information on a map based on that. In this blog will see how we can use the Bing maps to show a users current location, search for destination and show route to that location. For this will use Bing maps, and you would have to create an account here and create a key that we would be using. Make sure that you read on the <a href="http://www.microsoft.com/maps/product/terms.html">licensing terms</a> on the api if you are planning to use this in a published application.</p>

<p>To use Maps in windows phone application, you would need to add a reference to ‘<em>Microsoft.Phone.Controls.Maps</em>’ once you create a new Windows phone project. Add the maps control to the application as below to display current location or other map related features.</p>

<pre><code class="xml">&lt;maps:Map Grid.Row="1" Name="mapBing"  AnimationLevel="None" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
          CopyrightVisibility="Collapsed"  LogoVisibility="Collapsed"
          ZoomBarVisibility="Collapsed"
          ZoomLevel="12" CredentialsProvider="BING MAPS API KEY" &gt;
    &lt;maps:MapLayer Name="RouteLayer" /&gt;
    &lt;maps:MapLayer Name="StartPoint" /&gt;
    &lt;maps:MapLayer Name="DestinationPoint" /&gt;
    &lt;maps:MapLayer Name="CurrentPosition" /&gt;
    &lt;maps:MapLayer Name="MyPathLayer"&gt;
    &lt;/maps:MapLayer&gt;
&lt;/maps:Map&gt;
</code></pre>

<p>This adds a map user control to the application and also different layers to the application, on which we would be displaying the pins, routes etc. Anything that gets shown on the map is shown on different layers. Each of these can be cleared, deleted or toggled for visibility making it easy to work on maps.</p>

<p><strong>Track Me</strong></p>

<p>The  first thing that we would want is to track our location, so that we could provide information related to our current location. For this we use the <a href="http://msdn.microsoft.com/en-us/library/system.device.location.geocoordinatewatcher(v=vs.110">GeoCoordinateWatcher</a>.aspx), that provides the location information based in latitude and longitude. Registering for the PositionChanged event will update us whenver the location information related to the user has changed, so that we can update/obtain the real time location of the user if he is on the move. Once we have the user location co-ordinates, we can use the <a href="http://msdn.microsoft.com/en-us/library/ff701715.aspx">Location API</a>, to get the location name.
&#8220;` csharp
GeoPosition myPosition;</p>

<p>private void TrackMe()
{
    startingPoint = null;
    CurrentPosition.Children.Clear();
    if (myWatcher != null)
    {
        myWatcher.PositionChanged -= myWatcher_PositionChanged;
        myWatcher.Dispose();
        myWatcher = null;
    }
    myWatcher = new GeoCoordinateWatcher();
    myWatcher.TryStart(false, TimeSpan.FromMilliseconds(1000));
    myWatcher.PositionChanged += myWatcher_PositionChanged;
}</p>

<p>void myWatcher_PositionChanged(object sender, GeoPositionChangedEventArgs e)
{
     myPosition = myWatcher.Position;
     currentLocation = myWatcher.Position.Location;
     if (isInDriveMode)
     {
         DrawMyCurrentRoute(currentLocation);
     }</p>

<pre><code> LocationManager.GetLocationName(UpdateLocation, myPosition.Location.Latitude.ToString(), myPosition.Location.Longitude.ToString());
</code></pre>

<p>}
&#8220;`
<strong>Destination and Routes</strong></p>

<p>Location points are depicted on maps using the Pushpin user control. Now that we have the users location, we need to get the destination where the user wants to go. We have added a simple panorama control where in one of them has a map and the other has the details to enter the destination location. Once the user enters the destination location name, we need to get the co-ordinates of this location. For this we use the Location API again but with a different endpoint. We might get multiple responses for the same location name, for which we add destination pushpins to the map, so that user can select the correct location from the map that he intends to go. On getting confirmation on the destination point, we now need to get the route from the current location to the destination location. A route is nothing but a set of co-ordinates between the start and the destination that the user will have to pass through to reach the final destination. You can use the <a href="http://msdn.microsoft.com/en-us/library/ff701705.aspx">Routes API</a> or consume it adding a service reference to <a href="http://dev.virtualearth.net/webservices/v1/routeservice/routeservice.svc/mex">http://dev.virtualearth.net/webservices/v1/routeservice/routeservice.svc/mex</a>
&#8220;` csharp
RouteServiceClient routeService = new RouteServiceClient(&ldquo;BasicHttpBinding_IRouteService&rdquo;);</p>

<p>routeService.CalculateRouteCompleted += (sender, e) =&gt;
{
    DrawRoute(e);
};</p>

<p>mapBing.SetView(LocationRect.CreateLocationRect(locations));</p>

<p>routeService.CalculateRouteAsync(new RouteRequest()
{
    Credentials = new Credentials()
    {
        ApplicationId = LocationManager.bingApiKey
    },
    Options = new RouteOptions()
    {
        RoutePathType = RoutePathType.Points
    },
    Waypoints = new ObservableCollection(
        locations.Select(x =&gt; new Waypoint()
        {
            Location = new Microsoft.Phone.Controls.Maps.Platform.Location() { Latitude = x.Latitude, Longitude = x.Longitude }
        }))
});
<code>
The Draw route draws a route line on the RouteLayer on the map, so that the user can see the path that he needs to take to reach his final destination. As the user starts moving the routes are recalcualted and redrawn on the map, so that there is a constant feedback to the user on the path that he is taking. Along with the routes we also get a text direction information that describes the direction in which we need to travel. This can be spoken out to the user so that he need not always look at the mobile to find the next immediate action that he needs to perform. Here I have used the Google translate api
</code> csharp
public static string speechUrl = &ldquo;<a href="http://translate.google.com/translate_tts?tl=en&amp;amp;q=">http://translate.google.com/translate_tts?tl=en&amp;amp;q=</a>&rdquo;;
private void SpeakText(string message)
{
    // Play the audio
    med1.Source = new Uri(speechUrl + message);
    med1.Play();
}
&#8220;`
You could add on more features to this using the different location related api’s that are available and provide the user a more enhanced experience.</p>

<p><img src="/Bing_wp_route.jpg" alt="Bing_wp_route" /><img src="/Bing_wp_place_search.jpg" alt="Bing_wp_place_search" /><img src="/Bing_wp_directions_text.jpg" alt="Bing_wp_directions_text" /></p>

<p><strong>Testing</strong></p>

<p>Using the <a href="http://msdn.microsoft.com/en-us/library/windowsphone/develop/hh202933(v=vs.105">additional tools along with the phone emulator</a>.aspx), you can simulate location changes and also be at any location without actually being there and test. The emulator also provides a lot of functionality to simulate movement along a specific route and fire location changes in fixed amount of time etc, that come handy while testing.
<img src="/Bing_wp_simulator_geolocation.jpg" alt="Bing_wp_simulator_geolocation" /></p>

<p>You could also install it on to a phone and dash out to test it for yourself in your real-time location and reach the coffee-shop faster!. Find the sample code <a href="https://github.com/rahulpnath/Blog/tree/master/SimpleGPS">here</a> and feel free to use it.
<a href="http://www.codeproject.com" style="display:none" rel="tag">CodeProject</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started with PhoneGap: Developing for Windows Phone and Android]]></title>
    <link href="http://rahulpnath.com/blog/getting-started-with-phonegap-developing-for-windows-phone-and-android/"/>
    <updated>2014-03-04T16:06:40+00:00</updated>
    <id>http://rahulpnath.com/blog/getting-started-with-phonegap-developing-for-windows-phone-and-android</id>
    <content type="html"><![CDATA[<p>With lots of devices and operating systems out there, developing a native application for each of these platforms might not always be an option for many businesses, because of the time, effort and money that would be required to be on all platforms. <a href="http://phonegap.com/">PhoneGap</a> is one option that could be explored in this case, which helps to develop hybrid applications that can exists on a <a href="http://phonegap.com/about/feature/">variety of platforms</a> integrating with platform specific features. <a href="http://cordova.apache.org/">Apache Cordova</a> is what powers PhoneGap and is free and open source under the <a href="http://phonegap.com/about/license/">Apache License, Version 2.0</a>.</p>

<p>Setting up PhoneGap is pretty easy and direct with its integration with <a href="http://nodejs.org/">node.js</a>. Lets take a look on how to setup our project from scratch.</p>

<ol>
<li><p>Install <a href="http://nodejs.org/">node.js</a></p></li>
<li><p>Install PhoneGap using node.js</p>

<p> <strong><em>npm install –g phonegap</em></strong></p>

<p> npm is the official node package manager</p>

<p> -g installs the package in global scope.If you face any error while installing the package(since I happened to, I guess because I closed the console while it was installing the first time) you can try following the below steps, which helped me solve it.</p>

<p> <strong>            npm list –g</strong></p>

<p> If the above step shows that there is a <em>unmet dependency phonegap</em>, then you could follow the below steps</p>

<p> <strong>            npm rm phonegap</strong></p>

<p> <strong>            npm cache clear</strong></p>

<p> Try installing PhoneGap again using <em>npm install –g phonegap</em></p></li>
<li><p>Install Cordova
<strong>npm install –g cordova</strong></p></li>
<li><p>Now we have everything setup for PhoneGap project. Lets create the project. Navigate to your project root folder and create a project.</p>

<p> <strong>phonegap create <appname></strong></p>

<p> This will create the basic folder structure for your PhoneGap project which looks like below.</p>

<p> <img class="left" src="/images/cordova_folder_structure.png" alt="cordova_folder_structure" /></p>

<p> <strong>.cordova: </strong>This directory contains files related to cordova.</p>

<p> <strong>merges: </strong>This directory contains platform specific assets. A sub-directory for each platform is created inside here, whenever  a new platform is created. This sub-directory mirrors the structure of the <em>www </em>directory, which allows to add platform specific files to appropriate folders.</p>

<p> <strong>platforms: </strong>This directory contains native code for each of the <a href="http://docs.phonegap.com/en/edge/guide_platforms_index.md.html">supported platforms</a>. By default this is empty and we need to add the required platforms, which we will see later.</p>

<p> <strong>plugins: </strong>This directory contains the <a href="https://build.phonegap.com/plugins">plugins</a> that provide extra support to interface with each of the native platforms.</p>

<p> <strong>www: </strong>This directory contains the primary files that is required for your project/application. This gets copied into each of the platform specific projects in <em>platforms </em>folder whenever a build is performed. So this is where your core development would happen and all your cross-platform code would live in.</p></li>
<li><p>Lets now create a native project, for windows phone.</p>

<p> <strong>cordova platform add wp8</strong></p>

<p> This will add a wp8 folder inside <em>platforms </em>and also <em>merges. </em>The one in platforms will have the native project setup with all the files in <em>www</em> folder copied into it. You can open up the sln file in Visual Studio and build and run. We have the application up and running on our first platform!
 Lets add in some code so that it makes sense as an application. We will stick on with our usual 500px api and show off some beautiful pictures. I have added jquery from nuget in Visual studio and also updated the files to show pictures from 500px, which I would not be explaining here as it is just some html/js/css..(Updated files in www folder can later be copied into the root <em>www </em>folder later. Need to figure out the correct way on how to go about this. In case you know how, please do leave a comment. Would be more than happy to learn.)</p></li>
<li><p>Once we copy out the updated files in platform specific <em>www </em>folder into root www folder we can go ahead and add android platform.</p>

<p> <strong>cordova platform add android</strong></p>

<p> This creates an android folder inside <em>platforms</em> and <em>merges</em> folder. You can open up the project in your IDE(<a href="https://www.eclipse.org/downloads/">Eclipse</a>, <a href="http://www.jetbrains.com/idea/">IntelliJ</a> or <a href="http://developer.android.com/sdk/installing/studio.html">Android Studio</a> etc) for android, build and run. We have the application up and running also on the second platform!
 For android you would need to make sure the config files are updated with the required permissions for accessing internet and also to enable <a href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing">CORS</a>. By default internet permissions are enabled, you would only have to update the config for cors(<em>origin header</em>) as it defaults to ‘<em>127.0.0.1*</em>’. I have updated this to just ‘*’, inside <strong><em>res/xml/config.xml </em></strong>(since there is one config.xml inside assets/www folder too).If you are new to android platform, which I was then you can check out here on <a href="http://rahulpnath.com/blog/setting-up-the-development-environment-for-phonegap-on-android/">Setting up the development environment for phonegap on android</a>.
 At times I did have the Android emulator not moving past the &lsquo;<em>Connecting to Device</em>&rsquo; screen while running the application. I just killed all the emulators and started a fresh one from AVD (Android Virtual Device) Manager, unchecking &lsquo;launch from snapshot&rsquo; and &lsquo;save to snapshot&rsquo; options.</p></li>
</ol>


<p>With PhoneGap/Cordova, you can see how easy it is to have an app in various platforms of your choice. We have not seen on how to utilize any of the platform specific features of devices using PhoneGap, but I am sure that you should be able to figure out from here, now that you have all that you need up and running.</p>

<p><img src="/Cordova_WP.jpg" alt="Cordova_WP" />
<img src="/Cordova_Android.jpg" alt="Cordova_Android" /></p>

<p>The source code for the sample is available <a href="https://github.com/rahulpnath/Blog/tree/master/GettingStartedOnPhoneGap">here</a>. Don’t forget to update the <a href="http://developers.500px.com/">api key for 500px</a> before you run the application.
<a href="http://www.codeproject.com" style="display:none" rel="tag">CodeProject</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thanks to Everyone Who Attended My First Public Talk At C#Corner Hyderabad UG]]></title>
    <link href="http://rahulpnath.com/blog/thanks-to-everyone-who-attended-my-first-public-talk-at-ccorner-hyderabad-ug/"/>
    <updated>2014-02-03T06:39:27+00:00</updated>
    <id>http://rahulpnath.com/blog/thanks-to-everyone-who-attended-my-first-public-talk-at-ccorner-hyderabad-ug</id>
    <content type="html"><![CDATA[<p>Thanks to everyone who attended <a href="http://www.c-sharpcorner.com/Events/64/">my very first public talk</a>, at the <a href="http://www.c-sharpcorner.com/">C#Corner</a> <a href="http://www.c-sharpcorner.com/Chapters/6/hyderabad-chapter.aspx">Hyderabad Chapter User Group(UG)</a> on February 1, Saturday on Windows Phone Development. Summary of the event is available <a href="http://www.c-sharpcorner.com/UploadFile/subhendude/C-Sharp-corner-hyderabad-user-group-meet-1-february-2014-offici/">here</a>. It was a very good experience speaking for the first time in front of a large audience, and from my side felt it went well. Here&rsquo;s some follow up information on the talk and also the code samples and presentations used.</p>

<ul>
<li><p>There might be a lot of you who would be planning to get started with phone development or yet in the dilema of whether or not to - <em><strong>&lsquo;Don&rsquo;t think much and just start <a href="http://developer.windowsphone.com/en-us">getting your hands dirty</a></strong></em>&rsquo;.</p></li>
<li><p>If your current project/work does not demand you to use whatever we have got started with it, develop a simple application on your free time/weekends. You would get lot of app ideas at <a href="http://www.dvlup.com/SignIn">DVLUP</a> and may even get rewarded if you crack some of their challenges - <em><strong>Stay motivated.</strong></em></p></li>
<li><p>Make sure whatever you develop is always properly backed up and stored - <em><strong>Use a source control</strong></em>.
<a href="http://www.visualstudio.com/en-us/products/visual-studio-online-overview-vs#SKUDetailList_1">Visual Studio Online</a> or <a href="https://github.com/">Github</a> are great free services that could get you started with.</p></li>
<li><p>Learn more about <a href="http://rahulpnath.com/blog/tag/mvvm/">MVVM</a>.The mvvm toolkit that we were using at the demo is <a href="http://mvvmlight.codeplex.com/">MVVM Light</a>. There are a couple of videos in <a href="http://mvvmlight.codeplex.com/">there</a> that will help you get started with it. <a href="http://compositewpf.codeplex.com/">Prism</a> is also another alternative that we had talked about. - <em><strong>Reuse across platforms</strong></em></p></li>
<li><p>As we had discussed, Getting Started in Windows Phone Development means you have acquired the same skills to Get Started on Windows 8 application too - <em><strong>Get started <a href="http://msdn.microsoft.com/en-in/windows/apps/br211386.aspx">here</a></strong></em>.</p></li>
<li><p>There are a lot of applications that are waiting to be developed for Windows phone and Windows 8 for which people are even ready to pay you. So if you want to earn out of your side projects, then try looking for projects in freelancing communities - <a href="https://www.odesk.com/">ODesk</a>, <a href="http://www.freelancer.in/">Freelancer</a>, <a href="https://www.elance.com/">Elance</a> are some to get you started - <em><strong>Earn while you Learn</strong></em></p></li>
</ul>


<p>Feel free to get in touch in case you need any help while on your Windows phone journey.</p>

<p>The samples and presentation slides is available in the event summary above or <a href="https://github.com/rahulpnath/Speaking/tree/master/Getting%20Started%20with%20Windows%20Phone%208%20App%20Development">here</a>.</p>
]]></content>
  </entry>
  
</feed>
