<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/category/tools/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2017-11-29T00:01:25+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Analyze Your Site Performance]]></title>
    <link href="http://rahulpnath.com/blog/analyze-your-site-performance/"/>
    <updated>2017-08-11T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/analyze-your-site-performance</id>
    <content type="html"><![CDATA[<p>If you own a website, then it is good to check their performance now and then. Various factors affect the site speed, and it&rsquo;s better to use some tools to do the job for you.</p>

<p><a href="https://developers.google.com/speed/pagespeed/">Google PageSpeed</a> is a set of tools from Google designed to check and optimize websites performance. PageSpeed Insights is one of the tools in the suite that helps identify the ways to make your site faster and mobile friendly. The tools check for common good practices and provide a score out of 100 points. <em>PageSpeed Insights only considers the network-independent aspects of page performance: the server configuration, the HTML structure of a page, and its use of external resources such as images, JavaScript, and CSS.</em></p>

<p><img src="/images/PageInsights.png" alt="PageInsights" class="center" ></p>

<p><a href="http://yslow.org/">YSlow</a> is a similar tool from Yahoo!, that analyzes web pages for performance. It is available as a browser extension and has one for all popular ones. It provides a grade for the web page based on a predefined ruleset or a user-defined ruleset. The grade is calculated based on the <a href="http://yslow.org/ruleset-matrix/">YSlow Ruleset Matrix</a>.</p>

<p><img src="/images/yslow.png" alt="YSlow" class="center" ></p>

<p>I have been implementing some of the recommendations from the above tools on this blog, but as you can see from the above results, there is still more to be done. Hope you find this helpful for your sites.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Fiddler - Free Web Debugging Proxy]]></title>
    <link href="http://rahulpnath.com/blog/fiddler-free-web-debugging-proxy/"/>
    <updated>2017-06-29T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/fiddler-free-web-debugging-proxy</id>
    <content type="html"><![CDATA[<p><a href="http://www.telerik.com/fiddler">Fiddler</a> is an HTTP debugging proxy server application and captures HTTP and HTTPS traffic. It is one of the tools in my <a href="http://www.rahulpnath.com/blog/tools-that-I-use/">essential toolkit list</a>. Fiddler allows debugging traffic from PC, MAC, Linux and mobile systems. It helps inspect the raw requests and responses between the client and the server.</p>

<p><img src="/images/fiddler_inspectors.png" alt="Fiddler" class="center" ></p>

<p>Some of the key features that I often use in Fiddler are</p>

<ul>
<li><p><a href="http://docs.telerik.com/fiddler/Observe-Traffic/Tasks/ViewSessionContent">Inspect Request/Response</a>
Look into the request and response data to see if all the required headers/attributes are set, and the data is sent as expected</p></li>
<li><p><a href="http://www.rahulpnath.com/blog/using-fiddler-to-help-in-manual-testing/">Compose Web Requests</a>
Manually compose requests to send to server and test endpoints.</p></li>
<li><p><a href="http://www.rahulpnath.com/blog/simulating-delays-in-http-calls-for-manual-tests/">AutoRespond to Requests</a>
Intercept requests from the browser and send back a pre-defined response or create a delay in response to the actual client.</p></li>
<li><p><a href="http://docs.telerik.com/fiddler/Observe-Traffic/Tasks/ViewSessionStatistics">Statistics</a>
Fiddler statistics give an overview of the performance details of a web session, indicating where the time is spent in the whole request/response cycle.</p></li>
<li><p><a href="http://docs.telerik.com/fiddler/Generate-Traffic/Tasks/ResendRequest">Modify and Replay a Request</a>
Fiddler allows modifying the request by editing its contents and replay the message to the server.</p></li>
<li><p><a href="http://docs.telerik.com/fiddler/Save-And-Load-Traffic/Tasks/CreateSAZ">Export and Import</a>
Fiddler makes it easy to share captured traces with different people. All captured traffic or selected requests can be exported and shared with others. The exported saz file can be opened in Fiddler to view back all the session details.</p></li>
</ul>


<p>These are some of the features that I use on a regular basis. Fiddler supports a lot more and is extensible to support custom requirements as well. I find it an indispensable tool when developing for the Web. <a href="https://www.telerik.com/download/fiddler">Get Fiddler</a> if you have not already.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: PNGGauntlet - Smash PNGs for Faster Sites]]></title>
    <link href="http://rahulpnath.com/blog/pnggauntlet-smash-pngs-for-faster-sites/"/>
    <updated>2017-06-07T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/pnggauntlet-smash-pngs-for-faster-sites</id>
    <content type="html"><![CDATA[<p>When I upload images to my blog, I try to keep the file size as small as possible. Reducing image size helps improve the site load time. To grab screenshots I use <a href="http://www.rahulpnath.com/blog/screenshots-with-snagit/">Snagit</a> and use <a href="http://www.rahulpnath.com/blog/paint-dot-net/">Paint.net</a> for any editing and resizing the images.</p>

<p>To further optimize images and compress them I use <a href="">PNGGauntlet</a><a href="https://pnggauntlet.com/.">https://pnggauntlet.com/.</a> PNGGauntlet combines <a href="http://advsys.net/ken/util/pngout.htm">PNGOUT</a>, <a href="http://optipng.sourceforge.net/">OptiPNG</a> and DeflOpt and helps smash PNG&rsquo;s to the smallest size.</p>

<p><img src="/images/pnggauntlet.png" alt="PNG Gauntlet" class="center" /></p>

<p>PNGGauntlet provides options to configure the PNG output. You can play around with the options for the best output. I use the default options and has been working fine for me.</p>

<p>Check out <a href="https://pnggauntlet.com/">PNGGauntlet</a> to optimize images for the web.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Git Credential Manager for Windows with Cmder]]></title>
    <link href="http://rahulpnath.com/blog/setting-up-git-credential-manager-for-windows-with-cmder/"/>
    <updated>2017-06-05T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/setting-up-git-credential-manager-for-windows-with-cmder</id>
    <content type="html"><![CDATA[<p>If you are wondering what Git Credential Manager (GCM) is, then possibly you see the below screen very often when you are interacting with your git repositories.</p>

<p><img src="/images/git_gcm.png" alt="Enter your Credentials, git" class="center" /></p>

<p>On Windows, you can use <a href="https://github.com/Microsoft/Git-Credential-Manager-for-Windows">Git Credential Manager for Windows</a> which integrates with git and provides the credentials whenever required. GCM removes the need for you to enter the credentials when using the git repositories.</p>

<p><a href="http://www.rahulpnath.com/blog/cmder-portable-console-emulator-for-windows/">Cmder</a> is a portable console emulator for Windows. I prefer to use git from the command line and find the cmder experience good. Check out the <a href="https://www.youtube.com/watch?v=fpxx8hlNTzc">youtube video</a> for more details.</p>

<p>To set up GCM with Cmder download the <a href="https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases">latest release of GCM</a> in the zip format. Unzip the package under the <em>vendor</em> folder in cmder. Run the <em>install.cmd</em> from within the unzipped GCM package.</p>

<p><img src="/images/git_gcm_location.png" alt="Vendor folder under cmder" class="center" /></p>

<p>Once you run the install script, the git config will be updated to use the credential manager. Running <em>git config &ndash;list</em> will show the <em>credential.helper</em> set to <em>manager</em>. If this is not automatically set you can set it manually by running</p>

<pre><code class="bash Set GCM as git credential manager">git config --global credential.helper manager
</code></pre>

<p>For GUI prompts for entering credentials use</p>

<pre><code class="bash Enable Gui prompt for passwords">git config --global credential.modalprompt true
</code></pre>

<p>Hope that saves you some time if you were entering the credentials every time you push/pull from a git repository.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Todoist Template Transformer - Transform Tasks to 'X' Days From Now]]></title>
    <link href="http://rahulpnath.com/blog/todoist-template-transformer-transform-tasks-to-x-days-from-now/"/>
    <updated>2017-05-09T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/todoist-template-transformer-transform-tasks-to-x-days-from-now</id>
    <content type="html"><![CDATA[<p><img src="/images/todoist_templates.png" alt="Todoist Templates" class="center" /></p>

<p><a href="https://blog.todoist.com/2015/11/19/new-way-to-create-todoist-templates/">Todoist Templates</a> is a simple way to create tasks for any of your recurring activities. Be it blogging, cooking, or any of your activities. With Todoist Templates, you can turn any project into a checklist that you can easily duplicate later. I have been using <a href="http://www.rahulpnath.com/blog/todoist-manage-your-todo-list/">Todoist</a> for a long time and find it useful to keep track of tasks (both personal and at work)</p>

<h4><strong>Problem</strong></h4>

<p>I <a href="http://www.rahulpnath.com/blog/experimenting-with-pomodoro-technique/">plan my tasks</a> for the upcoming week on Sunday morning. I pull in tasks for the upcoming week, and some of these tasks are template based. For e.g. for writing a blog post, I have the below template</p>

<pre><code class="text">TYPE,CONTENT,PRIORITY,INDENT,AUTHOR,RESPONSIBLE,DATE,DATE_LANG,TIMEZONE
task,Blog: BlogTopic,4,1,Rahul (3565260),,,en,Australia/Melbourne
task,BlogTopic: Draft Body,4,2,Rahul (3565260),,today,en,Australia/Melbourne
task,BlogTopic: Refine Body,4,2,Rahul (3565260),,today,en,Australia/Melbourne
task,BlogTopic: Intro and Conclusion,4,2,Rahul (3565260),,tomorrow,en,Australia/Melbourne
task,"BlogTopic: Images, Proof Read and Publish",4,2,Rahul (3565260),,tomorrow,en,Australia/Melbourne
</code></pre>

<p>The dates on the template are relative to the day that you import the template in Todoist. So if I pull in the template on a Sunday, the tasks will start on Sunday. This is not something that I want; I want them to start on a Monday. Alternatively, I can update the template to start from tomorrow. Even in that case, I will always have to know the exact start day relative to the day that I intend to pull in. I usually plan for the tasks on a Sunday but still, like the flexibility to pull in tasks any day of the week.</p>

<h3>Todoist Template Transformer</h3>

<p>The Todoist Template Transformer takes in a date and template path and adjusts all tasks in the template to start relative to the passed in date. In the above example, if I want to blog on Wednesday, I will input the Wednesday date and the template file path. The first two tasks will start on Wednesday and the third and fourth on Thursday. Running the transformer on a Sunday (07-May-2017) with the next Wednesday (10-May-2017) below is the new template</p>

<pre><code class="bat">TodoistTemplateTransformer.exe -startDate "10-May-2017" -templateFile "Blog Template.csv"
</code></pre>

<pre><code class="text">TYPE,CONTENT,PRIORITY,INDENT,AUTHOR,RESPONSIBLE,DATE,DATE_LANG,TIMEZONE
task,Blog: BlogTopic,4,1,Rahul (3565260),,,en,Australia/Melbourne
task,BlogTopic: Draft Body,4,2,Rahul (3565260),,in 3 days,en,Australia/Melbourne
task,BlogTopic: Refine Body,4,2,Rahul (3565260),,in 3 days,en,Australia/Melbourne
task,BlogTopic: Intro and Conclusion,4,2,Rahul (3565260),,in 4 days,en,Australia/Melbourne
task,"BlogTopic: Images, Proof Read and Publish",4,2,Rahul (3565260),,in 4 days,en,Australia/Melbourne
</code></pre>

<p>This utility is written in FSharp the <a href="https://github.com/rahulpnath/todoisttemplatetransformer">source code is available here</a> if you are interested. I am still in the initial stages of learning FSharp, so if you have any suggestions to improve the code, please raise a Pull Request or drop in a comment.</p>
]]></content>
  </entry>
  
</feed>
