<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rahul Nath]]></title>
  <link href="http://rahulpnath.com/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2018-06-28T00:01:29+00:00</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automated API Testing Using Postman Collection Runner]]></title>
    <link href="http://rahulpnath.com/blog/automated-api-testing-using-postman-collection-runner/"/>
    <updated>2018-06-26T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/automated-api-testing-using-postman-collection-runner</id>
    <content type="html"><![CDATA[<p>A while back we looked at how we can use <a href="https://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests/">Postman to chain multiple requests to speed up out Manual API Testing</a>. For those who are not familiar with <a href="https://www.getpostman.com/">Postman</a>, it is an application that assists in API testing and development, which I see as sitting a level top of a tool like <a href="https://rahulpnath.com/blog/fiddler-free-web-debugging-proxy/">Fiddler</a>.</p>

<p>In this post, we will see how we can use Postman to test some basic CRUD operations over an API using a feature called <a href="http://blog.getpostman.com/2016/11/22/postmans-new-collection-runner/">Postman Runner</a>. Using this still involves some manual intervention. However, we can automate them using a combination of different tools.</p>

<h3>Setting Up the API</h3>

<p>To start with I create a simple API endpoint using the out of the box Web API project from Visual Studio 2017. It is a Values Controller which stores key-value pairs to which you can send GET, POST, DELETE requests. Below is the API implementation. It is a simple in-memory implementation and does not use any persistent store. However, the tests would not change much even if the store was to be persistent. The importance here is not in the implementation of the API, but how you can use Postman to add some quick tests.</p>

<figure class='code'><figcaption><span>ValuesController</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">ValuesController</span> <span class="p">:</span> <span class="n">ApiController</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">values</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">Get</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">values</span><span class="p">.</span><span class="n">Values</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="n">IHttpActionResult</span> <span class="nf">Get</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">values</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">id</span><span class="p">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="nf">Ok</span><span class="p">(</span><span class="n">values</span><span class="p">[</span><span class="n">id</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nf">NotFound</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="n">IHttpActionResult</span> <span class="nf">Post</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">,</span> <span class="p">[</span><span class="n">FromBody</span><span class="p">]</span><span class="kt">string</span> <span class="k">value</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">values</span><span class="p">[</span><span class="n">id</span><span class="p">]</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">Ok</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="n">IHttpActionResult</span> <span class="nf">Delete</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(!</span><span class="n">values</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">id</span><span class="p">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="nf">NotFound</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">values</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">id</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">Ok</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Setting Up Postman</h3>

<p>To start with we will create a new Collection in Postman to hold our tests for the Values Controller - I have named it &lsquo;<em>Values CRUD - Test</em>&rsquo;. The collection is a container for all the API requests that we are going to write. First, we will add all the request definitions into postman which we can later reorder for the tests.</p>

<p><img src="http://rahulpnath.com/images/postman_request.png" alt="Postman Request" class="center" /></p>

<blockquote><p>The <em><strong>/</strong></em> in the URL are parameters defined as part of the selected Environment. Environments in Postman allow you to switch between different application environments like Development, Test, Production. You can configure different values for each environment and Postman will send the requests as per the configuration.</p></blockquote>

<p>Below are the environment variables for my local environment. You can define as many environments as you want and switch between them.</p>

<p><img src="http://rahulpnath.com/images/postman_environment.png" alt="Postman Environment" class="center" /></p>

<p>Now that I have all the request definitions for the API added let&rsquo;s add some tests to verify our API functionality.</p>

<h3>Writing The First Test</h3>

<p>Postman allows executing scripts before and after running API requests. We did see this in the <a href="https://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests/">API Chaining post</a> where we grabbed the <em>messageId</em> from the POST request and added it to the environment variable for use in the subsequent requests. Similarly, we can also add scripts to verify that the API request returns expected results, status code, etc.</p>

<p>Let&rsquo;s first write a simple test on our GET API request that it returns a 200 OK response when called. The below test uses the <a href="https://www.getpostman.com/docs/v6/postman/scripts/postman_sandbox_api_reference">Postmans PM API</a> to assert that status code of the response is 200. Check the <em><a href="https://www.getpostman.com/docs/v6/postman/scripts/postman_sandbox_api_reference#response-assertion-api-in-test-scripts">Response Assertion API in test scripts</a></em> to see the other assertion options available like <em>pm.response.to.have.status</em>. The tests are under the Tests section similar to where wrote the scripts to chain API requests. When executing the API request, the Tests tab shows the successful test run for the particular request.</p>

<figure class='code'><figcaption><span>200 Status Code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">pm</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="s2">&quot;Status code is 200&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">pm</span><span class="p">.</span><span class="nx">response</span><span class="p">.</span><span class="nx">to</span><span class="p">.</span><span class="nx">have</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://rahulpnath.com/images/postman_tests.png" alt="Postman Tests" class="center" /></p>

<p>Similarly, you can also write <em>Pre-request Script</em> to set variables or perform any other operation. Below I am setting the <em>Value</em> environment variable to &ldquo;Test&rdquo;. You could generate a random value here or set a random id, or set an identifier that does not already exists. It&rsquo;s test/application specific, so leave it you to decide what works best for you.</p>

<figure class='code'><figcaption><span>Pre-request Script.</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">pm</span><span class="p">.</span><span class="nx">environment</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;Value&quot;</span><span class="p">,</span> <span class="s2">&quot;Test&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Collection Runner</h3>

<p>The collection runner allows you to manage multiple API requests and run them as a set. Once completed it shows a summary of all the tests included within each request and details of tests that passed/failed in the run. You can target the Runner to run against your environment of choice.</p>

<p><img src="http://rahulpnath.com/images/postman_collection_runner.png" alt="Postman Collection Runner" class="center" /></p>

<p>Running these tests still involves some manual effort of selecting environments and running them. However using <a href="https://www.npmjs.com/package/newman">Newman</a>, you can run Postman Collections from the command line, which means even in your build pipeline.</p>

<p>Using Postman, we can quickly test our API&rsquo;s across multiple environments. The Collection Runner also shows an excellent visual summary of the tests and helps us in API development. However, I found these tests to violate the <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY principle</a>. You need to repeat the same API request structure if you have to use them in a different context. Like in the example above I had to create two <em>Get Value By Id</em> requests to test for the value existing and also for when it does not exists. You could use some conditional looping inside the scripts, but then that makes your tests complicated and gets into the loop of how to test your tests. Postman does allow you to export the API request to the language of your choice. So once you have the basic schema, you can export them and write tests that compose them. I find Postman tests and the Runner a quick way to start testing your API endpoints and then for more complicated cases use a stronger programming language. Having the tests in Postman also allows us to have an API spec in place and can be useful to play around with the API.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Reading Eggs - Learning To Read Can Be Easy And Fun]]></title>
    <link href="http://rahulpnath.com/blog/reading-eggs-learning-to-read-can-be-easy-and-fun/"/>
    <updated>2018-06-25T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/reading-eggs-learning-to-read-can-be-easy-and-fun</id>
    <content type="html"><![CDATA[<p>A couple of months back Gautham (my son) started playing <a href="https://readingeggs.com.au/">Reading Eggs</a>. We started off initially with a free trial after it being recommended by our friend <a href="https://www.facebook.com/asha.maria.90">Asha</a>. We got a 21-day extended trial in addition to the initial 21 days free trial (i.e a total of 42 days), which helped a lot with confirming that Gautham was to use this app. We noticed that he was reading small words quite comfortably and he grew an interest to read various things around. We took an annual subscription and feels totally worth it.</p>

<p><img src="http://rahulpnath.com/images/readingEggs_Levels.jpg" alt="Reading Eggs Levels" ></p>

<blockquote><p>Using the five essential keys to reading success, the program unlocks all aspects of learning to read for your child.</p>

<ul>
<li>The lessons use colourful animation, fun characters, songs, and rewards to keep children motivated.</li>
<li>The program is completely interactive to keep children on task.</li>
<li>When children start the program, they can complete a placement quiz to ensure they are starting at the correct reading level.</li>
<li>Parents can access detailed progress reports as well as hundreds of full-colour downloadable activity sheets that correspond with the lessons in the program.</li>
<li>The program includes over 2000 online books for kids – each ending with a comprehension quiz that assesses your child’s understanding.</li>
</ul>
</blockquote>

<p>Each level explores different letters/word combinations and has a knowledge quiz at the end of it to pass to the next level. <em>The program unlocks all aspects of learning to read for your child, focusing on a core curriculum of phonics and phonemic awareness, sight words, vocabulary, comprehension, and reading for meaning.</em></p>

<p>Do give the app a try if you have kids at home!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploring AzureKeyVaultConfigBuilder]]></title>
    <link href="http://rahulpnath.com/blog/exploring-azurekeyvaultconfigbuilder/"/>
    <updated>2018-06-22T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/exploring-azurekeyvaultconfigbuilder</id>
    <content type="html"><![CDATA[<p>Over the last weekend, I was playing around with <a href="https://rahulpnath.com/blog/azure-key-vault-as-a-connected-service-in-visual-studio-2017/">Visual Studio Connected Services support for Azure Key Vault</a>. The new feature allows seamless integration of ASP.NET Web applications with Azure Key Vault, making it as simple as using the ConfigurationManager to retrieve the Secrets from the Key Vault - just like you would retrieve it from the config file.</p>

<p><img src="http://rahulpnath.com/images/AzureKeyVaultConfigBuilder_config.png" class="center" ></p>

<p>In this post, we will look detailed into the <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders/tree/master/src/Azure">AzureKeyVaultConfigBuilder</a> class that allows the seamless integration provided by Connected Services. As we saw in the previous post when you add <a href="https://rahulpnath.com/blog/azure-key-vault-as-a-connected-service-in-visual-studio-2017/">Key Vault as a Connected Service</a>, it modifies the applications configuration file to add in the AzureKeyVaultConfigBuilder references.</p>

<div class="alert alert-warning">
Make sure to update the <b><i>Microsoft.Configuration.ConfigurationBuilders.Azure</i></b> and <b><i>Microsoft.Configuration.ConfigurationBuilders.Base</i></b> Nuget packages to the latest version.
</div>


<h3>Loading Connection String and App Settings</h3>

<p>The AzureKeyVaultConfigBuilder can be specified on both <a href="https://msdn.microsoft.com/en-us/library/ms228154.aspx">appsettings</a> and <a href="https://msdn.microsoft.com/en-us/library/bf7sd233(v=vs.100).aspx">connectionString</a> element using the <em>configBuilders</em> attribute.</p>

<figure class='code'><figcaption><span>Configuration File</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;appSettings</span> <span class="na">configBuilders=</span><span class="s">&quot;AzureKeyVault&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> ...
</span><span class='line'> <span class="nt">&lt;/appSettings&gt;</span>
</span><span class='line'> <span class="nt">&lt;connectionStrings</span> <span class="na">configBuilders=</span><span class="s">&quot;AzureKeyVault&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> ...
</span><span class='line'> <span class="nt">&lt;/connectionStrings&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Accessing Multiple Key Vaults</h3>

<p>The configBuilders element supports comma-separated list of builders. Using this feature, we can specify multiple Vaults as a source for our secrets. Note how we pass in <em>&lsquo;keyVault1,keyVault2&rsquo;</em> to configBuilders option below.</p>

<figure class='code'><figcaption><span>Configuration File</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configBuilders&gt;</span>
</span><span class='line'>    <span class="nt">&lt;builders&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span>
</span><span class='line'>        <span class="na">name=</span><span class="s">&quot;keyVault1&quot;</span>
</span><span class='line'>        <span class="na">vaultName=</span><span class="s">&quot;keyVault1&quot;</span>
</span><span class='line'>        <span class="na">type=</span><span class="s">&quot;Microsoft.Configuration.ConfigurationBuilders.AzureKeyVaultConfigBuilder, Microsoft.Configuration.ConfigurationBuilders.Azure, Version=1.0.0.0, Culture=neutral&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;add</span>
</span><span class='line'>        <span class="na">name=</span><span class="s">&quot;keyVault2&quot;</span>
</span><span class='line'>        <span class="na">vaultName=</span><span class="s">&quot;keyVault2&quot;</span>
</span><span class='line'>        <span class="na">type=</span><span class="s">&quot;Microsoft.Configuration.ConfigurationBuilders.AzureKeyVaultConfigBuilder, Microsoft.Configuration.ConfigurationBuilders.Azure, Version=1.0.0.0, Culture=neutral&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/builders&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configBuilders&gt;</span>
</span><span class='line'>  <span class="nt">&lt;appSettings</span> <span class="na">configBuilders=</span><span class="s">&quot;keyVault1,keyVault2&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  ...
</span><span class='line'>  <span class="nt">&lt;/appSettings&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If the same key has a value in multiple sources, then the value from the last builder in the list takes precedence. (But I assume you would not need that feature!)</p>

<h3>Modes</h3>

<p>All config builders have the options of setting a <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders#mode">mode</a>, which allows three options.</p>

<blockquote><ul>
<li><p><em>Strict</em> - This is the default. In this mode, the config builder will only operate on well-known key/value-centric configuration sections. It will enumerate each key in the section, and if a matching key is found in the external source, it will replace the value in the resulting config section with the value from the external source.</p></li>
<li><p><em>Greedy</em> - This mode is closely related to Strict mode, but instead of being limited to keys that already exist in the original configuration, the config builders will dump all key/value pairs from the external source into the resulting config section.</p></li>
<li><p><em>Expand</em> - This last mode operates on the raw XML before it gets parsed into a config section object. It can be thought of as a simple expansion of tokens in a string. Any part of the raw XML string that matches the pattern ${token} is a candidate for token expansion. If no corresponding value is found in the external source, then the token is left alone.</p></li>
</ul>
</blockquote>

<p>In short when set to <em>Strict</em> it matches the names in configuration file to Secrets in the Vault&rsquo;s configured. If it does not find corresponding Secret it ignores that key. When set to <em>Greedy</em>, irrespective of what keys are there in the configuration file, it makes all the secrets available in the Vaults specified via Configuration. <strong>This to me sounds like magic and would not prefer to do in an application that I build.</strong></p>

<h3>Greedy Mode Filtering and Formatting Secrets</h3>

<p>When using Greedy mode, we can filter on the list of keys that are made available by using the <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders#prefix">prefix</a> option. Only Secret Names starting with the prefix is made available in the configuration. The other secrets are ignored. This feature can be used in conjunction with <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders#stripprefix">stripPrefix</a> option. When stripPrefix is set to true (defaults to false), the Secret is made available in the configuration after stripping off the prefix.</p>

<p>For e.g. if we have a Secret with the name <em>connectionString-MyConnection</em>, having the below configuration will add the connection string with name <em>MyConnection</em>.</p>

<figure class='code'><figcaption><span>Configuration File</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;add</span>
</span><span class='line'>  <span class="na">name=</span><span class="s">&quot;keyVault1&quot;</span>
</span><span class='line'>  <span class="na">vaultName=</span><span class="s">&quot;keyVault1&quot;</span>
</span><span class='line'>  <span class="na">prefix=</span><span class="s">&quot;connectionString-&quot;</span>
</span><span class='line'>  <span class="na">stripPrefix=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>  <span class="na">type=</span><span class="s">&quot;Microsoft.Configuration.ConfigurationBuilders.AzureKeyVaultConfigBuilder, Microsoft.Configuration.ConfigurationBuilders.Azure, Version=1.0.0.0, Culture=neutral&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">var</span> <span class="n">connectionString</span> <span class="p">=</span> <span class="n">ConfigurationManager</span><span class="p">.</span><span class="n">ConnectionStrings</span><span class="p">[</span><span class="s">&quot;MyConnection&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Use prefix and stripPrefix in conjunction with the Greedy mode. For keys mentioned in the config it will try to match it with the prefix appended to the key name</em></p>

<h3>Preloading Secrets</h3>

<p>By default, the Key Vault Config Builder is set to preload the available Secrets in key vault. By doing this the config builder knows the list of configuration values that the key vault can resolve. For preloading the Secrets, the config builder uses the <em>List</em> call on Secrets. If you don&rsquo;t have list access on Secrets you can turn this feature off using the <em>preloadSecretNames</em> configuration option. At the time of writing the config builder version (1.0.1) throws an exception when preloading Secrets in turned on and List policy is not available on the Vault. I have raised a <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders/pull/24">PR to fix</a> this issue, which if accepted would no longer throw the exception and would invalidate this configuration option.</p>

<figure class='code'><figcaption><span>Configuration File</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;builders&gt;</span>
</span><span class='line'>    <span class="nt">&lt;add</span>
</span><span class='line'>    <span class="na">name=</span><span class="s">&quot;keyVault1&quot;</span>
</span><span class='line'>    <span class="na">preloadSecretNames=</span><span class="s">&quot;false&quot;</span>
</span><span class='line'>    <span class="na">vaultName=</span><span class="s">&quot;keyVault1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Authentication Modes</h3>

<p>The connectionString attribute allows you to specify the authentication mechanism with Key Vault. By default when using the Connected Service to create the key vault it adds the Visual Studio user to the access policies of the Key Vault. When connecting it uses the same. But this does not help you in a large team scenario. Most likely the Vault will be created under your organization subscription and you might want to share the same vault between all developers in the team. You could add the users individually and give them the appropriate access policies, but this might soon become cumbersome for a large team. Instead of using the <a href="https://rahulpnath.com/blog/authenticating-a-client-application-with-azure-key-vault/">Client Id/Secret or Certificate</a> authentication along with <a href="https://rahulpnath.com/blog/authenticating-with-azure-key-vault-using-managed-service-identity/">Managed Service Identity</a> configuration for localhost works the best. The configuration provider will then use the <em>AzureServicesAuthConnectionString</em> value from environment variable to connect to the key vault.</p>

<figure class='code'><figcaption><span>Local System</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Set AzureServicesAuthConnectionString Environment variable
</span><span class='line'>RunAs=App;AppId=AppId;TenantId=TenantId;AppKey=Secret.
</span><span class='line'>Or
</span><span class='line'>RunAs=App;AppId=AppId;TenantId=TenantId;CertificateThumbprint=Thumbprint;CertificateStoreLocation=CurrentUser
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the AzureKeyVaultConfigBuilder does provide good integration with Key Vault and makes using the Key Vault seamless. It does have a few issues, especially around <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders/issues/20">handling different Secret versions</a>, which might be fixed in future releases.</p>

<p><em>PS: At the time of writing there were a few issues that I had found while playing around. You can follow up on the individual issues on <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+author%3Arahulpnath+">Github</a>. Fingers crossed hope at least one of my PR&rsquo;s makes its way through to master!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Azure Key Vault As A Connected Service in Visual Studio 2017]]></title>
    <link href="http://rahulpnath.com/blog/azure-key-vault-as-a-connected-service-in-visual-studio-2017/"/>
    <updated>2018-06-15T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/azure-key-vault-as-a-connected-service-in-visual-studio-2017</id>
    <content type="html"><![CDATA[<p>Visual Studio (VS) now supports adding <a href="https://rahulpnath.com/blog/category/azure-key-vault/">Azure Key Vault</a> as a <a href="https://docs.microsoft.com/en-us/azure/key-vault/vs-key-vault-add-connected-service">Connected Service</a>, for Web Projects ( ASP.NET Core or any ASP.NET project). Enabling this from the Connected Service makes it easier for you to get started with Azure Key Vault. Below are the prerequisites to use the Connected Service feature</p>

<blockquote><p><a href="https://docs.microsoft.com/en-us/azure/key-vault/vs-key-vault-add-connected-service#prerequisites">Prerequisites</a></p>

<ul>
<li>An Azure subscription. If you do not have one, you can sign up for a free account.</li>
<li>Visual Studio 2017 version 15.7 with the Web Development workload installed. Download it now.</li>
<li>An ASP.NET 4.7.1 or ASP.NET Core 2.0 web project open.</li>
</ul>
</blockquote>

<p><img class =" center" src="http://rahulpnath.com/images/keyVault_connectedService.png" alt="Visual Studio, Azure Key Vault Connected Services" /></p>

<p>When selecting &lsquo;Secure Secrets with Azure Key Vault&rsquo; option from the list of Connected Services provided it takes you to a new page within Visual Studio with your Azure Subscription associated with Visual Studio Account and gives you the ability to add a Key Vault to it. VS does generate some defaults for the Vault Name, Resource Group, Location and the Pricing Tier which you can edit as per your requirement. Once you confirm to the <em>Add</em> the Key Vault, VS provisions the Key Vault with the selected configuration and modifies some things in your project.</p>

<ul>
<li><a href="https://docs.microsoft.com/en-us/azure/key-vault/vs-key-vault-aspnet-what-happened">Changes Made to your ASP.NET project</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/key-vault/vs-key-vault-aspnet-core-what-happened">Changes made to your ASP.NET Core project</a></li>
</ul>


<p><img class =" center" src="http://rahulpnath.com/images/keyVault_connectedService_createKeyVault.png" alt="Visual Studio, Azure Key Vault Connected Services" /></p>

<p>In short, VS adds</p>

<ul>
<li>a bunch of NuGet packages to access Azure Key Vault</li>
<li>Adds in the Keyvault Url details</li>
<li>In ASP.NET Web project VS modifies the configuration file to add in the AzureKeyVaultConfigBuilder as shown below.</li>
</ul>


<figure class='code'><figcaption><span>Web.config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;configSections&gt;</span>
</span><span class='line'><span class="nt">&lt;section</span>
</span><span class='line'>      <span class="na">name=</span><span class="s">&quot;configBuilders&quot;</span>
</span><span class='line'>      <span class="na">type=</span><span class="s">&quot;System.Configuration.ConfigurationBuildersSection, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;</span>
</span><span class='line'>      <span class="na">restartOnExternalChanges=</span><span class="s">&quot;false&quot;</span>
</span><span class='line'>      <span class="na">requirePermission=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/configSections&gt;</span>
</span><span class='line'><span class="nt">&lt;configBuilders&gt;</span>
</span><span class='line'><span class="nt">&lt;builders&gt;</span>
</span><span class='line'><span class="nt">&lt;add</span>
</span><span class='line'>      <span class="na">name=</span><span class="s">&quot;AzureKeyVault&quot;</span>
</span><span class='line'>      <span class="na">vaultName=</span><span class="s">&quot;webapplication-47-dev-kv&quot;</span>
</span><span class='line'>      <span class="na">type=</span><span class="s">&quot;Microsoft.Configuration.ConfigurationBuilders.AzureKeyVaultConfigBuilder, Microsoft.Configuration.ConfigurationBuilders.Azure, Version=1.0.0.0, Culture=neutral&quot;</span>
</span><span class='line'>      <span class="na">vaultUri=</span><span class="s">&quot;https://WebApplication-47-dev-kv.vault.azure.net&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/builders&gt;</span>
</span><span class='line'><span class="nt">&lt;/configBuilders&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To start using Azure Key Vault from your application we first need to add some Secrets to the Key Vault created by Visual Studio. You can add a secret to the portal using multiple ways, the most straightforward being <a href="https://rahulpnath.com/blog/managing-key-vault-through-azure-portal/">using the Azure Portal</a>. Once you add the Secret to the Key Vault, update the configuration file with the Secret names. Below is how you would do for an ASP.NET Web Project. (<em>MySecret</em> and <em>VersionedSecret</em> keys)</p>

<div class="alert alert-warning">
Make sure to add <b>configBuilders=&#8221;AzureKeyVault&#8221;</b> to the appSettings tag. This tells the Configuraion Manager to use the configured AzureKeyVaultConfigBuilder
</div>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;appSettings</span> <span class="na">configBuilders=</span><span class="s">&quot;AzureKeyVault&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;webpages:Version&quot;</span> <span class="na">value=</span><span class="s">&quot;3.0.0.0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;webpages:Enabled&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;ClientValidationEnabled&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;UnobtrusiveJavaScriptEnabled&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;MySecret&quot;</span> <span class="na">value=</span><span class="s">&quot;dummy1&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;VersionedSecret&quot;</span> <span class="na">value=</span><span class="s">&quot;dummy2&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/appSettings&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The values <em>dummy*</em> are just dummy values and will be overridden at runtime from the Secret Values created in the Key Vault. If the Secret with the corresponding name does not exist in Key Vault, then the <em>dummy</em> values will be used.</p>

<h3>Authentication</h3>

<p>When VS creates the Vault, it adds in the user logged into VS to the Access Policies list. When running the application, the AzureKeyVaultConfigBuilder uses the same details to authenticate with the Key Vault.</p>

<blockquote><p>If you are not logged in as the same user or not logged in at all the provider will not be able to authenticate with the Key Vault and will fallback to use the dummy values in the configuration file. Alternatively you could specify <a href="https://docs.microsoft.com/en-us/azure/key-vault/service-to-service-authentication#connection-string-support">connection option avaiable for AzureServiceTokenProvider</a></p></blockquote>

<p><img class =" center" src="http://rahulpnath.com/images/keyVault_connectedService_AccessPolicies.png" alt="Visual Studio, Azure Key Vault Connected Services" /></p>

<h3>Secrets and Versioning</h3>

<p>The <a href="https://github.com/aspnet/MicrosoftConfigurationBuilders/tree/master/src/Azure">AzureKeyVaultConfigBuilder</a> requests to get all the Secrets in the Key Vault at application startup using the <a href="https://docs.microsoft.com/en-us/rest/api/keyvault/getsecrets/getsecrets">Secrets endoint</a>. This call returns all the Secrets in the Key Vault. For whatever keys in the AppSettings that has a match with a Secret in the vault, a request is made to get the <a href="https://docs.microsoft.com/en-us/rest/api/keyvault/getsecret/getsecret">Secret details</a>, which returns the actual Secret value for the keys. Below are the traces of the calls going out captured using <a href="https://rahulpnath.com/blog/fiddler-free-web-debugging-proxy/">Fiddler</a>.</p>

<p><img class =" center" src="http://rahulpnath.com/images/keyVault_connectedService_requests.png" alt="AzureKeyVaultConfigBuilder Fiddler Traces " /></p>

<p>It looks like at the moment the AzureKeyVaultConfigBuilder get only the latest version of the Secrets. As you can tell from one of my Secret names (VersionedSecret), I have created two versions for the Secret, and the config builder picks the latest version. I don&rsquo;t see a way right now whereby I can specify a specific secret version.</p>

<p>The Visual Studio Connected Services makes it easy to get started with Azure Key Vault and move your secrets to a more secure store, than having it around in your <a href="https://rahulpnath.com/blog/keeping-sensitive-configuration-data-out-of-source-control/">configuration files</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Prettier - An Opinionated Code Formatter]]></title>
    <link href="http://rahulpnath.com/blog/prettier-an-opinionated-code-formatter/"/>
    <updated>2018-06-04T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/prettier-an-opinionated-code-formatter</id>
    <content type="html"><![CDATA[<p>Code Formatting is an essential aspect of writing code, and I did write about this a while back on <a href="https://rahulpnath.com/blog/introducing-code-formatting-into-a-large-codebase/">introducing code formatting into a large code base</a>. It&rsquo;s not about what all rules you and your team use, it&rsquo;s about sticking with the conventions and using them consistently. Code Formatting rules are best when applied automatically, and the developer does not need to do anything in particular about it.</p>

<p><a href="https://prettier.io/">Prettier</a> is an opinionated code formatter, which supports multiple languages and editors and easy to get started. Getting set up is as easy as just installing the <a href="https://prettier.io/docs/en/install.html">prettier package using yarn/npm</a>. There are multiple points at which you can integrate Prettier - <a href="https://prettier.io/docs/en/editors.html">in your editor</a>, <a href="https://prettier.io/docs/en/precommit.html">pre-commit hook</a> or <a href="https://prettier.io/docs/en/cli.html#list-different">CI environments</a>.</p>

<div style="text-align: center;">
<iframe width="560" height="315" src="https://www.youtube.com/embed/zgWBAKZvdFQ" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
</div>


<p>Most of the IDE&rsquo;s have plugins for Prettier which makes it easy to get it into the code right from the beginning. You might need to update your IDE settings to run prettier when you save a file. For VS Code I have to set editor.formatOnSave to true to turn on this behaviour.</p>

<p>As the title says, Prettier is opinionated, which is useful in many ways and removes much time wasted on unnecessary discussions. However, it does provide some <a href="https://prettier.io/docs/en/configuration.html">configuration options</a>. Check if it provides enough for you to call a meeting to decide on one of them :).</p>

<p>Write prettier code!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Check If You Have Been Hacked!]]></title>
    <link href="http://rahulpnath.com/blog/check-if-you-have-been-hacked/"/>
    <updated>2018-05-31T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/check-if-you-have-been-hacked</id>
    <content type="html"><![CDATA[<p><img src="http://rahulpnath.com/images/password_manager.jpg" alt ="https://pixabay.com/en/data-security-keyboard-computer-1590455/" class="center" /></p>

<p>With more and more data breaches happening it is possible that your personal information and passwords are already compromised. If you have been lazy and reusing passwords (just like me until a while back) across multiple sites then it is good to check if your password is already compromised. It necessarily need not be one of your social media account or bank account that needs to be compromised for an attacker to get your credentials. If you have been reusing passwords across sites, it might be that one site where security is not given much importance for that gets breached, exposing your credentials to the attacker or anyone who has the breached data. Often hackers use this information to try and enumerate other sites, social network, bank logins to try and login assuming the behaviour of password reuse.</p>

<blockquote><p><em>Check your <a href="https://haveibeenpwned.com/">email</a> or <a href="https://haveibeenpwned.com/Passwords">password</a> to see if any has been part of a data breach.</em></p></blockquote>

<p>To check if you have been part of a data breach you can use the service <a href="https://haveibeenpwned.com/">haveibeenpwned</a>. If you have been part of any data breaches, then it will show you the details. In addition to that, you can also use the <a href="https://haveibeenpwned.com/Passwords">Pwned Passwords</a> list to check if the password that you use has been part of any data breaches. It&rsquo;s good to change your password if you find yours in there. If you are worried about entering your password in haveibeenpwned site, the good thing is that it uses <a href="https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2/">k-anonymity model</a>, which means that your full password is not sent across the wire.</p>

<h3>Next Steps</h3>

<ul>
<li>Update your passwords on all sites that you use if you have been reusing passwords. If you don&rsquo;t have much time to do this in one shot, you can do this incrementally as and when you next visit them.</li>
<li>Make sure you have unique passwords for each of the site. <a href="https://www.troyhunt.com/only-secure-password-is-one-you-cant/">A good password is one that you cannot remember</a>. So if you are not using a <a href="https://rahulpnath.com/blog/password-manager-get-one-if-you-havent-already/">Password Manager</a> it&rsquo;s a good idea to start using. If you don&rsquo;t want to spend money on a password manager, you can always use a <a href="https://www.lastpass.com/password-generator">random password generator</a> to generate one for you. Remembering that password might be hard, you could either write it down or save it in the browser (not that I am recommending it over getting a Password Manager, but better than reusing passwords).</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDC Security 2018 - Overview and Key Takeaways]]></title>
    <link href="http://rahulpnath.com/blog/ndc-security-2018-overview-and-key-takeaways/"/>
    <updated>2018-05-28T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/ndc-security-2018-overview-and-key-takeaways</id>
    <content type="html"><![CDATA[<p>While in Sydney I was lucky enough to have attended the <a href="https://rahulpnath.com/blog/ndc-sydney/">first</a> and <a href="https://rahulpnath.com/blog/ndc-sydney-2017/">second</a> NDC Conferences. After moving up to Brisbane, did not think I could attend one of these soon. However, then comes a nice shorter version of NDC specific to Security - <a href="https://ndcsecurity.com.au/">NDC Security</a>. As the name suggests, this conference is particular to security-related topics with a 2-day workshop and 1-day conference, as was held in Gold Coast, Queensland.</p>

<h3>The Workshop</h3>

<p><a href="https://www.troyhunt.com/">Troy Hunt</a> and <a href="https://scotthelme.co.uk/">Scott Helme</a> ran <a href="https://ndcsecurity.com.au/workshops/">two workshops</a> and I attended <a href="https://ndcsecurity.com.au/workshop/hack-yourself-first-how-to-go-on-the-cyber-offence/">Hack Yourself First</a> by Troy. The workshop covers a wide range of topics and is perfect for anyone who is into web development. The best thing is that you only need to have a browser and <a href="https://www.telerik.com/download/fiddler">Fiddler</a>/<a href="https://www.charlesproxy.com/download/">Charles Proxy</a> (depending on whether you are on Windows or Mac land). One of the interesting thing about the workshop is that it puts you first into the hackers perspective and forces you to exploit existing vulnerabilities in the <a href="http://hackyourselffirst.troyhunt.com/">sample site</a> designed specifically for this. Once you can do this, we then look at ways of protecting ourselves against such exploits and other mechanisms involved.</p>

<p><img src="http://rahulpnath.com/images/ndc_security_hyf.jpg" class="center" alt="Hack yourself first, Troy Hunt"></p>

<p>The workshop highlights how easy it is to find and exploit vulnerabilities in applications. Some tools detect vulnerabilities and exploit them for you if you input a few details to them. You necessarily need not know the vulnerabilities itself or how exactly to exploit them. Such tools make it easy for people to use them on any website that is out there on the web. Combined with the power of search engines it makes it quite easy to make your site vulnerabilities to be easily discoverable.</p>

<h3>The Conference</h3>

<p>There were <a href="https://ndcsecurity.com.au/agenda/">six talks</a> in total and below are the ones that I found interesting.</p>

<ul>
<li><a href="https://ndcsecurity.com.au/talk/csp-xxp-sts-pkp-caa-etc-omg-wtf-bbq/">Scott Helme Talk: CSP XXP STS PKP CAA ETC OMG WTF BBQ…</a></li>
<li><a href="https://ndcsecurity.com.au/talk/dependable-dependencies/">Talk: Dependable Dependencies</a></li>
<li><a href="https://ndcsecurity.com.au/talk/everything-is-cyber-broken/">Everything is Cyber-broken</a></li>
</ul>


<p><img src="http://rahulpnath.com/images/ndc_security_conference.jpg" class="center" alt="NDC Securtiy, 2018 - Conference"></p>

<p>The whole web is on a journey towards making it more secure. So it is an excellent time to <a href="https://rahulpnath.com/blog/https-for-free-and-why-you-should-care/">move on to HTTPS</a> if you are not already. Even after enabling HTTPS, it is a good idea to make sure you have got all the appropriate <a href="https://securityheaders.com/">security headers</a> set. Making sure that the libraries that you depend on are patched and updated is equally essential.
There are incidents of massive data breaches because of vulnerabilities in third-party libraries and not keeping them updated.</p>

<blockquote><p><em>Functionality need not be the only reason to upgrade third-party libraries. There might be security vulnerabilities that are getting patched which is an equally good reason to update dependent packages</em></p></blockquote>

<p>The harder thing is to keep track of the vulnerabilities that are getting reported and always checking back with your application&rsquo;s dependencies. There is a wide range of tools that help make this easy and seamlessly integrate within the development workflow. It can be included as early as when a developer intends to include a library into the source code, or in the build pipeline or even for sites that are up and running. The earlier such issues get detected in the software development lifecycle, the less costly and impact it has on time and cost.</p>

<h4><strong>Tools</strong></h4>

<ul>
<li><a href="https://sonarwhal.com/scanner/">Sonarwhal</a></li>
<li><a href="https://snyk.io/">Snyk</a></li>
<li><a href="https://retirejs.github.io/retire.js/">Retire.js</a></li>
<li><a href="https://www.netsparker.com/">Netsparker</a></li>
<li><a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project">OWASP Zed Attack Proxy Project</a></li>
<li><a href="https://www.troyhunt.com/troys-ultimate-list-of-security-links/">Ultimate List of Security Links</a></li>
</ul>


<p>The conference ended with a good discussion between Troy and Scott on how everything is Cyber broken. It touches upon the value of Extended Validation (EV) Certificate and how CA&rsquo;s are trying to push for them while browsers are more and more going away from them. It also touches on various proponents of HTTP and the wrong messages that are getting spread to a broader audience and also about <a href="https://scotthelme.co.uk/revocation-is-broken/">certificate revocations</a> and a lot more. It was a fun discussion and a great end to the three-day event.</p>

<h3>Location and Food</h3>

<p>NDC Security was held at <a href="https://www.qthotelsandresorts.com/gold-coast/">QT Gold Coast, Queensland</a> and well organized. Coffee and drinks were available all throughout the day with a barista on the last day (which was cool). Food was served at start, breaks, and lunch and was good. The conference rooms were great and spacious and had reasonable good internet. Did not face much connectivity issues and everything ran smoothly.</p>

<p><img src="http://rahulpnath.com/images/ndc_security_food_location.jpg" class="center" alt="NDC Securtiy, 2018 - Food and Location"></p>

<p>One of the things I first did after coming from the conference was to <a href="https://rahulpnath.com/blog/https-for-free-and-why-you-should-care/">move this blog over to HTTPS</a>. I had been procrastinating long on this, but there were enough reasons to make a move now. Also, there are a bunch of things that catch my eye at client places and other web sites that I visit often. Attending the conference and workshop has been a great value add and recommend to anyone if you have a chance to attend that. For the others, most of the content is available in <a href="https://www.pluralsight.com/">Pluralsight</a>.</p>

<p><em>PS: Special thanks to <a href="https://rahulpnath.com/blog/finding-a-job-abroad/">Readify</a> for sending me to this conference and also providing a &lsquo;paid vacation (accommodation)&rsquo; in Gold Coast. It was a nice three-day break for my wife and son also.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Authy - Sync Two Factor Authentication Across Devices]]></title>
    <link href="http://rahulpnath.com/blog/authy-sync-two-factor-authentication-across-devices/"/>
    <updated>2018-05-21T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/authy-sync-two-factor-authentication-across-devices</id>
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Multi-factor_authentication">Two Factor Authentication</a> (2FA) is becoming more and more common these days and is a good way to protect your accounts from getting into the wrong hands. SMS and App based 2FA are more common with the day to day services that we use, like Gmail, Outlook, Facebook etc. Enabling 2FA the user is prompted for a number that gets sent to them via phone or generated using an application, in addition to the username and password, when logging in. Enabling 2FA protects your account a level further. Even if an attacker has your credentials from a data breach, they would still need access to your phone to log in to your account. Using an app to generate the codes is more preferable than using SMS as it does not require internet connectivity or mobile service.</p>

<p>Until lately I have been using <a href="https://support.google.com/accounts/answer/1066447?hl=en&amp;ref_topic=2954345">Google Authenticator</a> to generate codes for all the accounts that I have 2FA enabled. The app does work well on a single mobile device but becomes a pain when you want to switch phones or lose the phone. You could potentially be locked out of your accounts if you lose the phone and don&rsquo;t have the backup codes available.</p>

<p><img src="http://rahulpnath.com/images/authy_preview.png" alt="Authy" class="center" /></p>

<p><a href="https://authy.com/features/">Authy</a> is one of the best-rated 2FA application which targets exactly the issues with Google Authenticator. It is easy to setup, can be secured via TouchId/Password, supports encrypted backups and syncs across multiple applications and devices. Once setup any code that you add to your app gets synced through Authy servers and is all encrypted and secured. Authy has applications for the <a href="https://authy.com/download/">mobile, desktop and also has a plugin for Chrome browser</a>. You can also manage devices from the account and revoke a device if it gets lost or is not used anymore. <a href="https://authy.com/blog/authy-vs-google-authenticator/">Authy vs Google Authentication post</a> covers in detail all the differences between the two and the advantages of using Authy.</p>

<p>Check out <a href="https://authy.com/features/">Authy</a> and do setup 2FA if you are not already!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTPS For Free and Why You Should Care]]></title>
    <link href="http://rahulpnath.com/blog/https-for-free-and-why-you-should-care/"/>
    <updated>2018-05-19T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/https-for-free-and-why-you-should-care</id>
    <content type="html"><![CDATA[<p>If you are here and reading this probably you have a website and is serving it over HTTP. If you are unsure of whether your site needs HTTPS or not, don&rsquo;t think twice - <strong>YES, YOUR SITE NEEDS HTTPS</strong>.</p>

<p>If you are not convinced check out <a href="https://doesmysiteneedhttps.com/">https://doesmysiteneedhttps.com/</a>. One of the main reasons that I have seen (including me) why people have shied away from having HTTPS on sites was cost. And this post explains how to get HTTPS for free. But make sure you are getting it for the correct reasons and you know exactly what you are getting</p>

<div class="center">
    <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">HTTPS &amp; SSL doesn&#39;t mean &quot;trust this.&quot; It means &quot;this is private.&quot; You may be having a private conversation with Satan.</p>&mdash; Scott Hanselman (@shanselman) <a href="https://twitter.com/shanselman/status/187572289724887041?ref_src=twsrc%5Etfw">April 4, 2012</a></blockquote>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<p>Depending on how you are hosting you could possibly take two routes to enable HTTPS on your site. Let&rsquo;s look at them in detail.</p>

<h3>Option 1 - Get your Certificate and Add to Your Host</h3>

<p>If your hosting service already allows you to upload a custom domain certificate, but you were just holding back because of the extra cost of getting a certificate, then head over to <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a> to get your free certificate. Again depending on your hosting provider and the level of access that you have on your web server, Let&rsquo;s Encrypt has <a href="https://letsencrypt.org/getting-started/">muliple ways</a> on how you can get a certificate.</p>

<blockquote><p><a href="https://letsencrypt.org/docs/faq/#general"><strong>What does it cost to use Let’s Encrypt? Is it really free?</strong></a><br/>
<em>We do not charge a fee for our certificates. Let’s Encrypt is a nonprofit, our mission is to create a more secure and privacy-respecting Web by promoting the widespread adoption of HTTPS. Our services are free and easy to use so that every website can deploy HTTPS.</em></p>

<p><em>We require support from generous sponsors, grantmakers, and individuals in order to provide our services for free across the globe. If you’re interested in supporting us please consider donating or becoming a sponsor.</em></p>

<p><em>In some cases, integrators (e.g. hosting providers) will charge a nominal fee that reflects the administrative and management costs they incur to provide Let’s Encrypt certificates.</em></p></blockquote>

<h3>Option 2 - CloudFlare</h3>

<p>If you are like me on a shared/cheaper hosting service it is more likely that your hosting plan does not support adding SSL certificates. You will be forced to upgrade to a higher plan to upload a certificate, which in turn will cost you more. In this case, you can use <a href="https://www.cloudflare.com/">Cloudflare</a>, to enable HTTPS for free.</p>

<p>Cloudflare provides lots of features for websites, but in our case, we are more interested in what the Free plan gives us. It gives us a Shared SSL Certificate and also added benefits of Global CDN.</p>

<p><img src="http://rahulpnath.com/images/cloudflare_free_plan.png" class="center" /></p>

<p>Cloudflare acts as a <a href="https://en.wikipedia.org/wiki/Reverse_proxy">reverse proxy</a> between you and the server hosting this web page, which simply means that all requests now go through Cloudflare which in turn reaches out to the web server, if it cannot find a locally cached copy. So this also means that there are now reduced number of calls to the web server as Cloudflare would serve it from its cache if already available.</p>

<p>Shared SSL is what is more interesting for us as part of this blog post. What shared SSL gives us is free HTTPS for our website. We get a Domain Validated (DV) certificate, with a small catch. It is not issued to our domain but to a shared Cloudflare domain server (sni154817.cloudflaressl.com in my case). If you want a custom SSL certificate then you need to be on a paid plan.</p>

<p><img src="http://rahulpnath.com/images/blog_ssl_certificate.png" class="center" /></p>

<p>Cloudflare supports <a href="https://support.cloudflare.com/hc/en-us/articles/200170416">multiple SSL settings</a> - Off, Flexible SSL, Full SSL, Full SSL(Strict). Depending on how your host is setup you can choose one of the options. Since I am using <a href="https://azure.microsoft.com/en-au/services/app-service/web/">Azure Web Apps</a> to host, it supports https over <em>*.azurewebsites.net</em> subdomain. But since the certficate is not for my custom domain name (rahulpnath.com), I have set the SSL setting to Full SSL. Cloudfare in this case will connect over HTTPS but not validate the certificate. If your host does not support HTTPs connection (for free) you can use Flexible SSL.
<a href="https://www.cloudflare.com/ssl/" >
<img src="http://rahulpnath.com/images/cloudflare_ssl_modes.png" class="center" />
</a></p>

<p>You can also choose to enable Cloudflare with Full SSL(Strict) if you have followed Option 1 and have a custom SSL certificate for the domain. This will give you the added benefits that Cloudfare provides.</p>

<h3>Enabling HSTS Preload</h3>

<p>Now that you have HTTPS setup on your domain with either of the options above, we can see that the website is now accessible over HTTPS. However, when you make the very first request to the website, the request goes over HTTP which then redirects over to HTTPS, after which the communication happens over a secure channel. However, there is a risk where the very first request can be intercepted and cause undesired behaviour.</p>

<blockquote><p><em><a href="https://en.wikipedia.org/wiki/Trust_on_first_use">Trust on first use</a> (TOFU), or trust upon first use (TUFU), is a security model used by client software which needs to establish a trust relationship with an unknown or not-yet-trusted endpoint.</em></p></blockquote>

<p>By setting the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security">STS(Strict-Transport-Security)</a> header along with the preload directive, we can then add our domain to the <a href="https://hstspreload.org/">HSTS Preload list</a>. By adding your domain into this list it is literally getting hardcoded into source code of browsers (like for e.g <a href="https://chromium.googlesource.com/chromium/src/net/+/master/http/transport_security_state_static.json">Chrome here</a>). So anytime a request is made to a site it is checked against this hardcoded list available in memory and if present the request goes as HTTPS from the very first. You can set all subdomains for your domain as well as HSTS preloaded. Make sure you have all subdomains are served over HTTPS so that you do not lock yourself out on those sites. You can find more details on HSTS <a href="https://scotthelme.co.uk/hsts-the-missing-link-in-tls/">here</a>.</p>

<p>Now that the cost factor is out of making your site support HTTPS, is there anything else that is holding you back? If speed is a concern and it worries that encryption/decryption at both ends of communication is going to slow you down take a look at this post on <a href="https://www.troyhunt.com/i-wanna-go-fast-https-massive-speed-advantage/">HTTPS&#8217; massive speed advantage</a>.
If you are still not convinced let me give it one last shot to get you on board. Going forward most modern browsers are going to default to the web as a secure place. So instead of the present positive visual security indicators, it would start showing warnings on pages served over HTTP. That means soon your sites would start showing <span style="color:red;">Not Secure</span> if you are not moving over to HTTPS.</p>

<p><a href="https://blog.chromium.org/2018/05/evolving-chromes-security-indicators.html" >
    <img src="http://rahulpnath.com/images/chrome_https.png" class="center" />
</a></p>

<p>I don&rsquo;t see any reason why we should still be serving our sites over HTTP. As you can see I have moved over to the HTTPS and have added this domain to the preload list as well. Let&rsquo;s make the web secure by default!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Share and Inspire]]></title>
    <link href="http://rahulpnath.com/blog/share-and-inspire/"/>
    <updated>2018-02-09T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/share-and-inspire</id>
    <content type="html"><![CDATA[<p>When I started this blog around nine years back, my only intention was to share technical posts. But over period of time I started writing about a variety of things including <a href="http://www.rahulpnath.com/blog/category/productivity/">productivity tips</a> that I found useful, <a href="http://www.rahulpnath.com/blog/category/travelogue/">travelogues</a>, <a href="http://www.rahulpnath.com/blog/category/thoughts/">random thoughts</a>, <a href="http://www.rahulpnath.com/blog/2017-recap/">personal goals</a>, <a href="http://www.rahulpnath.com/blog/category/blogging/">blogging</a> etc. One of the things that I have noticed is that a lot of people have been inspired by these various posts and photos that I post online and have triggered them to do similar things.</p>

<p><img src="http://rahulpnath.com/images/share_and_inspire.jpg" alt="Share and Inspire, Image Source https://www.saylor.org/2015/04/blog-saylor-student-stories/" class="center"></p>

<p>I&rsquo;ve had my own similar inspirations to start the various things that I do today. Like for instance, I started running after being inspired by my friends, <a href="https://twitter.com/SatyKrish">Satish</a>, <a href="https://www.facebook.com/jeyakums">Suresh</a> and <a href="https://www.facebook.com/thirusv">Thiru</a>. I reached out to them for various tips when I started running a year ago. From running I moved on to cycling and a bit of swimming after seeing my friend <a href="https://www.facebook.com/rahul.revikumar477977">Rahul</a>. For travel, my inspiration has been <a href="https://www.facebook.com/arun.sudheendran.1">Arun Sudheendran</a> and <a href="https://www.facebook.com/deepak.suresh">Deepak Suresh</a> who do a fair bit of exploration. I tend to reach out to them for travel ideas and places to visit. Similarly, there have been inspirations from people that I have never met or met just once or twice.</p>

<p>Below is a transcript of a chat with one of my readers whom I have never met. It&rsquo;s a great feeling to wake up to such messages and it boosts your own motivation to continue what you are doing.</p>

<p><img src="http://rahulpnath.com/images/share_and_inspire_chat.png" alt="Share and Inspire" class="center"></p>

<p>Social media plays a great role in spreading information these days. When you see people in your own friend&rsquo;s circle start doing things that you have always wanted to, it gives you an extra push to give it a try. There might be some people who feel you are sharing too much of things that don&rsquo;t interest them. For those, there is always an option to un-follow, mute, filter etc. Don&rsquo;t let that thought stop you from sharing things that you do.</p>

<p>Such a small act of sharing, even things that you might have seen someone do could add up and be of big impact to someone else, often referred to as the <a href="https://www.hanselman.com/blog/TheButterflyEffectOfTechnologyCommunity.aspx">Butterfly Effect</a>.</p>

<blockquote><p>The <strong>Butterfly Effect</strong>: This effect grants the power to cause a hurricane in China to a butterfly flapping its wings in New Mexico. It may take a very long time, but the connection is real. If the butterfly had not flapped its wings at just the right point in space/time, the hurricane would not have happened. - <a href="http://fractalfoundation.org/resources/what-is-chaos-theory/">Chaos Theory</a></p></blockquote>

<p>Share things that you do, share positive things and inspire others!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Four Finger Swipe Gesture to Switch Between Virtual Machines]]></title>
    <link href="http://rahulpnath.com/blog/four-finger-swipe-gesture-to-switch-between-virtual-machines/"/>
    <updated>2018-01-31T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/four-finger-swipe-gesture-to-switch-between-virtual-machines</id>
    <content type="html"><![CDATA[<p>Of late I have been working for multiple clients at the same time. Different clients have different development environments, which has forced me into using Virual Machines (VM&rsquo;s) for my day to day work. I will cover my actual setup and new way of working using VM&rsquo;s in a different post.</p>

<p>When working on VM&rsquo;s I often have to switch to the host machine for email, chat and a few other programs that I have just on my host machine. Minimizing the VM host is time consuming and context breaking if you are working off a single screen. On a multi monitor setup you can always have VM on one screen and host on the other. This can still get tricky if you have more than one VM&rsquo;s connected.</p>

<div style="text-align: center;">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/fcbqOe8LnhM" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
</div>


<p>The <a href="https://blogs.windows.com/windowsexperience/2015/04/16/virtual-desktops-in-windows-10-the-power-of-windowsmultiplied/">Virtual Desktops</a> feature in Windows 10 is of great help in this scenario. We can move between desktops using keyboard shortcuts (Ctrl + Win + Right/Left Arrow). But with the VM running on separate Virtual Desktop any key presses gets picked up by the VM operating system and not by the host. This means that you cannot use the keyboard shortcuts to switch host desktops from inside a VM. However you can move between desktops using the Four Finger swipe gesture on your touchpad (if that is supported). These swipe gestures are picked up only by the host machine OS, unlike the keyboard shortcuts. So even when you are inside a VM, doing the four finger swipe gesture tells the host OS to switch desktops. This allows you to easily navigate between VM&rsquo;s running on different Virtual Desktops.</p>

<p>Hope this helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trips for the (Long) Weekend Around Sydney]]></title>
    <link href="http://rahulpnath.com/blog/trips-for-the-long-weekend-around-sydney/"/>
    <updated>2018-01-09T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/trips-for-the-long-weekend-around-sydney</id>
    <content type="html"><![CDATA[<p>A while back I had written about various <a href="http://www.rahulpnath.com/blog/one-day-trips-around-sydney/">one-day trip options around Sydney</a>. Here is a list of places that we traveled around Sydney during long weekend breaks with a day or two overnight stays.</p>

<blockquote><p><a href="https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read"><strong>TLDR;</strong></a></p>

<ul>
<li><a href="http://www.rahulpnath.com/blog/three-day-trip-to-coffs-harbour-from-sydney/">Coffs Harbour</a></li>
<li><a href="https://www.portmacquarieinfo.com.au/">Port Macquarie</a></li>
<li><a href="http://www.grandpacificdrive.com.au/">Grand Pacific Drive</a></li>
<li><a href="https://www.visitnsw.com/destinations/blue-mountains?nst=0">Blue Mountains</a></li>
<li><a href="https://visitcanberra.com.au/">Canberra</a></li>
</ul>
</blockquote>

<h3><a href="http://www.rahulpnath.com/blog/three-day-trip-to-coffs-harbour-from-sydney/">Coffs Harbour</a></h3>

<p><a href="http://www.rahulpnath.com/blog/three-day-trip-to-coffs-harbour-from-sydney/">Coffs Harbour</a> is one of the places that I liked the most of all my trips. It&rsquo;s been almost a year since I made my trip and the memories are still fresh. The beaches are great, especially the Jetty Beach. The rainforest walk in Dorrigo was the best I have had to date, especially because of the rain the night before. Coffs Harbour is perfect for a 3-4 days trip and there are a lot of places to visit around.</p>

<p><img alt="Jetty Beach, Coffs Harbour" src="http://rahulpnath.com/images/coffs_harbour_jetty_beach_toys.jpg" /></p>

<h3><a href="https://www.portmacquarieinfo.com.au/">Port Macquarie</a></h3>

<p>We headed off to Port Macquarie to celebrate Gauthams birthday. Gautham likes strawberries a lot which was why we chose Port Macquarie. <a href="http://www.ricardoes.com/">Ricardoes Tomatoes &amp; Strawberries</a> is located just ten minutes north of Port Macquarie and provides a unique experience for picking your own strawberries. You can spend around 2-3 hours here and make sure you don&rsquo;t miss the scones from the cafe. Port Macquarie is also a great place for whale watching and we headed off on an early morning trip to be with the whales. The boat ride (<a href="https://www.portjet.com.au/">PortJet</a>) in itself is an experience and to our luck, we were able to see around 3 whales up close. We also went to Dooragan National Park, Kattang, Perpendicular Point and Charles Hamsey lookout.</p>

<p><img alt="Whale watching and Strawberry picking, Port Macquarie" src="http://rahulpnath.com/images/port_macquarie.jpg" /></p>

<h3><a href="http://www.grandpacificdrive.com.au/">Grand Pacific Drive</a></h3>

<p>The Grand Pacific Drive makes a great one day trip as well as a multi-day trip for those who want to take their time along this stretch of land. Starting from Royal National Park and stretching all the way to Sapphire Coast, this makes a great drive with beautiful scenery and also a lot of places to visit. The <a href="http://www.grandpacificdrive.com.au/">Grand Pacific Drive</a> site has all the details that you need to plan your trip. It also has a trip planner that makes planning easier. If you want to cover most of the places along the way during a single trip, it is best to give it 2-3 days. During my trip, I stopped over at Wollongong and only made my way till Kiama.</p>

<p><a href="http://www.grandpacificdrive.com.au/">
    <img src="http://rahulpnath.com/images/sydney_trip_gpd.png" class="center" alt="Grand Pacific Drive" />
</a></p>

<h3><a href="https://www.visitnsw.com/destinations/blue-mountains?nst=0">Blue Mountains</a></h3>

<p>Just 90 minutes from Sydney by car, the Blue Mountains has a lot of attractions worth visiting, making it a good place for an extended weekend trip. Wentworth Falls, Echo Point, and Three Sisters are some of the popular lookouts. <a href="https://www.scenicworld.com.au/">Scenic World</a> offers some good rides and entertainment for kids. I liked the worlds steepest incline railway ride in particular. The entry tickets are a bit overpriced though.</p>

<p><img alt="Three Sisters, Blue Mountains" class="center" src="http://rahulpnath.com/images/three_sisters_blue_mountains.jpg" /></p>

<p>Jenolan Caves is another one hour drive from the Blue Mountains and is a must-do. It&rsquo;s great for people of all ages and if you have kids they will love it. Make sure you check the different <a href="http://www.jenolancaves.org.au/">cave options</a> and choose one that fits the people in your group. Booking a spot in advance might help and make sure you arrive on time. The drive up there might be a bit slower so give enough buffer time before your cave walk starts.</p>

<h3><a href="https://visitcanberra.com.au/">Canberra</a></h3>

<p>Unlike Sydney, Canberra is a planned city and you can tell that from the moment you enter it. It&rsquo;s a beautiful little city with lots of variety of things to visit. We started off with the <a href="https://www.cockingtongreen.com.au/">Cockington Green Gardens</a> followed by the <a href="http://nationaldinosaurmuseum.com.au/">National Dinosaur museum</a>. You can spend almost half a day with these and try out the <a href="https://visitcanberra.com.au/eat-and-drink/57031e8c5d234a7604ea80b2/the-hamlet">Hamlet, Food Trucks</a>. The <a href="https://www.aph.gov.au/Visit_Parliament">Parliment House</a> and <a href="https://www.awm.gov.au/">Australian War Memorial</a> is also worth visiting. If you time your visit during September-October you can also see the <a href="https://visitcanberra.com.au/events/56b23aea266140594567dbbe/floriade">Floriade</a> - the tulip flower festival.</p>

<p><img alt="Floriade Tulip Festival, Canberra" class="center" src="http://rahulpnath.com/images/canberra_tulip_festival.jpg" /></p>

<p>Nelson Bay, Hunter Valley, Orange, Port Stephens etc are some of the places that are on our list but could not make it yet. I moved over to Brisbane end of last year and not sure when I will have another chance to explore more around Sydney. But I have new places to look forward to now - Exploring Brisbane!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Build and Deploy Pipeline for a .NET Core Console Application]]></title>
    <link href="http://rahulpnath.com/blog/build-and-deploy-a-net-core-console-application/"/>
    <updated>2018-01-03T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/build-and-deploy-a-net-core-console-application</id>
    <content type="html"><![CDATA[<p>I was given a console application written in .NET Core 2.0 and asked to set up a continuous deployment pipeline using <a href="https://www.jetbrains.com/teamcity/">TeamCity</a> and <a href="https://octopus.com/">Octopus Deploy</a>. I struggled a bit with some parts, so thought it&rsquo;s worth putting together a post on how I went about it. If you have a better or different way of doing things, please shout out in the comments below.</p>

<p>At the end of this post, we will have a console application that is automatically deployed to a server and running, anytime a change is pushed to the associated source control repository.</p>

<h3>Setting Up TeamCity</h3>

<p>Create a <a href="https://confluence.jetbrains.com/display/TCD10/Creating+and+Editing+Projects">New Project</a> and add a <a href="https://confluence.jetbrains.com/display/TCD10/Creating+and+Editing+Build+Configurations">new build configuration</a> just like you would for any other project. Since the application is in .NET Core, install the <a href="https://github.com/JetBrains/teamcity-dotnet-plugin">.NET CLI plugin</a> on the TeamCity server.</p>

<p><img src="http://rahulpnath.com/images/net_core_teamcity_build_steps.png" alt="Build Steps to build .Net Core"></p>

<p>The first three build steps use the .NET CLI to <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore?tabs=netcore2x">Restore</a>, <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build?tabs=netcore2x">Build</a> and <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish?tabs=netcore2x">Publish</a> the application. Thee three steps restore the dependencies of the project, builds it and publishes all the relevant DLL&rsquo;s into the publish folder.</p>

<p>The published application now needs to be packaged for deployment. In my case, deployments are managed using Octopus Deploy. For .NET projects, the preferred way of packaging for Octopus is using <a href="https://octopus.com/docs/packaging-applications/creating-packages/nuget-packages/using-octopack">Octopack</a>. However, OctoPack does not support .NET Core projects. The recommendation is to either use <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-pack?tabs=netcore2x">dotnet pack</a> or <a href="https://octopus.com/docs/packaging-applications/creating-packages/nuget-packages/using-octo.exe">Octo.exe pack</a>. Using the latter I have set up a Command Line build step to pack the contents of the published folder into a zip (.nupkg) file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>octo pack --id ApplicationName --version %build.number% --basePath published-app
</span></code></pre></td></tr></table></div></figure>


<p>The NuGet package is published to the NuGet server used by Octopus. Using the <a href="https://octopus.com/docs/api-and-integration/teamcity">Octopus Deploy: Create Release</a> build step, a new release is triggered in Octopus Deploy.</p>

<h3>Setting Up Octopus Deploy</h3>

<p>Create a <a href="https://octopus.com/docs/deployment-process/projects">new project</a> in Octopus Deploy to manage deployments. Under the Process tab, I have two <a href="https://octopus.com/docs/deployment-process/steps">steps</a> - one to deploy the Package and another to start the application.</p>

<p><img src="http://rahulpnath.com/images/net_core_octopus_deploy_process.png" alt="Octopus Deploy Process Steps"></p>

<p>For the Deploy Package step I have enabled Custom Deployment Scripts and <a href="https://octopus.com/docs/deploying-applications/deploying-asp.net-core-web-applications/json-configuration-variables-feature">JSON Configuration variables</a>. Under the pre-deployment script, I stop any existing .NET applications. If multiple .NET applications are running on the box, select your application explicitly.</p>

<figure class='code'><figcaption><span>Pre Deployment Script</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='powershell'><span class='line'><span class="nb">Stop-Process</span> <span class="n">-Name</span> <span class="n">dotnet</span> <span class="n">-Force</span> <span class="n">-ErrorAction</span> <span class="n">SilentlyContinue</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once the package is deployed, the custom script starts up the application.</p>

<figure class='code'><figcaption><span>Run App</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='powershell'><span class='line'><span class="n">cd</span> <span class="n">C</span><span class="err">:</span><span class="p">\</span><span class="n">DeploymentFolder</span>
</span><span class='line'><span class="nb">Start-Process</span> <span class="n">dotnet</span> <span class="p">.\</span><span class="n">ApplicationName</span><span class="p">.</span><span class="n">dll</span>
</span></code></pre></td></tr></table></div></figure>


<p>With all that set, any time a change is pushed into the source control repository, TeamCity picks that up, build and triggers a deployment to the configured environments in Octopus Deploy. Hope this helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Text Editing - Convert Text Casing]]></title>
    <link href="http://rahulpnath.com/blog/text-editing-convert-text-casing/"/>
    <updated>2018-01-02T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/text-editing-convert-text-casing</id>
    <content type="html"><![CDATA[<p>Often when working with SQL queries, I come across the need to capitalize SQL keywords across in a large query. For, e.g., to capitalize SELECT, WHERE, FROM clauses in an SQL query. When it is a large query/stored procedure, it is faster done using some text editor. Sublime Text is my preferred editor for such kind of text manipulations.</p>

<p>Sublime Text Editor comes with a few built-in text casing converters that we can use, to convert text from one case to another. Using the <a href="https://en.wikipedia.org/wiki/Simultaneous_editing">simultaneous editing</a> feature, we can combine it with case conversion and manipulate large documents easily.</p>

<p><img src="http://rahulpnath.com/images/textediting_convert_case.png" alt="Convert case options in sublime text" ></p>

<p>For example, let&rsquo;s say I have this below SQL query. As you can notice the SELECT and FROM keywords are cased differently across the query.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">From</span> <span class="n">Table1</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">From</span> <span class="n">Table2</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">From</span> <span class="n">Table3</span>
</span><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">Table4</span>
</span><span class='line'><span class="k">Select</span> <span class="o">*</span> <span class="k">From</span> <span class="n">Table5</span>
</span></code></pre></td></tr></table></div></figure>


<p>To standardize this (preferably capitalize all), highlight one of the &lsquo;select&rsquo; keywords and highlight all occurrences of the keyword (ALT + F3). Once all occurrences of &lsquo;select&rsquo; is highlighted, bring up the <a href="http://docs.sublimetext.info/en/latest/extensibility/command_palette.html">command pallete</a> (CTRL + SHIFT + P on windows) and search for &lsquo;Convert Case&rsquo;. From the options listed choose the case that you want to convert. All selected occurrences of the keyword will now be in the selected case.</p>

<p>Hope this helps you when you have a lot of text case manipulations to be done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2017: What Went Well, What Didn't and Goals]]></title>
    <link href="http://rahulpnath.com/blog/2017-recap/"/>
    <updated>2017-12-29T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/2017-recap</id>
    <content type="html"><![CDATA[<p><img class="center" alt="Posts per month - 2016" src="http://rahulpnath.com/images/happy_new_year.png"/></p>

<p><a href="http://www.rahulpnath.com/blog/2016-recap/">A year</a> has gone by so fast, and it is again time to do a year review.</p>

<blockquote><p><strong>TLDR;</strong></p>

<p>2017 was the transformation year. Regular exercise and healthy eating helped <a href="http://www.rahulpnath.com/blog/how-i-lost-13-kilos-in-one-and-half-months/">loose around 20 kilos</a>. Lots of travel and blogging made it an excellent year. Reading, Photography and Open source did not go that great. Looking forward to 2018!</p></blockquote>

<h3>What went well</h3>

<h4><strong>Blogging</strong></h4>

<p>It has been both good and a bad year as far as this blog. Including the &lsquo;<a href="http://www.rahulpnath.com/blog/category/tipow/">Tip of the Week</a>&rsquo; series I wrote seventy-six posts this year with an average of over six posts per month. This is the good part, as it is well past the goal of a <em>minimum four posts a month</em> goal set last year. But looking at the actual posts per month graph below, it is clear that I have fallen short of it on an actual month by month basis. Up until August, I had a steady stream of posts coming in, from when it started dropping down, with even months (November) with no posts. Mainly it&rsquo;s my laziness to blame, but I can also tell reasons like Vietnam trip, Shifting to Brisbane, etc.</p>

<p><img src="http://rahulpnath.com/images/2017_postpermonth.png" alt="Posts per month in the year 2017" /></p>

<h4><strong>Running</strong></h4>

<p>I had started running towards the end of December 2016. One of my goals for 2017 was running, and it has had a good improvement. Ran over 750 kilometers including a half marathon. I am yet to participate in any running events and am planning to in the coming year. I have also started cycling, and it is an excellent way to cross train.</p>

<p><a href="https://2017.strava.com/en-us/videos/92aff78b819c502351b85b8ef27e35025cd97adf/">
    <img src="http://rahulpnath.com/images/2017_sport.jpg" alt="Year in Sport" />
</a></p>

<h4><strong>Travel</strong></h4>

<p>Did our first international holiday to Vietnam for ten days and was a great experience. Also went around Australia visiting Blue Mountains, Canberra, Port Macquarie, Brisbane and lots of <a href="http://www.rahulpnath.com/blog/one-day-trips-around-sydney/">one-day trips around Sydney</a>. Mandarin Picking, Strawberry picking and Whale watching were some of the top activities for the year.</p>

<p><img src="http://rahulpnath.com/images/strawberyy_picking.jpg" alt="Strawberry Picking, Ricardoes" /></p>

<h3>What didn&rsquo;t go well</h3>

<ul>
<li><p><strong>Reading</strong> Had set out with a <a href="https://www.goodreads.com/challenges/5493-2017-reading-challenge">goal of 21 books</a> but ended up finishing only ten books. Of the books I read liked <a href="https://www.amazon.com/Mindset-Psychology-Carol-S-Dweck/dp/0345472322">Mindset</a> and <a href="https://www.amazon.com/How-Win-Friends-Influence-People/dp/1439167346/">How to Win Friends and Influence People,</a> was the best.</p></li>
<li><p><strong>Photography</strong>
One trip every three months and post photos were one another goal. The travel part went good (see above), but my DSLR always remained in the bag. Except for a few pictures on the phone camera, there was not much photography done.</p></li>
<li><p><strong>FSharp</strong>
FSharp was again on and off this year. Apart from a <a href="http://www.rahulpnath.com/blog/todoist-template-transformer-transform-tasks-to-x-days-from-now/">small utility that I created for Todoist</a>, I did not do much F# work.</p></li>
</ul>


<h3>Goals for 2018</h3>

<ul>
<li><p><strong>Blogging</strong> Stick to 4 posts a month. Need to get back on schedule.</p></li>
<li><p><strong>Running</strong> Attend few running events. Run a marathon.</p></li>
<li><p><strong>Swimming</strong> Having started cycling along with running, has got me thinking about a triathlon. The only thing between is swimming, and I have no clue how to swim. Learning to swim is one of the key goals for the upcoming year. Target is to be able to swim one km.</p></li>
<li><p><strong>Open Source</strong> Start working on a side project. Need to find a matching project first.</p></li>
<li><p><strong>Reading</strong> Read 15 books</p></li>
</ul>


<p>Wishing you all a Happy and Prosperous New Year!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Laps in Training Mode - Garmin Watches]]></title>
    <link href="http://rahulpnath.com/blog/laps-in-training-mode-garmin-watches/"/>
    <updated>2017-12-28T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/laps-in-training-mode-garmin-watches</id>
    <content type="html"><![CDATA[<p>I recently upgraded to a Garmin Fenix 3 HR from my <a href="http://www.rahulpnath.com/blog/three_months_to_a_half_marathon/">Forerunner 630</a>. After a few runs with the Fenix 3, I realized that in <a href="https://twitter.com/rahulpnath/status/928145529606873088">Training Mode it does not do auto lap</a>. I have a custom training workout for a 10k with no repeat modes in it. This workout was what I used on my FR630, and it used to auto lap at 1km. That no longer happens in the Fenix 3 HR.</p>

<blockquote><p><strong>Software Details</strong></p>

<p><em>Fenix 3 HR</em>: 4.70</p>

<p><em>Forerunner 630</em>: 7.50(bdd586f)</p></blockquote>

<p><img src="http://rahulpnath.com/images/garmin_auto_lap_training.png" alt="Garming Auto Lap Not working in Training Mode, Fenix 3 HR" /></p>

<p>After googling around, I understood the auto lap under training mode is a feature only available to specific models/software versions. One of the reasoning behind it is auto lap might create issues if people are training in intervals larger than 1km. Breaking into laps at every 1km will make it harder/nearly impossible to compare their intervals. For workouts that you want auto lap at 1km (or at any custom distances), you can use Repeat feature as shown below. Setting up the workout as 10 x 1km helps to analyze the run at 1km intervals.</p>

<p><img src="http://rahulpnath.com/images/garmin_auto_lap_training_repeat.png" alt="Garming Auto Lap Using Repeat, Fenix 3 HR" /></p>

<p>Depending on the model/software version of your Garmin watch you might have to tweak your workout plans. Hope this helps</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scheduling Recurring Jobs With a Cool-Off Period]]></title>
    <link href="http://rahulpnath.com/blog/scheduling-recurring-jobs-with-a-cool-off-period/"/>
    <updated>2017-12-24T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/scheduling-recurring-jobs-with-a-cool-off-period</id>
    <content type="html"><![CDATA[<p><a href="https://flic.kr/p/8ys6Hs" class="center" ><img class="center" alt="Scheduling" src="http://rahulpnath.com/images\scheduling_jobs.jpg" /></a></p>

<p>At one of my clients, they had a requirement of scheduling various rules to sent our alert messages via SMS, Email, etc. A Rule consists of below and a few other properties</p>

<ul>
<li><strong>Stored Procedure</strong>: The Stored Procedure (yes you read it correctly) to check if an alert needs to be raised</li>
<li><strong>Polling Interval</strong>: The time interval in which a Rule needs to be checked.</li>
<li><strong>Cool-Off Period</strong>: Time to wait before running Rule again after an alert was raised.</li>
</ul>


<p>All Rules are stored in a database. New rules can be added and existing ones updated via an external application. Since the client is not yet in the Cloud, using any of Azure Functions, Lambda, Web Jobs, etc. are out of the question. It needs to be a service running on-premise, so I decided to keep it as a Windows service.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'> <span class="k">public</span> <span class="k">class</span> <span class="nc">Rule</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">StoredProc</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">TimeSpan</span> <span class="n">PollingInterval</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">TimeSpan</span> <span class="n">CoolOffPeriod</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because of my past good experiences with <a href="https://www.hangfire.io/">HangFire</a> I initially set off using that only to discover soon that it can schedule jobs only to the minute level. Even though this is a <a href="https://github.com/HangfireIO/Hangfire/issues/167">feature that has been discussed for a long time</a>, it&rsquo;s yet to be implemented. Since some of the rules are critical to the business, they want to be notified as soon as possible. This means having a polling interval in seconds for those rules.</p>

<p>After reaching out to my <a href="http://www.rahulpnath.com/blog/finding-a-job-abroad/">friends at Readify</a>, I decided to use <a href="https://www.quartz-scheduler.net/">Quartz.net</a>. Many had good experiences using it in the past and recommended it highly. One another option that came up was <a href="https://github.com/fluentscheduler/FluentScheduler">FluentScheduler</a>. There was no particular reason to go with Quartz.net.</p>

<blockquote><p><em>Quartz.NET is a full-featured, open source job scheduling system that can be used from smallest apps to large-scale enterprise systems.</em></p></blockquote>

<p>Setting up and getting started with Quartz scheduler is fast and easy. The library has a <a href="https://www.quartz-scheduler.net/documentation/index.html">well-written documentation</a>. You can update the applications configuration file to tweak various attributes of the scheduler.</p>

<figure class='code'><figcaption><span>App/Web.config file</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configSections&gt;</span>
</span><span class='line'>    <span class="nt">&lt;section</span> <span class="na">name=</span><span class="s">&quot;quartz&quot;</span> <span class="na">type=</span><span class="s">&quot;System.Configuration.NameValueSectionHandler, System, Version=1.0.5000.0,Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configSections&gt;</span>
</span><span class='line'>  <span class="nt">&lt;quartz&gt;</span>
</span><span class='line'>    <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;quartz.scheduler.instanceName&quot;</span> <span class="na">value=</span><span class="s">&quot;TestScheduler&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;quartz.jobStore.type&quot;</span> <span class="na">value=</span><span class="s">&quot;Quartz.Simpl.RAMJobStore, Quartz&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/quartz&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <a href="http://www.quartz-scheduler.org/api/2.2.1/org/quartz/simpl/RAMJobStore.html">RAMJobStore</a> indicates the store to use for storing job. There are other job stores available if you want persistence of jobs anytime the application restarts.</p>

<h3>Setting Up Jobs</h3>

<p>Basically, there are three jobs - Alert Job, CoolOff Job, and Refresh Job - set up for the whole application. The Alert and Refresh Jobs are scheduled on application start. The CoolOff Job is triggered by the Alert Job as required. Any data that is required by the job is passed in using <a href="https://www.quartz-scheduler.net/documentation/quartz-2.x/tutorial/more-about-jobs.html#jobdatamap">JobDataMap</a>.</p>

<figure class='code'><figcaption><span>Schedule an Alert Job</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="p">...</span>
</span><span class='line'><span class="kt">var</span> <span class="n">job</span> <span class="p">=</span> <span class="n">JobBuilder</span><span class="p">.</span><span class="n">Create</span><span class="p">&lt;</span><span class="n">AlertJob</span><span class="p">&gt;()</span>
</span><span class='line'>    <span class="p">.</span><span class="n">WithIdentity</span><span class="p">(</span><span class="n">rule</span><span class="p">.</span><span class="n">GetJobKey</span><span class="p">())</span>
</span><span class='line'>    <span class="p">.</span><span class="n">WithDescription</span><span class="p">(</span><span class="n">rule</span><span class="p">.</span><span class="n">Name</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="n">SetJobData</span><span class="p">(</span><span class="n">rule</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="n">Build</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">trigger</span> <span class="p">=</span> <span class="n">TriggerBuilder</span>
</span><span class='line'>    <span class="p">.</span><span class="n">Create</span><span class="p">()</span>
</span><span class='line'>    <span class="p">.</span><span class="n">WithIdentity</span><span class="p">(</span><span class="n">rule</span><span class="p">.</span><span class="n">GetTriggerKey</span><span class="p">())</span>
</span><span class='line'>    <span class="p">.</span><span class="n">StartNow</span><span class="p">()</span>
</span><span class='line'>    <span class="p">.</span><span class="n">WithSimpleSchedule</span><span class="p">(</span><span class="n">a</span> <span class="p">=&gt;</span> <span class="n">a</span>
</span><span class='line'>        <span class="p">.</span><span class="n">WithIntervalInSeconds</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span><span class="n">rule</span><span class="p">.</span><span class="n">PollingInterval</span><span class="p">.</span><span class="n">TotalSeconds</span><span class="p">)</span>
</span><span class='line'>        <span class="p">.</span><span class="n">RepeatForever</span><span class="p">())</span>
</span><span class='line'>    <span class="p">.</span><span class="n">Build</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">scheduler</span><span class="p">.</span><span class="n">ScheduleJob</span><span class="p">(</span><span class="n">job</span><span class="p">,</span> <span class="n">trigger</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4><strong>Alert Jobs</strong></h4>

<p>The Alert Job is responsible for checking the stored procedure and sending the alerts if required. If an alert is sent, it starts the CoolOff Job and pauses the current job instance. THe DisallowConcurrentExecution prevents multiple instances of the Job having the same key does not execute concurrently. We explicitly set the Job Key based on the Rule Id. This prevents any duplicate messages getting sent out if any of the job instances takes more time to execute than its set polling interval.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="na">[DisallowConcurrentExecution]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">AlertJob</span> <span class="p">:</span> <span class="n">Job</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Execute</span><span class="p">(</span><span class="n">IJobExecutionContext</span> <span class="n">context</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">alert</span> <span class="p">=</span> <span class="n">context</span><span class="p">.</span><span class="n">GetRuleFromJobData</span><span class="p">();</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">message</span> <span class="p">=</span> <span class="n">GetAlertMessage</span><span class="p">(</span><span class="n">alert</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">message</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">SendMessage</span><span class="p">(</span><span class="n">message</span><span class="p">);</span>
</span><span class='line'>            <span class="n">CoolOff</span><span class="p">(</span><span class="n">alert</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">CoolOff</span><span class="p">(</span><span class="n">Rule</span> <span class="n">rule</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">job</span> <span class="p">=</span> <span class="n">JobBuilder</span><span class="p">.</span><span class="n">Create</span><span class="p">&lt;</span><span class="n">CoolOffJob</span><span class="p">&gt;()</span>
</span><span class='line'>            <span class="p">.</span><span class="n">WithIdentity</span><span class="p">(</span><span class="n">jobKey</span><span class="p">)</span>
</span><span class='line'>            <span class="p">.</span><span class="n">WithDescription</span><span class="p">(</span><span class="n">rule</span><span class="p">.</span><span class="n">MessageTitle</span><span class="p">)</span>
</span><span class='line'>            <span class="p">.</span><span class="n">SetJobData</span><span class="p">(</span><span class="n">rule</span><span class="p">)</span>
</span><span class='line'>            <span class="p">.</span><span class="n">Build</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">var</span> <span class="n">trigger</span> <span class="p">=</span> <span class="n">TriggerBuilder</span>
</span><span class='line'>            <span class="p">.</span><span class="n">Create</span><span class="p">()</span>
</span><span class='line'>            <span class="p">.</span><span class="n">WithIdentity</span><span class="p">(</span><span class="n">rule</span><span class="p">.</span><span class="n">GetCoolOffTriggerKey</span><span class="p">())</span>
</span><span class='line'>            <span class="p">.</span><span class="n">StartAt</span><span class="p">(</span><span class="n">rule</span><span class="p">.</span><span class="n">GetCoolOffDateTimeOffset</span><span class="p">())</span>
</span><span class='line'>            <span class="p">.</span><span class="n">Build</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">scheduler</span><span class="p">.</span><span class="n">PauseJob</span><span class="p">(</span><span class="n">rule</span><span class="p">.</span><span class="n">GetJobKey</span><span class="p">());</span>
</span><span class='line'>        <span class="n">scheduler</span><span class="p">.</span><span class="n">ScheduleJob</span><span class="p">(</span><span class="n">job</span><span class="p">,</span> <span class="n">trigger</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4><strong>Cool-Off Job</strong></h4>

<p>Cool-Off Jobs is a one time job scheduled by the Alert Job after an alert is sent successfully. The CoolOff job is scheduled to start after the Cool-Off time as configured for the alert. This triggers the job only after the set amount of time. It Resumes the original Rule Job to continue execution.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">CoolOffJob</span> <span class="p">:</span> <span class="n">IJob</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Execute</span><span class="p">(</span><span class="n">IJobExecutionContext</span> <span class="n">context</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">alert</span> <span class="p">=</span> <span class="n">context</span><span class="p">.</span><span class="n">GetRuleFromJobData</span><span class="p">();</span>
</span><span class='line'>        <span class="n">ScheduleHelper</span><span class="p">.</span><span class="n">ResumeJob</span><span class="p">(</span><span class="n">alert</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4><strong>Refresh Job</strong></h4>

<p>The Refresh Job is a recurring job, that polls the database for any changes to the Rules themselves If any change is detected,it removes the existing schedules for the alert and adds the updated alert job.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="na">[DisallowConcurrentExecution]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">RefreshJob</span> <span class="p">:</span> <span class="n">IJob</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Execute</span><span class="p">(</span><span class="n">IJobExecutionContext</span> <span class="n">context</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">allRules</span> <span class="p">=</span> <span class="n">GetAllRules</span><span class="p">();</span>
</span><span class='line'>        <span class="n">ScheduleHelper</span><span class="p">.</span><span class="n">RefreshRules</span><span class="p">(</span><span class="n">allRules</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>With these three jobs, all the rules get scheduled at the start of the application and run continuously. Anytime a change is made to the rule itself, the Refresh Job refreshes it within the time interval that it is scheduled for.</p>

<div class="alert alert-info">
<b>Tip:</b>If there are a lot of rules with the same polling interval it will be good to stagger their starting time using a delayed start per job instance. Doing that will make sure that all jobs do not get polled for at the same time.
</div>


<p>So far I have found the Quartz library stable and reliable and have not faced any issues with it. The library is also quite flexible and adapts well to the different needs.</p>

<p>Hope this helps. Merry Xmas!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Postman - Chaining Requests to Speed Up Manual API Tests]]></title>
    <link href="http://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests/"/>
    <updated>2017-12-11T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/postman-chaining-requests-to-speed-up-manual-api-tests</id>
    <content type="html"><![CDATA[<p>I was recently playing around with <a href="https://www.messagemedia.com.au/">MessageMedia API</a> trying to <a href="https://developers.messagemedia.com/code/messages-api-documentation/">send SMS and get the status of the SMS sent</a>. Sending the SMS and getting the status of the last sent SMS always happened in succession when testing it manually. Once I send the message, I waited for the API response, grabbed the message id from the response and used that to form the get status request.</p>

<p><a href="https://www.getpostman.com/">Postman</a> is a useful tool if you are building or testing APIs. It allows to create, send and manage API requests.</p>

<p><img src="http://rahulpnath.com/images/postman_chaining_requests.png" alt="Postman Chaining Requests" /></p>

<p>I added two requests and saved it to a collection in Postman - one to Send Message and other to Get Message status. I have created an environment variable for holding the message id. For the request that sends a message, the below Test snippet is added. It parses the response body of the request and extracts the message id of the last send message. This is then saved to the environment variable. The <a href="https://www.getpostman.com/docs/postman/scripts/test_scripts">Test</a> snippet is always run after performing the request.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">jsonData</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">responseBody</span><span class="p">);</span>
</span><span class='line'><span class="nx">postman</span><span class="p">.</span><span class="nx">setEnvironmentVariable</span><span class="p">(</span><span class="s2">&quot;messageId&quot;</span><span class="p">,</span> <span class="nx">jsonData</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">message_id</span><span class="p">);</span>
</span><span class='line'><span class="nx">tests</span><span class="p">[</span><span class="s2">&quot;Success&quot;</span><span class="p">]</span><span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The Get message request uses the messageId from the environment variables to construct its URL. The URL looks like below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>https://api.messagemedia.com/v1/messages/{{messageId}}
</span></code></pre></td></tr></table></div></figure>


<p>When executing this request, it fetches the messageId from the environment variable, which is set by the previous request. You no longer have to copy message id manually and use it in the URL. This is how we chain the data from one request to another request. Chaining requests is also useful in automated testing using Postman. Hope this helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip of the Week: Text Editing - Extract Data]]></title>
    <link href="http://rahulpnath.com/blog/text-editing-extract-data/"/>
    <updated>2017-10-19T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/text-editing-extract-data</id>
    <content type="html"><![CDATA[<p>At times you might need to extract data from a large text. Let&rsquo;s say you have a JSON response, and you want to extract all the <em>id</em> fields in the response and <a href="http://www.rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines/">combine them as comma separated</a>. Here&rsquo;s how you can easily extract data from large text using Sublime (or any other text editor that supports simultaneous editing).</p>

<figure class='code'><figcaption><span>https://jsonplaceholder.typicode.com/posts</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;userId&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;title&quot;</span><span class="p">:</span> <span class="s2">&quot;sunt aut facere repellat provident occaecati excepturi optio reprehenderit&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;body&quot;</span><span class="p">:</span> <span class="s2">&quot;quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;userId&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;title&quot;</span><span class="p">:</span> <span class="s2">&quot;qui est esse&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;body&quot;</span><span class="p">:</span> <span class="s2">&quot;est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Again the key here is to select the recurring pattern first. In this case, it is <em>&ldquo;id&rdquo;:</em> and then selecting all occurrences of that. Once all occurrences are selected, we can select the whole line and extract that out. Repeat the same to remove the <em>id</em> text. Then follow the same steps we used to <a href="http://www.rahulpnath.com/blog/text-editing-split-or-combine-multiple-lines/">combine text</a>.</p>

<div style="text-align: center;">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/ouKm7Wkldp0" frameborder="0" allowfullscreen></iframe>
</div>


<p>Hope this helps you to extract data from large text files.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Authenticating with Azure Key Vault Using Managed Service Identity]]></title>
    <link href="http://rahulpnath.com/blog/authenticating-with-azure-key-vault-using-managed-service-identity/"/>
    <updated>2017-10-18T00:00:00+00:00</updated>
    <id>http://rahulpnath.com/blog/authenticating-with-azure-key-vault-using-managed-service-identity</id>
    <content type="html"><![CDATA[<p><strong><em>How do you secure the access keys to the Key Vault itself?</em></strong>.</p>

<p>If you use ClientId/Secret to authenticate with a key vault, then you are likely to end up having these in the web.config file (<a href="http://www.rahulpnath.com/blog/keeping-sensitive-configuration-data-out-of-source-control/">there still are ways around</a>) which is what we initially set out to avoid, by using Azure Key Vault. The recommended approach till now was to use certificate-based authentication so that you need to have only the thumbprint id of the certificate in the web.config and you can deploy the certificate along with the application. If you are not familiar with either way of authenticating with Key Vault, then check out this <a href="http://www.rahulpnath.com/blog/authenticating-a-client-application-with-azure-key-vault/">article</a>. With the Secret or certificate-based authentication, we also run into the problem of credentials expiring which in turn can lead to application downtime.</p>

<p>Managed Service Identity (MSI) solves this problem by allowing an Azure App Service, Azure Virtual Machines or Azure Functions to connect to Key Vault (and a few other services) without any explicit credentials in the code.</p>

<blockquote><p><em><a href="https://docs.microsoft.com/en-us/azure/active-directory/msi-overview">Managed Service Identity</a> (MSI) makes solving this problem simpler by giving Azure services an automatically managed identity in Azure Active Directory (Azure AD). You can use this identity to authenticate to any service that supports Azure AD authentication, including Key Vault, without having any credentials in your code.</em></p></blockquote>

<p>MSI can be enabled through the Azure Portal. E.g., to enable MSI for App Service, the portal has an option as shown below.</p>

<p><img src="http://rahulpnath.com/images/keyvault_managed_service_identity.png" class="center" alt="Enable Managed Service Identity for Azure App Service" /></p>

<p>Once enabled we can add an access policy in the key vault to give permissions to the Azure App service. Search by the app service name and assign the required access policies.</p>

<p>For an application to access the key vault, we need to use <em>AzureServiceTokenProvider</em> from <a href="https://www.nuget.org/packages/Micros">Microsoft.Azure.Services.AppAuthentication</a> NuGet package. Instead of using the ClientCredential or ClientAssertionCertificate to acquire the token, we will use AzureServiceTokenProvider to acquire the token for us.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">var</span> <span class="n">azureServiceTokenProvider</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AzureServiceTokenProvider</span><span class="p">();</span>
</span><span class='line'><span class="kt">var</span> <span class="n">keyVaultClient</span> <span class="p">=</span> <span class="k">new</span> <span class="n">KeyVaultClient</span><span class="p">(</span><span class="k">new</span> <span class="n">KeyVaultClient</span><span class="p">.</span><span class="n">AuthenticationCallback</span><span class="p">(</span><span class="n">azureServiceTokenProvider</span><span class="p">.</span><span class="n">KeyVaultTokenCallback</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>The <a href="https://azure.microsoft.com/en-us/resources/samples/app-service-msi-keyvault-dotnet/">AzureServiceTokenProvider</a> class tries the following methods to get an access token:-</em></p>

<ol>
<li><em>Managed Service Identity (MSI) - for scenarios where the code is deployed to Azure, and the Azure resource supports MSI.</em></li>
<li><em>Azure CLI (for local development) - Azure CLI version 2.0.12 and above supports the get-access-token option. AzureServiceTokenProvider uses this option to get an access token for local development.</em></li>
<li><em>Active Directory Integrated Authentication (for local development). To use integrated Windows authentication, your domain’s Active Directory must be federated with Azure Active Directory. Your application must be running on a domain-joined machine under a user’s domain credentials.</em></li>
</ol>


<h3>Local Development</h3>

<p>For the AzureServiceTokenProvider to work locally we need to install the <a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest">Azure CLI</a> and also setup an environment variable - <em>AzureServicesAuthConnectionString</em>. Depending on whether you want to use ClientId/Secret or ClientId/Certificate-based authentication the value for the environment variable changes.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>AzureServicesAuthConnectionString to RunAs=App;AppId=AppId;TenantId=TenantId;AppKey=Secret.
</span><span class='line'>Or
</span><span class='line'>RunAs=App;AppId=AppId;TenantId=TenantId;CertificateThumbprint=Thumbprint;CertificateStoreLocation=CurrentUser
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://rahulpnath.com/images/kkeyvault_msi_tenantId.png" class="center" alt="Get Tenant Id and AppId" /></p>

<p>As shown above, you can get the TenantId and AppId from the App Registrations page in the Azure portal. Clicking on the Endpoints button reveals a list of URL&rsquo;s which has the TenantId GUID. The AppId is displayed against each of the AD application. Once you set the environment variable, the application will be able to connect to Key Vault without any additional configuration entries in web/app config.</p>

<p>Azure Managed Service Identity makes it easier to connect to Key Vault and removes the need of having any sensitive information in the application configuration file. It also helps remove the overhead of renewing the certificate/secrets used to connect to the Vault. One less thing to worry about the application!</p>
]]></content>
  </entry>
  
</feed>
